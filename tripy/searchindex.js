Search.setIndex({"docnames": ["compiler/arg_info", "compiler/executable", "compiler/index", "compiler/input_info", "config", "datatype", "device", "exception/index", "exception/tripy_exception", "index", "logger", "modules/conv", "modules/conv_transpose", "modules/embedding", "modules/group_norm", "modules/index", "modules/layer_norm", "modules/linear", "modules/parameter", "post0_developer_guides/architecture", "post0_developer_guides/debugging", "post0_developer_guides/design-decisions", "post0_developer_guides/how-to-add-new-ops", "post0_developer_guides/mlir-dialect-python-apis", "pre0_user_guides/introduction-to-tripy", "pre0_user_guides/quantization", "processed_mds/README", "processed_mds/post0_developer_guides/architecture", "processed_mds/post0_developer_guides/debugging", "processed_mds/post0_developer_guides/design-decisions", "processed_mds/post0_developer_guides/how-to-add-new-ops", "processed_mds/post0_developer_guides/mlir-dialect-python-apis", "processed_mds/pre0_user_guides/introduction-to-tripy", "processed_mds/pre0_user_guides/quantization", "shape", "tensor/index", "tensor_operations/abs", "tensor_operations/all", "tensor_operations/allclose", "tensor_operations/any", "tensor_operations/arange", "tensor_operations/argmax", "tensor_operations/argmin", "tensor_operations/cast", "tensor_operations/concatenate", "tensor_operations/copy", "tensor_operations/cos", "tensor_operations/dequantize", "tensor_operations/exp", "tensor_operations/expand", "tensor_operations/flip", "tensor_operations/full", "tensor_operations/full_like", "tensor_operations/gather", "tensor_operations/gelu", "tensor_operations/index", "tensor_operations/iota", "tensor_operations/iota_like", "tensor_operations/log", "tensor_operations/masked_fill", "tensor_operations/max", "tensor_operations/maximum", "tensor_operations/mean", "tensor_operations/minimum", "tensor_operations/ones", "tensor_operations/ones_like", "tensor_operations/permute", "tensor_operations/plugin", "tensor_operations/prod", "tensor_operations/quantize", "tensor_operations/relu", "tensor_operations/reshape", "tensor_operations/rsqrt", "tensor_operations/sigmoid", "tensor_operations/silu", "tensor_operations/sin", "tensor_operations/softmax", "tensor_operations/split", "tensor_operations/sqrt", "tensor_operations/squeeze", "tensor_operations/sum", "tensor_operations/tanh", "tensor_operations/transpose", "tensor_operations/tril", "tensor_operations/triu", "tensor_operations/unsqueeze", "tensor_operations/var", "tensor_operations/where", "tensor_operations/zeros", "tensor_operations/zeros_like"], "filenames": ["compiler/arg_info.rst", "compiler/executable.rst", "compiler/index.rst", "compiler/input_info.rst", "config.rst", "datatype.rst", "device.rst", "exception/index.rst", "exception/tripy_exception.rst", "index.rst", "logger.rst", "modules/conv.rst", "modules/conv_transpose.rst", "modules/embedding.rst", "modules/group_norm.rst", "modules/index.rst", "modules/layer_norm.rst", "modules/linear.rst", "modules/parameter.rst", "post0_developer_guides/architecture.rst", "post0_developer_guides/debugging.rst", "post0_developer_guides/design-decisions.rst", "post0_developer_guides/how-to-add-new-ops.rst", "post0_developer_guides/mlir-dialect-python-apis.rst", "pre0_user_guides/introduction-to-tripy.rst", "pre0_user_guides/quantization.rst", "processed_mds/README.md", "processed_mds/post0_developer_guides/architecture.md", "processed_mds/post0_developer_guides/debugging.md", "processed_mds/post0_developer_guides/design-decisions.md", "processed_mds/post0_developer_guides/how-to-add-new-ops.md", "processed_mds/post0_developer_guides/mlir-dialect-python-apis.md", "processed_mds/pre0_user_guides/introduction-to-tripy.md", "processed_mds/pre0_user_guides/quantization.md", "shape.rst", "tensor/index.rst", "tensor_operations/abs.rst", "tensor_operations/all.rst", "tensor_operations/allclose.rst", "tensor_operations/any.rst", "tensor_operations/arange.rst", "tensor_operations/argmax.rst", "tensor_operations/argmin.rst", "tensor_operations/cast.rst", "tensor_operations/concatenate.rst", "tensor_operations/copy.rst", "tensor_operations/cos.rst", "tensor_operations/dequantize.rst", "tensor_operations/exp.rst", "tensor_operations/expand.rst", "tensor_operations/flip.rst", "tensor_operations/full.rst", "tensor_operations/full_like.rst", "tensor_operations/gather.rst", "tensor_operations/gelu.rst", "tensor_operations/index.rst", "tensor_operations/iota.rst", "tensor_operations/iota_like.rst", "tensor_operations/log.rst", "tensor_operations/masked_fill.rst", "tensor_operations/max.rst", "tensor_operations/maximum.rst", "tensor_operations/mean.rst", "tensor_operations/minimum.rst", "tensor_operations/ones.rst", "tensor_operations/ones_like.rst", "tensor_operations/permute.rst", "tensor_operations/plugin.rst", "tensor_operations/prod.rst", "tensor_operations/quantize.rst", "tensor_operations/relu.rst", "tensor_operations/reshape.rst", "tensor_operations/rsqrt.rst", "tensor_operations/sigmoid.rst", "tensor_operations/silu.rst", "tensor_operations/sin.rst", "tensor_operations/softmax.rst", "tensor_operations/split.rst", "tensor_operations/sqrt.rst", "tensor_operations/squeeze.rst", "tensor_operations/sum.rst", "tensor_operations/tanh.rst", "tensor_operations/transpose.rst", "tensor_operations/tril.rst", "tensor_operations/triu.rst", "tensor_operations/unsqueeze.rst", "tensor_operations/var.rst", "tensor_operations/where.rst", "tensor_operations/zeros.rst", "tensor_operations/zeros_like.rst"], "titles": ["ArgInfo", "Executable", "Compiler", "InputInfo", "config", "dtype", "device", "Exception", "TripyException", "Tripy: A Python Programming Model For TensorRT", "logger", "Conv", "ConvTranspose", "Embedding", "GroupNorm", "Module", "LayerNorm", "Linear", "Parameter", "Architecture", "Debugging MLIR-TensorRT backend", "Design Decisions", "Adding New Operators", "Using Python APIs of MLIR Dialects", "An Introduction To Tripy", "Quantization", "Tripy: A Python Programming Model For TensorRT", "Architecture", "Debugging MLIR-TensorRT backend", "Design Decisions", "Adding New Operators", "Using Python APIs of MLIR Dialects", "An Introduction To Tripy", "Quantization", "Shape", "Tensor", "abs", "all", "allclose", "any", "arange", "argmax", "argmin", "cast", "concatenate", "copy", "cos", "dequantize", "exp", "expand", "flip", "full", "full_like", "gather", "gelu", "Tensor Operations", "iota", "iota_like", "log", "masked_fill", "max", "maximum", "mean", "minimum", "ones", "ones_like", "permute", "plugin", "prod", "quantize", "relu", "reshape", "rsqrt", "sigmoid", "silu", "sin", "softmax", "split", "sqrt", "squeeze", "sum", "tanh", "transpose", "tril", "triu", "unsqueeze", "var", "where", "zeros", "zeros_like"], "terms": {"class": [0, 1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 29, 30, 32, 34, 35], "tripi": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "shape_bound": [0, 1], "sequenc": [0, 1, 3, 11, 12, 34, 37, 39, 40, 47, 49, 50, 51, 56, 60, 62, 64, 66, 67, 68, 69, 71, 77, 80, 86, 88], "tupl": [0, 3, 15, 22, 30, 35, 67, 79], "int": [0, 2, 3, 11, 12, 13, 14, 16, 17, 22, 30, 35, 37, 39, 41, 42, 44, 47, 49, 50, 51, 53, 56, 57, 60, 62, 64, 66, 67, 68, 69, 71, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88], "dtype": [0, 1, 2, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "sourc": [0, 1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 21, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "base": [0, 1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 30, 34, 35, 49, 53, 58, 71], "object": [0, 1, 2, 3, 6, 15, 19, 22, 27, 30, 35], "paramet": [0, 1, 2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "A": [0, 1, 6, 11, 12, 13, 14, 15, 16, 17, 18, 22, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "min": [0, 3, 83, 84], "max": [0, 3, 55, 70, 86], "indic": [0, 2, 3, 11, 12, 13, 22, 24, 30, 32, 41, 42, 49, 53, 67, 77, 83, 84, 87], "bound": [0, 40], "each": [0, 11, 12, 13, 19, 20, 25, 27, 28, 33, 54, 67, 70, 73, 74, 76, 83, 84, 87], "dimens": [0, 3, 11, 12, 16, 17, 21, 22, 29, 30, 34, 35, 37, 39, 41, 42, 44, 47, 49, 50, 53, 56, 57, 60, 62, 66, 68, 69, 71, 76, 77, 79, 80, 82, 83, 84, 85, 86], "The": [0, 1, 2, 3, 5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 21, 24, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "datatyp": [0, 22, 24, 30, 32, 34, 35, 40, 41, 42, 43, 50, 64, 65, 83, 84, 87, 88, 89], "argument": [0, 1, 2, 22, 25, 30, 33, 35, 67, 77], "arg_nam": 1, "output_devic": 1, "repres": [1, 6, 22, 30, 34, 35], "compil": [1, 3, 4, 9, 18, 20, 21, 22, 28, 29, 30], "gener": [1, 19, 21, 22, 23, 27, 29, 30, 31, 40], "__call__": [1, 11, 12, 13, 14, 15, 16, 17, 24, 32], "arg": [1, 2, 22, 30, 40], "kwarg": [1, 2, 40, 67], "tensor": [1, 2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "invok": 1, "specifi": [1, 22, 24, 25, 30, 32, 33, 37, 39, 41, 42, 43, 50, 51, 52, 53, 56, 57, 60, 62, 64, 68, 71, 79, 80, 85, 86, 88], "posit": [1, 2, 22, 25, 30, 33, 83, 84, 85], "must": [1, 2, 11, 12, 15, 19, 25, 27, 33, 35, 47, 61, 63, 66, 69, 87], "type": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 19, 22, 25, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "keyword": [1, 2], "return": [1, 2, 11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 25, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "output": [1, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 27, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "": [1, 2, 15, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 50, 67, 86], "function": [1, 2, 3, 19, 22, 24, 27, 30, 32, 40, 47, 54, 69, 70, 73, 74, 76], "exampl": [1, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89], "def": [1, 2, 15, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33], "add": [1, 2, 11, 12, 19, 20, 21, 22, 27, 28, 29, 30, 34, 35], "b": [1, 2, 17, 21, 24, 25, 29, 32, 33, 35, 38, 44, 61, 63], "tp": [1, 2, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "compiled_add": [1, 2], "inputinfo": [1, 2, 24, 32], "1": [1, 2, 3, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "float32": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "ones": [1, 2, 15, 21, 23, 29, 31, 35, 55, 65, 87], "out": [1, 2, 11, 12, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 67], "0000": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "loc": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "gpu": [1, 2, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "0": [1, 2, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "shape": [1, 2, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "2": [1, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "get_input_info": 1, "arginfo": [1, 2], "input": [1, 2, 3, 11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 25, 27, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "inform": [1, 3, 9, 20, 21, 26, 28, 29], "list": [1, 2, 15, 21, 29, 35, 44, 67, 77], "contain": [1, 13, 15, 19, 20, 22, 25, 27, 28, 30, 33, 35, 37, 39, 40, 41, 42, 43, 60, 62, 66, 68, 80, 86], "one": [1, 2, 6, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 35, 50, 67, 71, 77, 83, 84], "per": [1, 10, 25, 33, 43, 47, 69, 77], "get": [1, 12, 22, 24, 25, 30, 32, 33, 35, 69], "info": 1, "3": [1, 2, 3, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89], "print": [1, 2, 15, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 69], "get_output_info": 1, "save": 1, "path": [1, 4, 10, 20, 28], "str": [1, 2, 4, 5, 6, 15, 22, 30, 34, 35, 67], "none": [1, 11, 12, 15, 17, 25, 33, 34, 35, 37, 39, 41, 42, 47, 50, 52, 57, 60, 62, 65, 68, 69, 76, 79, 80, 86, 89], "given": [1, 11, 22, 30, 47, 50, 56, 57, 69, 77], "file": [1, 4, 19, 22, 23, 27, 30, 31], "name": [1, 5, 15, 20, 22, 28, 30, 34, 35, 67], "import": [1, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33], "o": [1, 19, 27], "tempfil": 1, "temporarydirectori": 1, "temp_dir": 1, "executable_fil": 1, "join": 1, "json": 1, "classmethod": 1, "load": [1, 15], "from": [1, 6, 9, 10, 12, 15, 21, 22, 23, 25, 26, 29, 30, 31, 33, 35, 43, 50, 52, 53, 56, 57, 59, 87], "directori": [1, 20, 22, 28, 30], "exectu": 1, "loaded_execut": 1, "backend": [1, 9, 22, 24, 30, 32], "compiler_api": 1, "0x776880792cb0": 1, "func": [2, 19, 22, 27, 30], "callabl": 2, "optimization_level": 2, "can": [2, 4, 10, 11, 12, 13, 15, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 67, 71], "python": [2, 15, 19, 20, 21, 22, 24, 27, 28, 29, 30, 32, 47, 67, 69], "execut": [2, 24, 25, 32, 33], "run": [2, 19, 20, 21, 22, 24, 27, 28, 29, 30, 32], "effici": 2, "modul": [2, 9, 10, 12, 13, 14, 16, 17, 19, 21, 22, 23, 27, 29, 30, 31], "optim": [2, 3, 18, 21, 29], "satisfi": 2, "follow": [2, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 38], "requir": [2, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33], "pure": 2, "side": 2, "effect": [2, 12, 21, 29, 76], "thi": [2, 5, 10, 11, 12, 15, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 49, 52, 53, 56, 57, 59, 60, 62, 68, 69, 74, 76, 79, 80, 83, 84, 86, 87], "mean": [2, 14, 16, 19, 21, 22, 24, 27, 29, 30, 32, 55, 86], "you": [2, 9, 12, 15, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32], "cannot": [2, 22, 30, 56, 57, 69], "us": [2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 34, 43, 50, 65, 67, 89], "assert": [2, 22, 24, 30, 32, 69], "accept": 2, "variad": 2, "more": [2, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 83, 84], "other": [2, 15, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 71, 77, 83, 84, 87], "have": [2, 9, 19, 21, 22, 25, 26, 27, 29, 30, 33, 35, 44, 47, 53, 59, 61, 63, 69, 79, 87], "constraint": [2, 21, 29, 43, 87], "onli": [2, 11, 12, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 47, 50, 67, 69, 77], "becom": [2, 21, 29], "runtim": [2, 20, 22, 24, 28, 30, 32], "all": [2, 5, 11, 12, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 39, 44, 50, 51, 52, 55, 60, 62, 64, 65, 66, 68, 77, 79, 80, 83, 84, 86, 87, 88, 89], "even": [2, 9, 22, 26, 30], "collect": [2, 19, 27], "e": [2, 11, 12, 19, 21, 22, 27, 29, 30, 47, 48, 50, 58, 69, 76], "g": [2, 19, 21, 22, 27, 29, 30, 47, 50, 69], "dict": [2, 15], "bake": 2, "constant": [2, 18, 19, 22, 23, 27, 30, 31, 47, 69], "level": [2, 19, 22, 27, 30], "when": [2, 9, 12, 19, 22, 24, 26, 27, 30, 32], "higher": [2, 24, 32, 35, 69], "lead": [2, 21, 29], "better": [2, 19, 22, 24, 27, 30, 32], "perform": [2, 9, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 43, 47, 56, 57, 61, 63, 69], "cost": [2, 11, 12], "longer": 2, "time": [2, 4, 10, 11, 12, 22, 24, 30, 32], "work": [2, 19, 25, 27, 33], "first": [2, 3, 19, 21, 22, 23, 25, 27, 29, 30, 31, 33, 41, 42, 47, 61, 63, 69, 79, 82], "call": [2, 19, 22, 24, 25, 27, 30, 32, 33, 67, 77], "provid": [2, 3, 6, 9, 10, 15, 19, 21, 22, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 39, 41, 42, 52, 57, 60, 62, 67, 68, 79, 80, 86], "order": [2, 19, 20, 21, 24, 27, 28, 29, 32, 66], "trace": [2, 21, 29], "its": [2, 11, 12, 19, 21, 23, 24, 27, 29, 31, 32, 34, 66, 71], "result": [2, 11, 12, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 51, 52, 69, 77], "graph": 2, "should": [2, 6, 9, 22, 24, 26, 30, 32, 34, 35, 49, 50, 59, 61, 63, 67], "instead": [2, 19, 22, 27, 30], "ani": [2, 15, 20, 21, 22, 28, 29, 30, 35, 47, 55, 61, 63, 69, 79], "treat": [2, 18, 77, 83, 84], "forward": [2, 22, 25, 30, 33], "target": [2, 44, 45], "while": [2, 21, 24, 25, 29, 32, 33, 83, 84], "subset": 2, "origin": [2, 12, 21, 25, 29, 33], "which": [2, 11, 12, 16, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 37, 39, 41, 42, 44, 53, 56, 57, 60, 62, 67, 68, 76, 77, 80, 83, 84, 86], "were": [2, 12, 21, 29], "dynam": [2, 3, 25, 33], "support": [2, 3, 5, 15, 25, 33, 67], "rang": [2, 3, 22, 24, 25, 30, 32, 33, 76], "small_a": 2, "small_b": 2, "small_out": 2, "now": [2, 19, 22, 24, 25, 27, 30, 32, 33], "we": [2, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 77], "reus": 2, "within": [2, 9, 22, 23, 26, 30, 31], "big_a": 2, "big_b": 2, "big_out": 2, "By": [2, 21, 29], "non": [2, 22, 30, 34, 36], "case": [2, 9, 19, 21, 22, 24, 26, 27, 29, 30, 32, 77], "ar": [2, 11, 12, 15, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 41, 42, 44, 49, 60, 62, 67, 68, 69, 76, 77, 79, 80, 82, 86, 87], "i": [2, 6, 9, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 47, 48, 50, 52, 53, 57, 59, 60, 62, 65, 66, 67, 68, 69, 71, 74, 76, 77, 79, 80, 82, 83, 84, 86, 87, 89], "consequ": 2, "an": [2, 3, 5, 6, 9, 11, 15, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 54, 56, 61, 63, 69], "note": [2, 11, 12, 21, 22, 24, 29, 30, 32, 50], "captur": 3, "about": [3, 22, 30], "To": [3, 9, 22, 25, 30, 33], "minimum": [3, 42, 55], "optimum": 3, "maximum": [3, 41, 55, 60], "valu": [3, 10, 11, 12, 14, 16, 18, 19, 22, 23, 24, 27, 30, 31, 32, 34, 36, 38, 40, 41, 42, 43, 49, 50, 51, 52, 53, 56, 57, 59, 67, 71, 77, 83, 84, 87], "data": [3, 5, 11, 12, 13, 14, 15, 16, 17, 19, 22, 25, 27, 30, 33, 34, 35, 43, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87], "inp": [3, 19, 24, 27, 32, 67], "4": [3, 5, 11, 12, 13, 14, 17, 21, 24, 25, 29, 32, 33, 34, 35, 40, 41, 42, 44, 47, 49, 50, 52, 54, 60, 62, 66, 67, 68, 69, 70, 73, 74, 77, 80, 82, 83, 84, 86], "opt": [3, 20, 28], "size": [3, 5, 13, 16, 17, 21, 25, 29, 33, 35, 47, 49, 50, 53, 69, 76, 77, 79], "global": [4, 10], "configur": [4, 25, 33], "option": [4, 6, 20, 21, 22, 25, 28, 29, 30, 33, 34], "timing_cache_file_path": 4, "cach": 4, "speed": 4, "up": [4, 19, 21, 22, 27, 29, 30], "human": 5, "readabl": 5, "items": 5, "float": [5, 14, 16, 25, 33, 38, 67], "element": [5, 22, 30, 34, 35, 36, 37, 39, 46, 48, 53, 54, 58, 59, 60, 62, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 89], "byte": 5, "32": 5, "bit": [5, 22, 25, 30, 33], "point": [5, 22, 24, 30, 32], "float16": [5, 43, 47, 69], "16": [5, 11, 12, 13, 77], "float8": [5, 43, 69], "8": [5, 11, 12, 13, 17, 24, 25, 32, 33, 35, 40, 50, 77], "bfloat16": [5, 43], "brain": 5, "int4": [5, 43, 47, 69], "sign": 5, "integ": [5, 11, 12, 34, 66, 77], "int8": [5, 25, 33, 43, 47, 69], "int32": [5, 13, 15, 19, 27, 34, 35, 36, 41, 42, 43, 45, 52, 53, 57], "int64": [5, 43], "64": [5, 22, 30], "bool": [5, 11, 12, 17, 35, 37, 38, 39, 41, 42, 43, 59, 60, 62, 68, 80, 86, 87], "boolean": [5, 38], "where": [6, 9, 11, 12, 14, 16, 21, 22, 26, 29, 30, 47, 55, 59, 66, 69, 74, 76, 82, 83, 84, 86], "alloc": [6, 23, 31, 35], "string": [6, 10, 15, 22, 30, 35], "consist": [6, 19, 27], "kind": [6, 18, 19, 27], "index": [6, 25, 33, 35, 53, 77, 85], "mai": [6, 10, 15, 22, 23, 24, 30, 31, 32], "cpu": [6, 25, 33, 45], "If": [6, 9, 15, 19, 22, 24, 26, 27, 30, 32, 35, 37, 39, 41, 42, 47, 49, 50, 60, 62, 65, 68, 69, 71, 76, 77, 79, 80, 83, 84, 86, 89], "separ": [6, 22, 30], "colon": 6, "default": [6, 11, 12, 14, 20, 22, 28, 30, 86], "second": [6, 19, 24, 27, 32, 47, 61, 63, 69, 82], "gpu_1": 6, "tripyexcept": [7, 22, 30, 79], "except": [8, 9, 22, 24, 30, 32, 44, 53], "thrown": 8, "aim": [9, 24, 26, 32], "excel": [9, 26], "experi": [9, 26], "without": [9, 21, 26, 29], "compromis": [9, 26], "some": [9, 21, 22, 23, 24, 26, 29, 30, 31, 32], "featur": [9, 16, 17, 26], "includ": [9, 17, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 77], "intuit": [9, 26], "doesn": [9, 19, 22, 26, 27, 30], "t": [9, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 34, 43, 50], "reinvent": [9, 26], "wheel": [9, 20, 26, 28], "numpi": [9, 22, 24, 26, 30, 32, 53], "pytorch": [9, 21, 24, 26, 29, 32], "befor": [9, 11, 12, 15, 19, 22, 23, 26, 27, 30, 31], "feel": [9, 26], "familiar": [9, 24, 26, 32], "error": [9, 21, 22, 26, 29, 30, 54], "messag": [9, 21, 26, 29], "someth": [9, 19, 21, 22, 26, 27, 29, 30], "goe": [9, 26], "wrong": [9, 26], "tri": [9, 26], "action": [9, 26], "come": [9, 10, 26], "deep": [9, 24, 26, 32], "softwar": [9, 26], "stack": [9, 21, 26, 29, 35], "abl": [9, 19, 21, 22, 26, 27, 29, 30, 47, 69], "map": [9, 15, 19, 21, 22, 26, 27, 29, 30], "back": [9, 12, 25, 26, 33], "code": [9, 19, 21, 22, 26, 27, 29, 30], "caus": [9, 22, 26, 30], "introduct": 9, "quantiz": [9, 17, 43, 47, 55], "config": [9, 25, 33], "devic": [9, 19, 22, 25, 27, 30, 33, 35, 44, 45], "logger": 9, "oper": [9, 11, 12, 13, 14, 16, 17, 19, 23, 27, 31, 34, 56, 57, 83, 84], "architectur": [9, 21, 22, 29, 30], "debug": [9, 22, 24, 30, 32], "mlir": [9, 21, 22, 29, 30, 35], "design": 9, "decis": 9, "ad": [9, 12, 14, 16, 19, 21, 24, 27, 29, 32], "new": [9, 19, 20, 21, 27, 28, 29, 35, 36, 37, 39, 41, 42, 46, 48, 49, 50, 53, 58, 59, 60, 61, 62, 63, 66, 68, 71, 72, 75, 78, 79, 80, 81, 82, 85, 86, 87], "dialect": [9, 19, 22, 27, 30], "across": [10, 11, 12, 21, 29], "verbos": [10, 22, 30], "control": [10, 12, 21, 22, 29, 30, 43], "properti": [10, 35], "either": [10, 22, 30, 35, 67, 87], "singl": [10, 21, 23, 24, 29, 31, 32, 47, 67, 69, 77], "set": [10, 12, 20, 21, 28, 29, 51, 52, 64, 65, 83, 84, 88, 89], "log": [10, 55], "NOT": 10, "v": [10, 20, 28], "possibl": [10, 21, 22, 24, 29, 30, 32], "kei": [10, 15], "verbosity_config": 10, "It": [10, 12, 20, 21, 24, 28, 29, 32, 35, 61, 63, 66, 69], "altern": 10, "dictionari": [10, 15], "submodul": [10, 19, 22, 27, 30], "enabl": [10, 18, 20, 25, 28, 33], "just": [10, 19, 21, 22, 24, 27, 29, 30, 32], "frontend": [10, 21, 22, 29, 30], "also": [10, 12, 19, 22, 24, 27, 30, 32, 47, 69, 74], "chang": [10, 22, 30], "temporarili": 10, "use_verbos": 10, "context": 10, "manag": 10, "in_channel": [11, 12], "out_channel": [11, 12], "kernel_dim": [11, 12], "pad": [11, 12], "stride": [11, 12], "group": [11, 12, 14], "dilat": [11, 12], "bia": [11, 12, 14, 15, 16, 17, 24, 25, 32, 33], "true": [11, 12, 17, 24, 25, 32, 33, 35, 37, 38, 39, 59, 62, 86, 87], "convbas": [11, 12], "appli": [11, 12, 14, 16, 17, 21, 29, 54, 70, 73, 74, 76], "convolut": [11, 12], "With": 11, "n": [11, 12, 13, 66, 76, 77, 83, 84, 86], "c_": 11, "text": [11, 12, 13, 14, 16, 17, 40, 48, 54, 70, 73, 74, 76, 86], "d_0": 11, "ldot": [11, 12, 77], "d_n": 11, "d_": [11, 12], "0_": [11, 12], "n_": [11, 12], "n_i": 11, "_j": 11, "_": [11, 12, 24, 32], "sum_": [11, 76, 86], "k": [11, 77], "weight": [11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 30, 32, 33], "star": 11, "cross": 11, "correl": 11, "over": [11, 14, 15, 16, 21, 29, 43, 44, 76], "spatial": [11, 12], "kernel": [11, 12], "batch": [11, 35, 83, 84], "c": [11, 19, 22, 24, 27, 30, 32], "channel": [11, 12, 14, 47, 69], "number": [11, 12, 13, 14, 19, 22, 27, 30, 34, 40, 47, 51, 52, 59, 69, 71, 77], "produc": [11, 12, 19, 22, 25, 27, 30, 33, 77], "pair": [11, 12], "length": [11, 12, 49, 86], "m": [11, 12, 20, 25, 28, 33, 83, 84], "zero": [11, 12, 14, 15, 16, 22, 30, 55, 56, 57, 59, 65, 83, 84, 87, 89], "along": [11, 12, 22, 30, 37, 39, 41, 42, 44, 53, 56, 57, 60, 62, 68, 76, 77, 80, 86], "after": [11, 12, 15, 19, 20, 22, 27, 28, 30, 35, 47], "respect": [11, 12], "rank": [11, 12, 19, 22, 27, 30, 34, 35, 49, 56, 57, 66, 67], "divid": [11, 12, 35, 47, 69, 77], "connect": [11, 12, 19, 27], "correspond": [11, 12, 19, 22, 27, 30, 34], "through": [11, 12, 25, 33], "concaten": [11, 12, 34, 55], "final": [11, 12, 19, 23, 25, 27, 31, 33], "contrast": [11, 12], "standard": [11, 12], "ha": [11, 12, 19, 21, 24, 25, 27, 29, 32, 33, 40, 67, 83, 84], "full": [11, 12, 55, 64, 77, 88], "between": [11, 12, 21, 29, 35, 40], "reduc": [11, 12, 19, 27, 37, 39, 41, 42, 60, 62, 68, 80, 86], "comput": [11, 12, 19, 22, 23, 24, 25, 27, 30, 31, 32, 33, 36, 46, 48, 58, 72, 75, 76, 78, 81], "factor": [11, 12, 25, 33], "benefit": [11, 12, 21, 29], "model": [11, 12, 19, 24, 27, 32], "parallel": [11, 12], "memori": [11, 12], "usag": [11, 12], "both": [11, 12, 19, 22, 27, 30, 35, 47, 69], "divis": [11, 12, 14, 16, 35], "insert": [11, 12, 21, 24, 25, 29, 32, 33, 35, 85], "known": [11, 12, 74], "\u00e0": [11, 12], "trou": [11, 12], "algorithm": [11, 12], "further": [11, 12], "downsampl": [11, 12], "increas": [11, 12, 21, 29, 49], "recept": [11, 12], "field": [11, 12, 19, 22, 27, 30, 67], "For": [11, 12, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 43, 47, 69, 77], "x": [11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 25, 27, 30, 32, 33, 54, 70, 73, 74, 86], "whether": [11, 12, 17, 37, 39, 41, 42, 60, 62, 68, 80, 86], "term": [11, 12, 17, 22, 30], "reshap": [11, 12, 35, 41, 42, 50, 55, 60, 62, 66, 68, 69, 77, 80, 82, 86], "arang": [11, 12, 22, 24, 30, 32, 35, 41, 42, 46, 48, 50, 55, 58, 60, 62, 66, 68, 69, 72, 75, 77, 78, 80, 81, 82, 86], "5": [11, 12, 13, 14, 17, 19, 21, 24, 25, 27, 29, 32, 33, 34, 35, 40, 41, 42, 47, 50, 54, 60, 62, 66, 68, 69, 77, 80, 82, 83, 84, 86], "6": [11, 12, 13, 17, 24, 25, 32, 33, 34, 35, 41, 42, 44, 47, 50, 60, 61, 62, 63, 66, 68, 69, 71, 77, 80, 82, 86], "7": [11, 12, 13, 17, 24, 25, 32, 33, 34, 35, 38, 48, 50, 77, 80], "9": [11, 12, 13, 17, 21, 22, 24, 29, 30, 32, 34, 35, 50, 77], "10": [11, 12, 13, 17, 21, 24, 29, 32, 35, 50, 68, 77], "11": [11, 12, 13, 17, 21, 24, 25, 29, 32, 33, 77], "12": [11, 12, 13, 24, 25, 32, 33, 77], "13": [11, 12, 13, 17, 24, 32, 77], "14": [11, 12, 13, 24, 32, 77], "15": [11, 12, 13, 24, 25, 32, 33, 77], "state_dict": [11, 12, 13, 14, 15, 16, 17, 24, 25, 32, 33], "24": [11, 12], "30": 11, "36": 11, "48": 11, "54": [11, 12], "60": 11, "72": 11, "78": 11, "84": [11, 12], "fals": [11, 12, 22, 25, 30, 33, 35, 37, 39, 41, 42, 59, 60, 62, 68, 80, 86, 87], "73": 11, "121": 11, "154": 11, "103": 11, "139": 11, "187": 11, "202": 11, "113": 11, "depthwis": 11, "18": [11, 13], "17": [11, 13], "204": 11, "1581": 11, "38": 11, "frac": [11, 12, 14, 16, 40, 73, 74, 76, 86], "same": [11, 12, 14, 16, 22, 30, 34, 35, 36, 44, 46, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89], "k_": [11, 12], "larg": [11, 14, 16, 21, 29, 76, 86], "left": [11, 25, 33], "lfloor": 11, "k_0": [11, 12], "k_1": [11, 12], "_k": [11, 12], "right": [11, 19, 21, 22, 27, 29, 30], "rfloor": 11, "normals": [11, 14, 16, 76], "transpos": [12, 55], "fraction": 12, "deconvolut": 12, "revers": [12, 50], "upsampl": 12, "larger": [12, 49], "resolut": 12, "would": [12, 21, 22, 24, 29, 30, 32], "thought": 12, "regular": [12, 22, 30], "version": [12, 21, 24, 29, 32, 67, 82], "how": [12, 19, 22, 24, 25, 27, 30, 32, 33], "much": [12, 19, 21, 24, 27, 29, 32], "crop": 12, "strict": 12, "invers": 12, "implicit": 12, "In": [12, 20, 21, 22, 24, 28, 29, 30, 32], "particular": 12, "_i": [12, 73, 74], "so": [12, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33], "initi": [12, 21, 23, 24, 29, 31, 32, 35], "conv": [12, 15], "thei": [12, 21, 22, 29, 30, 76], "19": [12, 13], "34": 12, "21": [12, 13], "process": 12, "restor": 12, "output_down": 12, "output_up": 12, "28": 12, "22": [12, 13], "108": 12, "162": 12, "44": 12, "num_embed": 13, "embedding_dim": 13, "lookup": 13, "tabl": 13, "vector": [13, 34, 35], "fix": 13, "retriev": [13, 19, 22, 27, 30], "20": 13, "23": [13, 17, 25, 33], "desir": [13, 22, 24, 30, 32, 40, 43, 49, 51, 52, 56, 57, 64, 66, 71, 88], "num_group": 14, "num_channel": 14, "normal": [14, 16, 25, 33], "bar": [14, 16, 86], "sqrt": [14, 16, 54, 55], "sigma": [14, 16, 74, 86], "epsilon": [14, 16], "gamma": [14, 16], "beta": [14, 15, 16], "varianc": [14, 16, 86], "split": [14, 55], "expect": [14, 22, 24, 30, 32, 67, 69], "group_norm": 14, "ones_lik": [14, 55, 64], "zeros_lik": [14, 55, 88], "iota": [14, 16, 17, 22, 24, 25, 30, 32, 33, 35, 44, 49, 53, 55, 57, 67, 71, 76, 79, 83, 84, 85, 89], "ep": [14, 16, 25, 33], "denomin": [14, 16], "prevent": [14, 16], "1e": [14, 25, 33, 38], "defin": [15, 19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 83, 84, 86], "neural": 15, "network": 15, "nest": 15, "assign": 15, "them": 15, "attribut": [15, 21, 25, 29, 33], "child": [15, 22, 30], "structur": [15, 22, 30], "take": [15, 19, 22, 24, 25, 27, 30, 32, 33, 53], "allow": [15, 22, 24, 25, 30, 32, 33, 34, 43], "self": [15, 19, 21, 22, 24, 27, 29, 30, 32], "linear": [15, 24, 25, 32, 33, 54, 70, 74], "list_modul": 15, "dict_modul": 15, "layernorm": [15, 24, 25, 32, 33], "wherea": [15, 21, 29], "addbia": 15, "__init__": [15, 22, 24, 30, 32], "super": [15, 24, 32], "add_bia": 15, "recurs": 15, "mymodul": 15, "param": 15, "linear1": 15, "linear2": 15, "load_from_state_dict": 15, "current": [15, 34], "f": [15, 22, 24, 30, 32], "named_children": 15, "iter": [15, 19, 24, 27, 32], "immedi": [15, 19, 27], "children": 15, "yield": [15, 22, 30], "itself": [15, 19, 22, 27, 30], "stackedlinear": 15, "stacked_linear": 15, "__name__": 15, "named_paramet": 15, "alpha": 15, "convtranspos": 15, "embed": [15, 25, 33], "groupnorm": 15, "normalized_shap": 16, "layer": [16, 19, 20, 21, 25, 27, 28, 29, 33], "layer_norm": 16, "in_featur": [17, 25, 33], "out_featur": [17, 25, 33], "quant_dtyp": [17, 25, 33], "weight_quant_dim": [17, 25, 33], "transform": [17, 21, 25, 29, 33], "xw": 17, "33": 17, "w": 17, "matrix": [17, 35, 83, 84], "weight_scal": [17, 25, 33], "scale": [17, 43, 47, 69, 76], "input_scal": [17, 25, 33], "special": [18, 22, 30], "addit": [18, 25, 33, 34, 67], "opportun": 18, "document": [19, 21, 22, 27, 29, 30], "explain": [19, 21, 27, 29], "overal": [19, 27], "main": [19, 21, 22, 27, 29, 30, 83, 84], "technic": [19, 27], "twofold": [19, 27], "style": [19, 27], "interfac": [19, 21, 22, 24, 27, 29, 30, 32, 67], "user": [19, 21, 22, 26, 27, 29, 30], "seri": [19, 27], "intermedi": [19, 20, 27, 28], "represent": [19, 22, 27, 30], "solv": [19, 27], "problem": [19, 27], "below": [19, 22, 27, 30, 83, 84], "diagram": [19, 27], "ir": [19, 20, 21, 22, 23, 27, 28, 29, 30, 31], "meant": [19, 22, 27, 30], "bipartit": [19, 27], "tracetensor": [19, 22, 27, 30], "knowledg": [19, 27], "like": [19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 67], "flatirtensor": [19, 21, 27, 29], "hand": [19, 27], "off": [19, 27], "our": [19, 21, 22, 24, 27, 29, 30, 32], "primarili": [19, 27], "stablehlo": [19, 22, 23, 27, 30, 31], "certain": [19, 21, 27, 29], "understand": [19, 21, 27, 29], "compon": [19, 21, 27, 29], "let": [19, 21, 22, 24, 25, 27, 29, 30, 32, 33, 77], "look": [19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33], "happen": [19, 22, 24, 27, 30, 32], "write": [19, 21, 22, 27, 29, 30], "simpl": [19, 27, 77], "program": [19, 27], "eval": [19, 22, 24, 27, 30, 32], "ll": [19, 22, 27, 30], "start": [19, 22, 24, 27, 30, 32, 40, 56, 57], "line": [19, 22, 27, 30], "api": [19, 24, 25, 26, 27, 32, 33], "part": [19, 21, 22, 24, 27, 29, 30, 32, 83, 84], "exactli": [19, 21, 22, 27, 29, 30, 66], "directli": [19, 21, 22, 27, 29, 30], "alongsid": [19, 27], "fill": [19, 22, 23, 25, 27, 30, 31, 33, 51, 52, 56, 59], "unaryelementwis": [19, 27], "organ": [19, 21, 27, 29], "wai": [19, 21, 25, 27, 29, 33], "need": [19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33], "touch": [19, 27], "op": [19, 21, 22, 23, 27, 29, 30, 31], "compos": [19, 24, 27, 32], "multipl": [19, 22, 27, 30, 35, 40, 41, 42, 67, 77], "under": [19, 20, 22, 23, 27, 28, 30, 31], "lazi": [19, 27], "creat": [19, 20, 21, 22, 24, 27, 28, 29, 30, 32, 64, 65, 77, 88, 89], "form": [19, 21, 27, 29], "essenti": [19, 21, 22, 27, 29, 30], "symbol": [19, 27], "done": [19, 27, 34, 77], "As": [19, 22, 24, 25, 27, 30, 32, 33], "think": [19, 27], "mention": [19, 27], "compris": [19, 24, 27, 32], "bulk": [19, 27], "real": [19, 25, 27, 33], "onc": [19, 22, 27, 30, 66], "reach": [19, 22, 27, 30], "consid": [19, 24, 27, 32], "interoper": [19, 27], "anoth": [19, 21, 25, 27, 29, 33, 34], "framework": [19, 21, 27, 29], "torch": [19, 21, 25, 27, 29, 33, 34, 35], "from_dlpack": [19, 22, 24, 27, 30, 32, 35, 69], "np": [19, 22, 24, 27, 30, 32, 34, 35, 69], "__repr__": [19, 22, 27, 30], "explicitli": [19, 27], "re": [19, 22, 24, 27, 30, 32, 34], "here": [19, 21, 22, 27, 29, 30], "actual": [19, 22, 24, 27, 30, 32], "few": [19, 21, 27, 29], "differ": [19, 21, 23, 27, 29, 31, 77], "thing": [19, 21, 22, 27, 29, 30], "sinc": [19, 21, 22, 27, 29, 30], "alreadi": [19, 22, 27, 30], "walk": [19, 25, 27, 33], "backward": [19, 27, 50], "go": [19, 22, 27, 30], "textual": [19, 27], "t0": [19, 27], "storag": [19, 27], "t2": [19, 21, 27, 29], "output_rank": [19, 27], "t4": [19, 27], "ve": [19, 21, 22, 24, 27, 29, 30, 32], "built": [19, 20, 23, 27, 28, 31], "complet": [19, 27], "infer": [19, 24, 27, 32, 52, 57, 71], "why": [19, 24, 25, 27, 32, 33], "popul": [19, 22, 27, 30], "veri": [19, 21, 24, 27, 29, 32], "thin": [19, 27], "implement": [19, 21, 23, 24, 27, 29, 31, 32, 50], "to_flat_ir": [19, 22, 27, 30], "subgraph": [19, 21, 22, 24, 27, 29, 30, 32], "snippet": [19, 27], "might": [19, 22, 27, 30], "good": [19, 22, 27, 30], "enough": [19, 24, 27, 32], "conceptu": [19, 27], "flat_ir": [19, 21, 22, 27, 29, 30], "tanhop": [19, 21, 27, 29], "wait": [19, 27], "anyth": [19, 21, 22, 27, 29, 30], "fact": [19, 27], "appear": [19, 22, 27, 30], "respons": [19, 21, 22, 27, 29, 30], "bind": [19, 20, 27, 28], "baseflatirop": [19, 22, 27, 30], "updat": [19, 20, 22, 27, 28, 30], "inlin": [19, 22, 27, 30], "remap": [19, 27], "those": [19, 21, 27, 29, 43], "exist": [19, 20, 21, 22, 27, 28, 29, 30], "notic": [19, 21, 22, 24, 27, 29, 30, 32], "than": [19, 21, 24, 27, 29, 32, 35, 83, 84], "did": [19, 21, 27, 29], "constantop": [19, 27], "t_inter3": [19, 27], "dynamicbroadcastop": [19, 21, 27, 29], "broadcast_dim": [19, 21, 27, 29], "translat": [19, 22, 27, 30], "step": [19, 23, 25, 27, 31, 33, 35, 40, 50], "similar": [19, 21, 27, 29], "to_mlir": [19, 22, 27, 30], "unlik": [19, 27], "alwai": [19, 22, 23, 25, 27, 30, 31, 33, 67], "operand": [19, 21, 22, 27, 29, 30], "There": [19, 21, 25, 27, 29, 33], "outs_t4_2": [19, 27], "xf32": [19, 22, 27, 30], "dens": [19, 22, 27, 30], "2xi32": [19, 22, 27, 30], "cst": [19, 27], "000000e": [19, 27], "01": [19, 27], "f32": [19, 27], "dynamic_broadcast_in_dim": [19, 27], "dim": [19, 22, 24, 27, 30, 32, 37, 39, 41, 42, 44, 47, 50, 53, 56, 57, 60, 62, 67, 68, 69, 76, 77, 79, 80, 85, 86], "trt": [19, 20, 21, 27, 28, 29, 35], "executor": [19, 27], "launch": [19, 20, 27, 28], "memref": [19, 27], "wrap": [19, 22, 27, 30], "instal": [20, 25, 28, 33], "assum": [20, 28, 77], "No": [20, 28, 34], "ld_library_path": [20, 28], "bash": 20, "python3": [20, 25, 28, 33], "pip": [20, 25, 28, 33], "forc": [20, 28], "reinstal": [20, 28], "build": [20, 22, 23, 28, 30, 31], "trt100": [20, 28], "whl": [20, 28], "environ": [20, 28], "flag": [20, 28], "export": [20, 22, 28, 30], "tripy_mlir_debug_en": [20, 28], "well": [20, 22, 28, 30], "dump": [20, 22, 28, 30], "pass": [20, 21, 25, 28, 29, 33, 67], "tripy_mlir_debug_path": [20, 28], "repo": [20, 28], "folder": [20, 28], "module_ins_t1_outs_t2_1": [20, 28], "tripy_trt_debug_en": [20, 28], "engin": [20, 28], "dure": [20, 21, 28, 29], "tripy_trt_debug_path": [20, 28], "lldb": [20, 28], "extra": [20, 25, 28, 33], "secur": [20, 28], "docker": [20, 28], "cap": [20, 28], "sys_ptrac": [20, 28], "seccomp": [20, 28], "unconfin": [20, 28], "apparmor": [20, 28], "pwd": [20, 28], "rm": [20, 28], "latest": [20, 28], "see": [20, 22, 24, 25, 28, 30, 32, 33, 69], "http": [20, 25, 28, 33], "forum": [20, 28], "swift": [20, 28], "org": [20, 28], "18046": [20, 28], "detail": [20, 22, 23, 24, 28, 30, 31, 32], "outlin": [21, 29], "made": [21, 29], "chosen": [21, 29], "One": [21, 22, 24, 29, 30, 32, 83, 84], "deviat": [21, 29], "do": [21, 22, 24, 25, 29, 30, 32, 33], "softmax": [21, 29, 55], "expos": [21, 29, 34], "nn": [21, 29], "etc": [21, 29, 67], "ident": [21, 29], "unnecessarili": [21, 29], "surfac": [21, 29], "try": [21, 29], "els": [21, 29], "help": [21, 22, 23, 29, 30, 31], "attributeerror": [21, 29], "previou": [21, 29], "eventu": [21, 29], "realiz": [21, 29], "wa": [21, 25, 29, 33], "lot": [21, 29], "duplic": [21, 29], "had": [21, 29], "two": [21, 22, 25, 29, 30, 33, 35, 83, 84], "refactor": [21, 29], "common": [21, 22, 29, 30], "helper": [21, 22, 29, 30], "method": [21, 22, 29, 30, 34], "share": [21, 29], "introduc": [21, 29], "handl": [21, 29, 35], "complex": [21, 29], "usabl": [21, 29], "top": [21, 22, 29, 30], "inspect": [21, 22, 29, 30], "modifi": [21, 29, 49], "resort": [21, 29], "poorli": [21, 29], "want": [21, 22, 23, 24, 29, 30, 31, 32], "tanh": [21, 24, 29, 32, 54, 55], "seem": [21, 29], "perfectli": [21, 29], "fine": [21, 29], "small": [21, 29], "inde": [21, 29], "reason": [21, 24, 29, 32], "howev": [21, 22, 29, 30], "quickli": [21, 29], "prone": [21, 29], "too": [21, 29], "easi": [21, 24, 29, 32], "forget": [21, 29], "confus": [21, 22, 29, 30], "bug": [21, 29], "never": [21, 22, 29, 30], "don": [21, 29], "decid": [21, 29], "make": [21, 22, 29, 30], "truth": [21, 29], "been": [21, 24, 29, 32], "u": [21, 22, 24, 25, 29, 30, 32, 33, 77], "easili": [21, 29], "Then": [21, 25, 29, 33], "could": [21, 22, 29, 30], "clearli": [21, 29], "nicer": [21, 29], "maintain": [21, 29], "conclud": [21, 29], "effort": [21, 29], "mainten": [21, 29], "overhead": [21, 29], "caller": [21, 29], "asymmetri": [21, 29], "own": [21, 29], "due": [21, 29], "leav": [21, 29], "convert": [21, 22, 25, 29, 30, 33], "newli": [21, 29], "stage": [21, 29], "lower": [21, 22, 29, 30, 40, 83], "custom": [21, 23, 29, 31, 40], "coupl": [21, 29], "xla": [21, 29], "tightli": [21, 29], "limit": [21, 29], "tensorrt": [21, 23, 24, 25, 29, 31, 32, 33, 67], "inherit": [21, 29], "lax": [21, 29], "logist": [21, 29, 73], "challeng": [21, 22, 29, 30], "latenc": [21, 29], "ship": [21, 29], "destini": [21, 29], "schedul": [21, 29], "depend": [21, 22, 29, 30, 87], "extern": [21, 29], "ecosystem": [21, 29], "advantag": [21, 29], "concept": [21, 29], "specif": [21, 29, 77], "profil": [21, 29], "logic": [21, 29, 37, 39], "annot": [21, 29], "easier": [21, 22, 29, 30], "augment": [21, 29], "anywher": [21, 29], "entir": [21, 29], "down": [21, 29], "emit": [21, 22, 29, 30], "py": [21, 22, 23, 29, 30, 31], "internalerror": [21, 29], "fail": [21, 22, 29, 30], "pipelin": [21, 29], "compat": [21, 25, 29, 33, 35, 61, 63, 71, 87], "occur": [21, 29], "express": [21, 22, 29, 30], "t_inter11": [21, 29], "t1": [21, 29, 43], "t_inter8": [21, 29], "broadcast": [21, 29, 35, 61, 63, 87], "find": [22, 23, 30, 31], "read": [22, 30], "guid": [22, 30], "typic": [22, 30], "involv": [22, 30], "clash": [22, 30], "theta": [22, 30], "usual": [22, 23, 30, 31], "most": [22, 23, 24, 30, 31, 32], "aspect": [22, 30], "low": [22, 24, 30, 32], "comment": [22, 30], "explan": [22, 30], "what": [22, 30], "dataclass": [22, 30], "mlir_tensorrt": [22, 30], "everi": [22, 30, 53], "automat": [22, 30], "sever": [22, 30], "repr": [22, 30], "becaus": [22, 30], "extrem": [22, 30], "interact": [22, 30], "difficult": [22, 30], "thetaop": [22, 30], "trickiest": [22, 30], "impli": [22, 30], "figur": [22, 30], "refer": [22, 23, 25, 30, 31, 33], "link": [22, 30], "out_typ": [22, 30], "theta_dim": [22, 30], "integerattr": [22, 30], "integertyp": [22, 30], "get_signless": [22, 30], "dynamiciotaop": [22, 30], "output_shap": [22, 30], "iota_dimens": [22, 30], "principl": [22, 30], "intern": [22, 25, 30, 33, 69], "doe": [22, 30], "know": [22, 30], "live": [22, 30], "util": [22, 25, 30, 33], "raise_error": [22, 30], "basetraceop": [22, 30], "op_util": [22, 30], "constructor": [22, 30], "reli": [22, 30], "infer_shape_output_idx": [22, 30], "preexist": [22, 30], "polici": [22, 30], "shapeoutputidxpolici": [22, 30], "never_return_shap": [22, 30], "infer_dtyp": [22, 30], "copi": [22, 23, 30, 31, 34, 44, 55], "infer_devic": [22, 30], "infer_rank": [22, 30], "shapecontext": [22, 30], "determin": [22, 30], "out_shap": [22, 30], "get_shape_of_dynamic_trace_tensor": [22, 30], "len": [22, 30, 53], "got": [22, 30], "incorrect": [22, 30], "earlier": [22, 30], "avoid": [22, 30], "circular": [22, 30], "section": [22, 30], "next": [22, 30], "composit": [22, 30], "frontend_util": [22, 30], "public_api": [22, 30], "decor": [22, 30], "access": [22, 30], "document_und": [22, 30], "hierarchi": [22, 30], "show": [22, 30], "autodoc": [22, 30], "autodoc_opt": [22, 30], "tensor_oper": [22, 30], "convert_inputs_to_tensor": [22, 30], "turn": [22, 30], "shape_argu": [22, 30], "exclud": [22, 30], "face": [22, 25, 30, 33], "doc": [22, 30], "readm": [22, 25, 30, 33], "docstr": [22, 30], "adher": [22, 30], "compliant": [22, 30], "failur": [22, 30], "still": [22, 25, 30, 33], "manual": [22, 30], "ensur": [22, 30], "high": [22, 30], "qualiti": [22, 30], "sure": [22, 30], "correct": [22, 23, 25, 30, 31, 33, 86], "check": [22, 23, 24, 30, 31, 32], "consecut": [22, 30, 56, 57], "exce": [22, 30, 49, 56, 57], "block": [22, 24, 30, 32, 47, 69], "lineno": [22, 30], "caption": [22, 30], "array_equ": [22, 24, 30, 32, 69], "cp": [22, 24, 30, 32, 34, 35, 69], "construct": [22, 24, 25, 30, 32, 33], "similarli": [22, 30, 53], "mirror": [22, 30], "reprenset": [22, 30], "test_theta": [22, 30], "pytest": [22, 30], "fixtur": [22, 30], "simpli": [22, 24, 30, 32], "iotaop": [22, 30], "testthetaop": [22, 30], "hard": [22, 30], "predict": [22, 30], "suggest": [22, 30], "test_str": [22, 30], "isinst": [22, 30], "match": [22, 30, 59], "r": [22, 30], "convers": [22, 30], "again": [22, 30], "ahead": [22, 24, 30, 32], "accordingli": [22, 30], "test_mlir": [22, 30], "check_mlir": [22, 30], "dynamic_iota": [22, 30], "testtheta": [22, 30], "test_op_func": [22, 30], "trace_tensor": [22, 30], "neg": [22, 30, 34, 35, 36, 50, 83, 84], "test_invalid_dim": [22, 30], "outsid": [22, 30], "rais": [22, 30, 79], "beyond": [22, 30], "serv": [22, 30], "saniti": [22, 30], "coverag": [22, 30], "cover": [22, 23, 25, 30, 31, 33], "1d": [22, 30, 34, 35, 40], "multidimension": [22, 30], "cupi": [22, 30], "test_multi_dimension": [22, 30], "broadcast_to": [22, 30], "successfulli": [22, 30], "congratul": [22, 30], "choic": [23, 31], "jax": [23, 31], "arith": [23, 31], "buffer": [23, 31], "linalg": [23, 31], "sometim": [23, 31], "mix": [23, 31], "declar": [23, 31], "empti": [23, 31], "alloc_tensor": [23, 31], "auto": [23, 31], "accord": [23, 31], "td": [23, 31], "descript": [23, 31], "third_parti": [23, 31], "llvm": [23, 31], "project": [23, 31], "packag": [23, 31], "tool": [23, 31], "python_packag": [23, 31], "_stablehlo_ops_gen": [23, 31], "importantli": [23, 31], "_mlir_lib": [23, 31], "_mlir": [23, 31], "pyi": [23, 31], "test": [23, 31], "almost": [23, 31], "tip": [23, 31], "search": [23, 31], "learn": [24, 32], "fast": [24, 32], "But": [24, 32], "talk": [24, 32], "5000": [24, 32, 40], "algebra": [24, 32], "librari": [24, 32], "until": [24, 32], "abov": [24, 32, 69, 77, 83, 84], "attempt": [24, 32], "end": [24, 32], "3f": [24, 32], "079": [24, 32], "rel": [24, 32, 38], "d": [24, 32, 47, 69], "yet": [24, 32], "7616": [24, 32, 74, 81], "9640": [24, 32, 81], "9951": [24, 32], "9993": [24, 32], "267": [24, 32], "That": [24, 32], "individu": [24, 32], "prior": [24, 32], "tell": [24, 32], "long": [24, 32, 77], "took": [24, 32], "reusabl": [24, 32], "togeth": [24, 32], "predefin": [24, 25, 32, 33], "transfom": [24, 32], "mlp": [24, 25, 32, 33], "embedding_s": [24, 32], "c_fc": [24, 25, 32, 33], "c_proj": [24, 25, 32, 33], "gelu": [24, 32, 55, 67], "447": [24, 32], "9999": [24, 32, 54], "1183": [24, 32], "7289": [24, 32], "seen": [24, 32], "far": [24, 32], "eager": [24, 32], "mode": [24, 25, 32, 33], "significantli": [24, 32], "impos": [24, 32], "fast_mlp": [24, 32], "benchmark": [24, 32], "against": [24, 32], "recal": [24, 32], "materi": [24, 32], "eager_tim": [24, 32], "averag": [24, 32], "4f": [24, 32], "compiled_tim": [24, 32], "9878": [24, 32], "0030": [24, 32], "faster": [24, 32], "variou": [25, 33], "quant_linear": [25, 33], "describ": [25, 33], "compar": [25, 33, 35], "input_quant_dim": [25, 33], "dummi": [25, 33], "45": [25, 33], "precis": [25, 33, 67, 69], "dequant": [25, 33, 43, 55, 69], "workflow": [25, 33], "world": [25, 33], "nanogpt": [25, 33], "avail": [25, 33], "unless": [25, 33, 52, 57], "train": [25, 33], "qat": [25, 33], "awar": [25, 33], "mani": [25, 33, 83, 84], "nvidia": [25, 33], "modelopt": [25, 33], "toolkit": [25, 33], "url": [25, 33], "pypi": [25, 33], "com": [25, 33], "dataset": [25, 33], "pre": [25, 33], "gpt": [25, 33], "hug": [25, 33], "gpt2lmheadmodel": [25, 33], "from_pretrain": [25, 33], "gpt2": [25, 33], "autotoken": [25, 33], "mtq": [25, 33], "dataset_util": [25, 33], "create_forward_loop": [25, 33], "quant": [25, 33, 47, 69], "quant_cfg": [25, 33], "int8_default_cfg": [25, 33], "disabl": [25, 33], "input_quant": [25, 33], "loop": [25, 33], "max_seq_len": [25, 33], "512": [25, 33], "token": [25, 33], "use_fast": [25, 33], "model_max_length": [25, 33], "padding_sid": [25, 33], "trust_remote_cod": [25, 33], "pad_token": [25, 33], "eos_token": [25, 33], "forward_loop": [25, 33], "dataset_nam": [25, 33], "cnn_dailymail": [25, 33], "num_sampl": [25, 33], "download": [25, 33], "00": [25, 33], "6k": [25, 33], "100": [25, 33], "106mb": [25, 33], "147": [25, 33], "warn": [25, 33], "gpt2model": [25, 33], "wte": [25, 33], "50257": [25, 33], "768": [25, 33], "wpe": [25, 33], "1024": [25, 33], "drop": [25, 33], "dropout": [25, 33], "p": [25, 33], "inplac": [25, 33], "h": [25, 33], "modulelist": [25, 33], "gpt2block": [25, 33], "ln_1": [25, 33], "05": [25, 33, 38], "elementwise_affin": [25, 33], "attn": [25, 33], "gpt2attent": [25, 33], "c_attn": [25, 33], "quantlinear": [25, 33], "2304": [25, 33], "tensorquant": [25, 33], "output_quant": [25, 33], "weight_quant": [25, 33], "fake": [25, 33], "axi": [25, 33, 44, 53], "amax": [25, 33], "maxcalibr": [25, 33], "calib": [25, 33], "attn_dropout": [25, 33], "resid_dropout": [25, 33], "ln_2": [25, 33], "gpt2mlp": [25, 33], "3072": [25, 33], "act": [25, 33], "newgeluactiv": [25, 33], "ln_f": [25, 33], "lm_head": [25, 33], "replac": [25, 33, 35], "1202": [25, 33], "8436": [25, 33], "give": [25, 33, 77], "convert_to_scal": [25, 33], "maxbound": [25, 33], "weight_only_qlinear": [25, 33], "export_amax": [25, 33], "squeez": [25, 33, 37, 39, 41, 42, 55, 60, 62, 68, 80, 86], "contigu": [25, 33], "765": [25, 33], "766": [25, 33], "767": [25, 33], "769": [25, 33], "770": [25, 33], "1533": [25, 33], "1534": [25, 33], "1535": [25, 33], "1536": [25, 33], "1537": [25, 33], "1538": [25, 33], "2301": [25, 33], "2302": [25, 33], "2303": [25, 33], "1767168": [25, 33], "1767169": [25, 33], "1767170": [25, 33], "1767933": [25, 33], "1767934": [25, 33], "1767935": [25, 33], "1767936": [25, 33], "1767937": [25, 33], "1767938": [25, 33], "1768701": [25, 33], "1768702": [25, 33], "1768703": [25, 33], "1768704": [25, 33], "1768705": [25, 33], "1768706": [25, 33], "1769469": [25, 33], "1769470": [25, 33], "1769471": [25, 33], "0073": [25, 33], "0070": [25, 33], "0067": [25, 33], "0026": [25, 33], "0016": [25, 33], "0021": [25, 33], "load_quant_weights_from_hf": [25, 33], "arrai": [34, 35, 76], "ndarrai": [34, 35], "jnp": [34, 35], "num_dim": 34, "as_tensor": 34, "ordinari": 34, "content": [34, 43, 71, 85], "underli": 34, "elementwis": [34, 35, 36, 38, 46, 48, 58, 61, 63, 72, 75, 78, 81], "necessari": 34, "s1": 34, "s2": 34, "stack_info": 35, "stackinfo": 35, "multi": 35, "dimension": [35, 77], "uniform": 35, "uniqu": 35, "infom": 35, "__add__": 35, "sum": [35, 44, 55, 76], "__eq__": 35, "equal": [35, 44, 47, 53, 69, 77, 79], "comparison": 35, "__ge__": 35, "greater": 35, "__getitem__": 35, "slice": [35, 50, 76, 77], "__gt__": 35, "__le__": 35, "less": 35, "__lt__": 35, "todo": 35, "26": 35, "i1": 35, "__matmul__": 35, "dot": [35, 76], "product": [35, 68], "2d": 35, "differnt": 35, "relev": 35, "multipli": 35, "__mul__": 35, "__ne__": 35, "__pow__": 35, "exponenti": [35, 48], "__radd__": 35, "__rmul__": 35, "__rpow__": 35, "__rsub__": 35, "subtract": 35, "__rtruediv__": 35, "__sub__": 35, "__truediv__": 35, "absolut": [36, 38], "entri": 36, "keepdim": [37, 39, 41, 42, 60, 62, 68, 80, 86], "AND": 37, "retain": [37, 39, 41, 42, 60, 62, 68, 80, 86], "rtol": 38, "atol": 38, "08": 38, "equat": 38, "lh": [38, 61, 63], "rh": [38, 61, 63], "toler": 38, "1e10": 38, "10000000000": 38, "OR": 39, "overload": 40, "stop": 40, "half": 40, "open": 40, "interv": 40, "increment": 40, "inclus": 40, "exclus": 40, "upper": [40, 84], "space": 40, "3000": 40, "1000": 40, "9000": 40, "7000": 40, "flatten": [41, 42], "direct": 43, "finer": 43, "cosin": 46, "5403": 46, "4161": 46, "wise": [47, 69], "scalar": [47, 51, 52, 69], "d0": [47, 69], "d1": [47, 69], "valid": [47, 69], "99872": [47, 69], "9987": 47, "9974": 47, "9962": 47, "96125": [47, 69], "8450": 47, "8063": 47, "7675": 47, "x_": [48, 76], "7183": 48, "3891": 48, "singleton": [49, 79, 85], "prepend": 49, "count": 50, "last": 50, "equival": [50, 77], "overrid": [52, 57], "behav": 53, "approxim": 54, "gaussian": 54, "unit": [54, 70, 74], "pi": 54, "044715": 54, "8412": [54, 67], "9546": [54, 67], "9964": 54, "ab": 55, "allclos": 55, "argmax": 55, "argmin": 55, "cast": [55, 59], "co": 55, "exp": [55, 73, 74], "expand": 55, "flip": 55, "full_lik": [55, 65, 89], "gather": 55, "iota_lik": 55, "masked_fil": 55, "permut": 55, "plugin": 55, "prod": 55, "relu": 55, "rsqrt": 55, "sigmoid": [55, 74], "silu": 55, "sin": 55, "tril": 55, "triu": 55, "unsqueez": 55, "var": 55, "natur": 58, "logarithm": 58, "6931": 58, "mask": 59, "otherwis": [59, 67, 87], "perm": 66, "output_info": 67, "namespac": 67, "ipluginv2dynamicext": 67, "ipluginv3": 67, "These": 67, "primit": 67, "customgeluplugindynam": 67, "type_id": 67, "rectifi": 70, "atmost": 71, "reciproc": 72, "squar": [72, 78], "root": [72, 78], "7071": 72, "5774": 72, "x_i": [73, 74, 86], "7311": [73, 74, 76], "8808": 73, "9526": 73, "9820": 73, "swish": 74, "cdot": 74, "8577": 74, "9281": 74, "sine": 75, "8415": 75, "9093": 75, "j": 76, "th": [76, 86], "lie": 76, "whole": 76, "2689": 76, "indices_or_sect": 77, "texttt": 77, "2k": 77, "i_0": 77, "i_1": 77, "i_n": 77, "i_2": 77, "boundari": 77, "choos": 77, "4142": 78, "7321": 78, "remov": 79, "And": 79, "third": 79, "hyperbol": 81, "tangent": 81, "dim0": 82, "dim1": 82, "swap": 82, "diagon": [83, 84], "triangular": [83, 84], "matric": [83, 84], "bessel": 86, "condit": 87, "select": 87, "three": 87}, "objects": {"tripy": [[0, 0, 1, "", "ArgInfo"], [2, 0, 1, "", "Compiler"], [11, 0, 1, "", "Conv"], [12, 0, 1, "", "ConvTranspose"], [13, 0, 1, "", "Embedding"], [1, 0, 1, "", "Executable"], [14, 0, 1, "", "GroupNorm"], [3, 0, 1, "", "InputInfo"], [16, 0, 1, "", "LayerNorm"], [17, 0, 1, "", "Linear"], [15, 0, 1, "", "Module"], [18, 0, 1, "", "Parameter"], [34, 0, 1, "", "Shape"], [35, 0, 1, "", "Tensor"], [8, 0, 1, "", "TripyException"], [36, 4, 1, "", "abs"], [37, 4, 1, "", "all"], [38, 4, 1, "", "allclose"], [39, 4, 1, "", "any"], [40, 4, 1, "", "arange"], [41, 4, 1, "", "argmax"], [42, 4, 1, "", "argmin"], [5, 0, 1, "", "bfloat16"], [5, 0, 1, "", "bool"], [43, 4, 1, "", "cast"], [44, 4, 1, "", "concatenate"], [4, 5, 0, "-", "config"], [45, 4, 1, "", "copy"], [46, 4, 1, "", "cos"], [47, 4, 1, "", "dequantize"], [6, 0, 1, "", "device"], [5, 0, 1, "", "dtype"], [48, 4, 1, "", "exp"], [49, 4, 1, "", "expand"], [50, 4, 1, "", "flip"], [5, 0, 1, "", "float16"], [5, 0, 1, "", "float32"], [5, 0, 1, "", "float8"], [51, 4, 1, "", "full"], [52, 4, 1, "", "full_like"], [53, 4, 1, "", "gather"], [54, 4, 1, "", "gelu"], [5, 0, 1, "", "int32"], [5, 0, 1, "", "int4"], [5, 0, 1, "", "int64"], [5, 0, 1, "", "int8"], [56, 4, 1, "", "iota"], [57, 4, 1, "", "iota_like"], [58, 4, 1, "", "log"], [10, 6, 1, "", "logger"], [59, 4, 1, "", "masked_fill"], [60, 4, 1, "", "max"], [61, 4, 1, "", "maximum"], [62, 4, 1, "", "mean"], [63, 4, 1, "", "minimum"], [64, 4, 1, "", "ones"], [65, 4, 1, "", "ones_like"], [66, 4, 1, "", "permute"], [67, 4, 1, "", "plugin"], [68, 4, 1, "", "prod"], [69, 4, 1, "", "quantize"], [70, 4, 1, "", "relu"], [71, 4, 1, "", "reshape"], [72, 4, 1, "", "rsqrt"], [73, 4, 1, "", "sigmoid"], [74, 4, 1, "", "silu"], [75, 4, 1, "", "sin"], [76, 4, 1, "", "softmax"], [77, 4, 1, "", "split"], [78, 4, 1, "", "sqrt"], [79, 4, 1, "", "squeeze"], [80, 4, 1, "", "sum"], [81, 4, 1, "", "tanh"], [82, 4, 1, "", "transpose"], [83, 4, 1, "", "tril"], [84, 4, 1, "", "triu"], [85, 4, 1, "", "unsqueeze"], [86, 4, 1, "", "var"], [87, 4, 1, "", "where"], [88, 4, 1, "", "zeros"], [89, 4, 1, "", "zeros_like"]], "tripy.ArgInfo": [[0, 1, 1, "", "dtype"], [0, 1, 1, "", "shape_bounds"]], "tripy.Compiler": [[2, 2, 1, "", "compile"]], "tripy.Conv": [[11, 2, 1, "", "__call__"], [11, 1, 1, "", "bias"], [11, 1, 1, "", "dilation"], [11, 1, 1, "", "dtype"], [11, 1, 1, "", "groups"], [11, 1, 1, "", "padding"], [11, 1, 1, "", "stride"], [11, 1, 1, "", "weight"]], "tripy.ConvTranspose": [[12, 2, 1, "", "__call__"], [12, 1, 1, "", "bias"], [12, 1, 1, "", "dilation"], [12, 1, 1, "", "dtype"], [12, 1, 1, "", "groups"], [12, 1, 1, "", "padding"], [12, 1, 1, "", "stride"], [12, 1, 1, "", "weight"]], "tripy.Embedding": [[13, 2, 1, "", "__call__"], [13, 1, 1, "", "dtype"], [13, 1, 1, "", "weight"]], "tripy.Executable": [[1, 2, 1, "", "__call__"], [1, 2, 1, "", "get_input_info"], [1, 2, 1, "", "get_output_info"], [1, 2, 1, "", "load"], [1, 2, 1, "", "save"]], "tripy.GroupNorm": [[14, 2, 1, "", "__call__"], [14, 1, 1, "", "bias"], [14, 1, 1, "", "dtype"], [14, 1, 1, "", "eps"], [14, 1, 1, "", "num_channels"], [14, 1, 1, "", "num_groups"], [14, 1, 1, "", "weight"]], "tripy.LayerNorm": [[16, 2, 1, "", "__call__"], [16, 1, 1, "", "bias"], [16, 1, 1, "", "dtype"], [16, 1, 1, "", "eps"], [16, 1, 1, "", "weight"]], "tripy.Linear": [[17, 2, 1, "", "__call__"], [17, 1, 1, "", "bias"], [17, 1, 1, "", "dtype"], [17, 1, 1, "", "input_scale"], [17, 1, 1, "", "quant_dtype"], [17, 1, 1, "", "weight"], [17, 1, 1, "", "weight_quant_dim"], [17, 1, 1, "", "weight_scale"]], "tripy.Module": [[15, 2, 1, "", "load_from_state_dict"], [15, 2, 1, "", "named_children"], [15, 2, 1, "", "named_parameters"], [15, 2, 1, "", "state_dict"]], "tripy.Shape": [[34, 2, 1, "", "add"], [34, 2, 1, "", "as_tensor"]], "tripy.Tensor": [[35, 2, 1, "", "__add__"], [35, 2, 1, "", "__eq__"], [35, 2, 1, "", "__ge__"], [35, 2, 1, "", "__getitem__"], [35, 2, 1, "", "__gt__"], [35, 2, 1, "", "__le__"], [35, 2, 1, "", "__lt__"], [35, 2, 1, "", "__matmul__"], [35, 2, 1, "", "__mul__"], [35, 2, 1, "", "__ne__"], [35, 2, 1, "", "__pow__"], [35, 2, 1, "", "__radd__"], [35, 2, 1, "", "__rmul__"], [35, 2, 1, "", "__rpow__"], [35, 2, 1, "", "__rsub__"], [35, 2, 1, "", "__rtruediv__"], [35, 2, 1, "", "__sub__"], [35, 2, 1, "", "__truediv__"], [35, 3, 1, "", "shape"]], "tripy.config": [[4, 6, 1, "", "timing_cache_file_path"]], "tripy.dtype": [[5, 1, 1, "", "itemsize"], [5, 1, 1, "", "name"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:module", "6": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"], "6": ["py", "data", "Python data"]}, "titleterms": {"arginfo": 0, "execut": [1, 19, 27], "compil": [2, 19, 24, 27, 32], "see": [2, 15], "also": [2, 15], "inputinfo": 3, "config": 4, "dtype": 5, "devic": 6, "except": 7, "tripyexcept": 8, "tripi": [9, 19, 24, 25, 26, 27, 32, 33], "A": [9, 19, 26, 27], "python": [9, 23, 26, 31], "program": [9, 24, 26, 32], "model": [9, 25, 26, 33], "For": [9, 26], "tensorrt": [9, 20, 26, 28], "instal": [9, 26], "quickstart": [9, 26], "user": 9, "guid": 9, "api": [9, 21, 22, 23, 29, 30, 31], "refer": 9, "develop": 9, "logger": 10, "conv": 11, "convtranspos": 12, "embed": 13, "groupnorm": 14, "modul": [15, 24, 25, 32, 33], "layernorm": 16, "linear": 17, "paramet": 18, "architectur": [19, 27], "tabl": [19, 21, 22, 24, 25, 27, 29, 30, 32, 33], "content": [19, 21, 22, 24, 25, 27, 29, 30, 32, 33], "overview": [19, 27], "trace": [19, 22, 27, 30], "flatir": [19, 21, 22, 27, 29, 30], "mlir": [19, 20, 23, 27, 28, 31], "dai": [19, 27], "In": [19, 27], "The": [19, 22, 23, 25, 27, 30, 31, 33], "life": [19, 27], "Of": [19, 27], "tensor": [19, 21, 27, 29, 35, 55], "where": [19, 27, 87], "do": [19, 27], "tp": [19, 27], "full": [19, 27, 51], "tanh": [19, 27, 81], "come": [19, 27], "from": [19, 27], "what": [19, 24, 27, 32], "doe": [19, 21, 27, 29], "It": [19, 27], "implicit": [19, 27], "frontend": [19, 27], "graph": [19, 27], "evalu": [19, 24, 27, 32], "build": [19, 21, 27, 29], "lower": [19, 27], "To": [19, 21, 24, 27, 29, 32], "debug": [20, 28], "backend": [20, 28], "design": [21, 29], "decis": [21, 29], "No": [21, 29], "redund": [21, 29], "why": [21, 29], "to_flat_ir": [21, 29], "reli": [21, 29], "On": [21, 29], "bind": [21, 29], "input": [21, 29], "output": [21, 29], "altern": [21, 29], "1": [21, 29], "return": [21, 29], "oper": [21, 22, 29, 30, 55], "2": [21, 29], "function": [21, 29], "i": [21, 24, 29, 32], "baseflatirop": [21, 29], "to_mlir": [21, 29], "asymmetr": [21, 29], "With": [21, 25, 29, 33], "basetraceop": [21, 29], "Not": [21, 24, 29, 32], "jax": [21, 29], "ad": [22, 30], "new": [22, 30], "implement": [22, 30], "expos": [22, 30], "And": [22, 30], "public": [22, 30], "test": [22, 30], "integr": [22, 30], "done": [22, 30], "us": [23, 24, 25, 31, 32, 33], "dialect": [23, 31], "choos": [23, 31], "right": [23, 31], "": [23, 31], "sourc": [23, 31], "code": [23, 24, 31, 32], "exampl": [23, 31], "usag": [23, 31], "an": [24, 32], "introduct": [24, 32], "your": [24, 32], "first": [24, 32], "lazi": [24, 32], "put": [24, 32], "off": [24, 32], "work": [24, 32], "organ": [24, 32], "Or": [24, 32], "quantiz": [25, 33, 69], "run": [25, 33], "calibr": [25, 33], "optim": [25, 33], "load": [25, 33], "scale": [25, 33], "Into": [25, 33], "shape": 34, "ab": 36, "all": 37, "allclos": 38, "ani": 39, "arang": 40, "argmax": 41, "argmin": 42, "cast": 43, "concaten": 44, "copi": 45, "co": 46, "dequant": 47, "exp": 48, "expand": 49, "flip": 50, "full_lik": 52, "gather": 53, "gelu": 54, "iota": 56, "iota_lik": 57, "log": 58, "masked_fil": 59, "max": 60, "maximum": 61, "mean": 62, "minimum": 63, "ones": 64, "ones_lik": 65, "permut": 66, "plugin": 67, "prod": 68, "relu": 70, "reshap": 71, "rsqrt": 72, "sigmoid": 73, "silu": 74, "sin": 75, "softmax": 76, "split": 77, "sqrt": 78, "squeez": 79, "sum": 80, "transpos": 82, "tril": 83, "triu": 84, "unsqueez": 85, "var": 86, "zero": 88, "zeros_lik": 89}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"TripyException": [[8, "tripyexception"]], "Tripy: A Python Programming Model For TensorRT": [[9, "tripy-a-python-programming-model-for-tensorrt"], [26, "tripy-a-python-programming-model-for-tensorrt"]], "Installation": [[9, "installation"], [26, "installation"]], "Quickstart": [[9, "quickstart"], [26, "quickstart"]], "User Guides": [[9, null]], "API Reference": [[9, null]], "Developer Guides": [[9, null]], "config": [[4, "module-tripy.config"]], "dtype": [[5, "dtype"]], "Debugging MLIR-TensorRT backend": [[20, "debugging-mlir-tensorrt-backend"], [28, "debugging-mlir-tensorrt-backend"]], "Design Decisions": [[21, "design-decisions"], [29, "design-decisions"]], "Table of Contents": [[21, "table-of-contents"], [22, "table-of-contents"], [24, "table-of-contents"], [25, "table-of-contents"], [27, "table-of-contents"], [29, "table-of-contents"], [30, "table-of-contents"], [32, "table-of-contents"], [33, "table-of-contents"], [19, "table-of-contents"]], "No API Redundancy": [[21, "no-api-redundancy"], [29, "no-api-redundancy"]], "Why FlatIR?": [[21, "why-flatir"], [29, "why-flatir"]], "Why Does to_flat_ir() Rely On Binding To Input/Output Tensors?": [[21, "why-does-to-flat-ir-rely-on-binding-to-input-output-tensors"], [29, "why-does-to-flat-ir-rely-on-binding-to-input-output-tensors"]], "Alternative 1: Returning Operators": [[21, "alternative-1-returning-operators"], [29, "alternative-1-returning-operators"]], "Alternative 2: Functional APIs": [[21, "alternative-2-functional-apis"], [29, "alternative-2-functional-apis"]], "Why Is BaseFlatIROp.to_mlir() Asymmetric With BaseTraceOp.to_flat_ir()?": [[21, "why-is-baseflatirop-to-mlir-asymmetric-with-basetraceop-to-flat-ir"], [29, "why-is-baseflatirop-to-mlir-asymmetric-with-basetraceop-to-flat-ir"]], "Why Not Build On JAX?": [[21, "why-not-build-on-jax"], [29, "why-not-build-on-jax"]], "Using Python APIs of MLIR Dialects": [[23, "using-python-apis-of-mlir-dialects"], [31, "using-python-apis-of-mlir-dialects"]], "Choosing The Right Dialect(s)": [[23, "choosing-the-right-dialect-s"], [31, "choosing-the-right-dialect-s"]], "Python Source Code": [[23, "python-source-code"], [31, "python-source-code"]], "Example Usage": [[23, "example-usage"], [31, "example-usage"]], "Adding New Operators": [[22, "adding-new-operators"], [30, "adding-new-operators"]], "Implementation": [[22, "implementation"], [30, "implementation"]], "FlatIR Operator": [[22, "flatir-operator"], [30, "flatir-operator"]], "Exposing The Operator": [[22, "exposing-the-operator"], [22, "id1"], [30, "exposing-the-operator"], [30, "id1"]], "Trace Operator And The Public API": [[22, "trace-operator-and-the-public-api"], [30, "trace-operator-and-the-public-api"]], "Trace Operator": [[22, "trace-operator"], [30, "trace-operator"]], "Public API": [[22, "public-api"], [30, "public-api"]], "Testing": [[22, "testing"], [30, "testing"]], "Testing The FlatIR Operator": [[22, "testing-the-flatir-operator"], [30, "testing-the-flatir-operator"]], "Testing The Trace Operator And Public API": [[22, "testing-the-trace-operator-and-public-api"], [30, "testing-the-trace-operator-and-public-api"]], "Integration Tests": [[22, "integration-tests"], [30, "integration-tests"]], "Done!": [[22, "done"], [30, "done"]], "An Introduction To Tripy": [[24, "an-introduction-to-tripy"], [32, "an-introduction-to-tripy"]], "What Is Tripy?": [[24, "what-is-tripy"], [32, "what-is-tripy"]], "Your First Tripy Program": [[24, "your-first-tripy-program"], [32, "your-first-tripy-program"]], "Lazy Evaluation: Putting Off Work": [[24, "lazy-evaluation-putting-off-work"], [32, "lazy-evaluation-putting-off-work"]], "Organizing Code Using Modules": [[24, "organizing-code-using-modules"], [32, "organizing-code-using-modules"]], "To compile Or Not To compile": [[24, "to-compile-or-not-to-compile"], [32, "to-compile-or-not-to-compile"]], "Quantization": [[25, "quantization"], [33, "quantization"]], "Using Quantized Modules": [[25, "using-quantized-modules"], [33, "using-quantized-modules"]], "Running Quantized Models": [[25, "running-quantized-models"], [33, "running-quantized-models"]], "Calibration With Model Optimizer": [[25, "calibration-with-model-optimizer"], [33, "calibration-with-model-optimizer"]], "Load Scales Into The Tripy Model": [[25, "load-scales-into-the-tripy-model"], [33, "load-scales-into-the-tripy-model"]], "Architecture": [[27, "architecture"], [19, "architecture"]], "Overview": [[27, "overview"], [19, "overview"]], "Trace": [[27, "trace"], [19, "trace"]], "FlatIR": [[27, "flatir"], [19, "flatir"]], "MLIR": [[27, "mlir"], [19, "mlir"]], "A Day In The Life Of A Tripy Tensor": [[27, "a-day-in-the-life-of-a-tripy-tensor"], [19, "a-day-in-the-life-of-a-tripy-tensor"]], "Tracing": [[27, "tracing"], [19, "tracing"]], "Where Do tp.full() and tp.tanh() Come From?": [[27, "where-do-tp-full-and-tp-tanh-come-from"], [19, "where-do-tp-full-and-tp-tanh-come-from"]], "What Does It Do?": [[27, "what-does-it-do"], [19, "what-does-it-do"]], "The Implicit Frontend Graph": [[27, "the-implicit-frontend-graph"], [19, "the-implicit-frontend-graph"]], "Evaluation": [[27, "evaluation"], [19, "evaluation"]], "Building The Trace": [[27, "building-the-trace"], [19, "building-the-trace"]], "Lowering To FlatIR": [[27, "lowering-to-flatir"], [19, "lowering-to-flatir"]], "Lowering To MLIR": [[27, "lowering-to-mlir"], [19, "lowering-to-mlir"]], "Compilation": [[27, "compilation"], [19, "compilation"]], "Execution": [[27, "execution"], [19, "execution"]], "device": [[6, "device"]], "Exception": [[7, "exception"]], "Parameter": [[18, "parameter"]], "cast": [[43, "cast"]], "argmin": [[42, "argmin"]], "max": [[60, "max"]], "maximum": [[61, "maximum"]], "concatenate": [[44, "concatenate"]], "copy": [[45, "copy"]], "all": [[37, "all"]], "abs": [[36, "abs"]], "any": [[39, "any"]], "allclose": [[38, "allclose"]], "dequantize": [[47, "dequantize"]], "cos": [[46, "cos"]], "ArgInfo": [[0, "arginfo"]], "Executable": [[1, "executable"]], "InputInfo": [[3, "inputinfo"]], "Compiler": [[2, "compiler"]], "See also:": [[2, null], [15, null]], "full_like": [[52, "full-like"]], "gather": [[53, "gather"]], "Tensor Operations": [[55, "tensor-operations"]], "gelu": [[54, "gelu"]], "expand": [[49, "expand"]], "exp": [[48, "exp"]], "arange": [[40, "arange"]], "argmax": [[41, "argmax"]], "iota_like": [[57, "iota-like"]], "iota": [[56, "iota"]], "log": [[58, "log"]], "masked_fill": [[59, "masked-fill"]], "ConvTranspose": [[12, "convtranspose"]], "Embedding": [[13, "embedding"]], "minimum": [[63, "minimum"]], "mean": [[62, "mean"]], "ones": [[64, "ones"]], "ones_like": [[65, "ones-like"]], "prod": [[68, "prod"]], "quantize": [[69, "quantize"]], "relu": [[70, "relu"]], "reshape": [[71, "reshape"]], "rsqrt": [[72, "rsqrt"]], "sigmoid": [[73, "sigmoid"]], "sin": [[75, "sin"]], "silu": [[74, "silu"]], "sqrt": [[78, "sqrt"]], "squeeze": [[79, "squeeze"]], "tanh": [[81, "tanh"]], "sum": [[80, "sum"]], "Conv": [[11, "conv"]], "logger": [[10, "logger"]], "tril": [[83, "tril"]], "transpose": [[82, "transpose"]], "zeros": [[88, "zeros"]], "zeros_like": [[89, "zeros-like"]], "unsqueeze": [[85, "unsqueeze"]], "triu": [[84, "triu"]], "var": [[86, "var"]], "where": [[87, "where"]], "Shape": [[34, "shape"]], "Tensor": [[35, "tensor"]], "Linear": [[17, "linear"]], "LayerNorm": [[16, "layernorm"]], "permute": [[66, "permute"]], "plugin": [[67, "plugin"]], "flip": [[50, "flip"]], "full": [[51, "full"]], "GroupNorm": [[14, "groupnorm"]], "Module": [[15, "module"]], "softmax": [[76, "softmax"]], "split": [[77, "split"]]}, "indexentries": {"arginfo (class in tripy)": [[0, "tripy.ArgInfo"]], "dtype (tripy.arginfo attribute)": [[0, "tripy.ArgInfo.dtype"]], "shape_bounds (tripy.arginfo attribute)": [[0, "tripy.ArgInfo.shape_bounds"]], "executable (class in tripy)": [[1, "tripy.Executable"]], "__call__() (tripy.executable method)": [[1, "tripy.Executable.__call__"]], "get_input_info() (tripy.executable method)": [[1, "tripy.Executable.get_input_info"]], "get_output_info() (tripy.executable method)": [[1, "tripy.Executable.get_output_info"]], "load() (tripy.executable class method)": [[1, "tripy.Executable.load"]], "save() (tripy.executable method)": [[1, "tripy.Executable.save"]], "compiler (class in tripy)": [[2, "tripy.Compiler"]], "compile() (tripy.compiler method)": [[2, "tripy.Compiler.compile"]], "inputinfo (class in tripy)": [[3, "tripy.InputInfo"]], "module": [[4, "module-tripy.config"]], "timing_cache_file_path (in module tripy.config)": [[4, "tripy.config.timing_cache_file_path"]], "tripy.config": [[4, "module-tripy.config"]], "bfloat16 (class in tripy)": [[5, "tripy.bfloat16"]], "bool (class in tripy)": [[5, "tripy.bool"]], "dtype (class in tripy)": [[5, "tripy.dtype"]], "float16 (class in tripy)": [[5, "tripy.float16"]], "float32 (class in tripy)": [[5, "tripy.float32"]], "float8 (class in tripy)": [[5, "tripy.float8"]], "int32 (class in tripy)": [[5, "tripy.int32"]], "int4 (class in tripy)": [[5, "tripy.int4"]], "int64 (class in tripy)": [[5, "tripy.int64"]], "int8 (class in tripy)": [[5, "tripy.int8"]], "itemsize (tripy.dtype attribute)": [[5, "tripy.dtype.itemsize"]], "name (tripy.dtype attribute)": [[5, "tripy.dtype.name"]], "device (class in tripy)": [[6, "tripy.device"]], "tripyexception (class in tripy)": [[8, "tripy.TripyException"]], "logger (in module tripy)": [[10, "tripy.logger"]], "conv (class in tripy)": [[11, "tripy.Conv"]], "__call__() (tripy.conv method)": [[11, "tripy.Conv.__call__"]], "bias (tripy.conv attribute)": [[11, "tripy.Conv.bias"]], "dilation (tripy.conv attribute)": [[11, "tripy.Conv.dilation"]], "dtype (tripy.conv attribute)": [[11, "tripy.Conv.dtype"]], "groups (tripy.conv attribute)": [[11, "tripy.Conv.groups"]], "padding (tripy.conv attribute)": [[11, "tripy.Conv.padding"]], "stride (tripy.conv attribute)": [[11, "tripy.Conv.stride"]], "weight (tripy.conv attribute)": [[11, "tripy.Conv.weight"]], "convtranspose (class in tripy)": [[12, "tripy.ConvTranspose"]], "__call__() (tripy.convtranspose method)": [[12, "tripy.ConvTranspose.__call__"]], "bias (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.bias"]], "dilation (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.dilation"]], "dtype (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.dtype"]], "groups (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.groups"]], "padding (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.padding"]], "stride (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.stride"]], "weight (tripy.convtranspose attribute)": [[12, "tripy.ConvTranspose.weight"]], "embedding (class in tripy)": [[13, "tripy.Embedding"]], "__call__() (tripy.embedding method)": [[13, "tripy.Embedding.__call__"]], "dtype (tripy.embedding attribute)": [[13, "tripy.Embedding.dtype"]], "weight (tripy.embedding attribute)": [[13, "tripy.Embedding.weight"]], "groupnorm (class in tripy)": [[14, "tripy.GroupNorm"]], "__call__() (tripy.groupnorm method)": [[14, "tripy.GroupNorm.__call__"]], "bias (tripy.groupnorm attribute)": [[14, "tripy.GroupNorm.bias"]], "dtype (tripy.groupnorm attribute)": [[14, "tripy.GroupNorm.dtype"]], "eps (tripy.groupnorm attribute)": [[14, "tripy.GroupNorm.eps"]], "num_channels (tripy.groupnorm attribute)": [[14, "tripy.GroupNorm.num_channels"]], "num_groups (tripy.groupnorm attribute)": [[14, "tripy.GroupNorm.num_groups"]], "weight (tripy.groupnorm attribute)": [[14, "tripy.GroupNorm.weight"]], "module (class in tripy)": [[15, "tripy.Module"]], "load_from_state_dict() (tripy.module method)": [[15, "tripy.Module.load_from_state_dict"]], "named_children() (tripy.module method)": [[15, "tripy.Module.named_children"]], "named_parameters() (tripy.module method)": [[15, "tripy.Module.named_parameters"]], "state_dict() (tripy.module method)": [[15, "tripy.Module.state_dict"]], "layernorm (class in tripy)": [[16, "tripy.LayerNorm"]], "__call__() (tripy.layernorm method)": [[16, "tripy.LayerNorm.__call__"]], "bias (tripy.layernorm attribute)": [[16, "tripy.LayerNorm.bias"]], "dtype (tripy.layernorm attribute)": [[16, "tripy.LayerNorm.dtype"]], "eps (tripy.layernorm attribute)": [[16, "tripy.LayerNorm.eps"]], "weight (tripy.layernorm attribute)": [[16, "tripy.LayerNorm.weight"]], "linear (class in tripy)": [[17, "tripy.Linear"]], "__call__() (tripy.linear method)": [[17, "tripy.Linear.__call__"]], "bias (tripy.linear attribute)": [[17, "tripy.Linear.bias"]], "dtype (tripy.linear attribute)": [[17, "tripy.Linear.dtype"]], "input_scale (tripy.linear attribute)": [[17, "tripy.Linear.input_scale"]], "quant_dtype (tripy.linear attribute)": [[17, "tripy.Linear.quant_dtype"]], "weight (tripy.linear attribute)": [[17, "tripy.Linear.weight"]], "weight_quant_dim (tripy.linear attribute)": [[17, "tripy.Linear.weight_quant_dim"]], "weight_scale (tripy.linear attribute)": [[17, "tripy.Linear.weight_scale"]], "parameter (class in tripy)": [[18, "tripy.Parameter"]], "shape (class in tripy)": [[34, "tripy.Shape"]], "add() (tripy.shape method)": [[34, "tripy.Shape.add"]], "as_tensor() (tripy.shape method)": [[34, "tripy.Shape.as_tensor"]], "tensor (class in tripy)": [[35, "tripy.Tensor"]], "__add__() (tripy.tensor method)": [[35, "tripy.Tensor.__add__"]], "__eq__() (tripy.tensor method)": [[35, "tripy.Tensor.__eq__"]], "__ge__() (tripy.tensor method)": [[35, "tripy.Tensor.__ge__"]], "__getitem__() (tripy.tensor method)": [[35, "tripy.Tensor.__getitem__"]], "__gt__() (tripy.tensor method)": [[35, "tripy.Tensor.__gt__"]], "__le__() (tripy.tensor method)": [[35, "tripy.Tensor.__le__"]], "__lt__() (tripy.tensor method)": [[35, "tripy.Tensor.__lt__"]], "__matmul__() (tripy.tensor method)": [[35, "tripy.Tensor.__matmul__"]], "__mul__() (tripy.tensor method)": [[35, "tripy.Tensor.__mul__"]], "__ne__() (tripy.tensor method)": [[35, "tripy.Tensor.__ne__"]], "__pow__() (tripy.tensor method)": [[35, "tripy.Tensor.__pow__"]], "__radd__() (tripy.tensor method)": [[35, "tripy.Tensor.__radd__"]], "__rmul__() (tripy.tensor method)": [[35, "tripy.Tensor.__rmul__"]], "__rpow__() (tripy.tensor method)": [[35, "tripy.Tensor.__rpow__"]], "__rsub__() (tripy.tensor method)": [[35, "tripy.Tensor.__rsub__"]], "__rtruediv__() (tripy.tensor method)": [[35, "tripy.Tensor.__rtruediv__"]], "__sub__() (tripy.tensor method)": [[35, "tripy.Tensor.__sub__"]], "__truediv__() (tripy.tensor method)": [[35, "tripy.Tensor.__truediv__"]], "shape (tripy.tensor property)": [[35, "tripy.Tensor.shape"]], "abs() (in module tripy)": [[36, "tripy.abs"]], "all() (in module tripy)": [[37, "tripy.all"]], "allclose() (in module tripy)": [[38, "tripy.allclose"]], "any() (in module tripy)": [[39, "tripy.any"]], "arange() (in module tripy)": [[40, "tripy.arange"]], "argmax() (in module tripy)": [[41, "tripy.argmax"]], "argmin() (in module tripy)": [[42, "tripy.argmin"]], "cast() (in module tripy)": [[43, "tripy.cast"]], "concatenate() (in module tripy)": [[44, "tripy.concatenate"]], "copy() (in module tripy)": [[45, "tripy.copy"]], "cos() (in module tripy)": [[46, "tripy.cos"]], "dequantize() (in module tripy)": [[47, "tripy.dequantize"]], "exp() (in module tripy)": [[48, "tripy.exp"]], "expand() (in module tripy)": [[49, "tripy.expand"]], "flip() (in module tripy)": [[50, "tripy.flip"]], "full() (in module tripy)": [[51, "tripy.full"]], "full_like() (in module tripy)": [[52, "tripy.full_like"]], "gather() (in module tripy)": [[53, "tripy.gather"]], "gelu() (in module tripy)": [[54, "tripy.gelu"]], "iota() (in module tripy)": [[56, "tripy.iota"]], "iota_like() (in module tripy)": [[57, "tripy.iota_like"]], "log() (in module tripy)": [[58, "tripy.log"]], "masked_fill() (in module tripy)": [[59, "tripy.masked_fill"]], "max() (in module tripy)": [[60, "tripy.max"]], "maximum() (in module tripy)": [[61, "tripy.maximum"]], "mean() (in module tripy)": [[62, "tripy.mean"]], "minimum() (in module tripy)": [[63, "tripy.minimum"]], "ones() (in module tripy)": [[64, "tripy.ones"]], "ones_like() (in module tripy)": [[65, "tripy.ones_like"]], "permute() (in module tripy)": [[66, "tripy.permute"]], "plugin() (in module tripy)": [[67, "tripy.plugin"]], "prod() (in module tripy)": [[68, "tripy.prod"]], "quantize() (in module tripy)": [[69, "tripy.quantize"]], "relu() (in module tripy)": [[70, "tripy.relu"]], "reshape() (in module tripy)": [[71, "tripy.reshape"]], "rsqrt() (in module tripy)": [[72, "tripy.rsqrt"]], "sigmoid() (in module tripy)": [[73, "tripy.sigmoid"]], "silu() (in module tripy)": [[74, "tripy.silu"]], "sin() (in module tripy)": [[75, "tripy.sin"]], "softmax() (in module tripy)": [[76, "tripy.softmax"]], "split() (in module tripy)": [[77, "tripy.split"]], "sqrt() (in module tripy)": [[78, "tripy.sqrt"]], "squeeze() (in module tripy)": [[79, "tripy.squeeze"]], "sum() (in module tripy)": [[80, "tripy.sum"]], "tanh() (in module tripy)": [[81, "tripy.tanh"]], "transpose() (in module tripy)": [[82, "tripy.transpose"]], "tril() (in module tripy)": [[83, "tripy.tril"]], "triu() (in module tripy)": [[84, "tripy.triu"]], "unsqueeze() (in module tripy)": [[85, "tripy.unsqueeze"]], "var() (in module tripy)": [[86, "tripy.var"]], "where() (in module tripy)": [[87, "tripy.where"]], "zeros() (in module tripy)": [[88, "tripy.zeros"]], "zeros_like() (in module tripy)": [[89, "tripy.zeros_like"]]}})