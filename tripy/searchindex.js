Search.setIndex({"docnames": ["compiler/arg_info", "compiler/executable", "compiler/index", "compiler/input_info", "config", "datatype", "device", "exception/index", "exception/tripy_exception", "index", "logger", "modules/index", "modules/parameter", "operations/functions/abs", "operations/functions/all", "operations/functions/allclose", "operations/functions/any", "operations/functions/argmax", "operations/functions/argmin", "operations/functions/cast", "operations/functions/concatenate", "operations/functions/copy", "operations/functions/cos", "operations/functions/exp", "operations/functions/expand", "operations/functions/flip", "operations/functions/gather", "operations/functions/gelu", "operations/functions/index", "operations/functions/log", "operations/functions/masked_fill", "operations/functions/max", "operations/functions/maximum", "operations/functions/mean", "operations/functions/minimum", "operations/functions/permute", "operations/functions/plugin", "operations/functions/prod", "operations/functions/relu", "operations/functions/reshape", "operations/functions/rsqrt", "operations/functions/sigmoid", "operations/functions/silu", "operations/functions/sin", "operations/functions/softmax", "operations/functions/split", "operations/functions/sqrt", "operations/functions/squeeze", "operations/functions/sum", "operations/functions/tanh", "operations/functions/transpose", "operations/functions/unsqueeze", "operations/functions/var", "operations/functions/where", "operations/index", "operations/initializers/arange", "operations/initializers/full", "operations/initializers/full_like", "operations/initializers/index", "operations/initializers/iota", "operations/initializers/iota_like", "operations/initializers/ones", "operations/initializers/ones_like", "operations/initializers/tril", "operations/initializers/triu", "operations/initializers/zeros", "operations/initializers/zeros_like", "operations/modules/conv", "operations/modules/conv_transpose", "operations/modules/embedding", "operations/modules/group_norm", "operations/modules/index", "operations/modules/layer_norm", "operations/modules/linear", "operations/quantization/dequantize", "operations/quantization/index", "operations/quantization/quantize", "post0_developer_guides/architecture", "post0_developer_guides/debugging", "post0_developer_guides/design-decisions", "post0_developer_guides/how-to-add-new-ops", "post0_developer_guides/mlir-dialect-python-apis", "pre0_user_guides/00-introduction-to-tripy", "pre0_user_guides/01-quantization", "processed_mds/README", "processed_mds/post0_developer_guides/architecture", "processed_mds/post0_developer_guides/debugging", "processed_mds/post0_developer_guides/design-decisions", "processed_mds/post0_developer_guides/how-to-add-new-ops", "processed_mds/post0_developer_guides/mlir-dialect-python-apis", "processed_mds/pre0_user_guides/00-introduction-to-tripy", "processed_mds/pre0_user_guides/01-quantization", "shape", "tensor/index"], "filenames": ["compiler/arg_info.rst", "compiler/executable.rst", "compiler/index.rst", "compiler/input_info.rst", "config.rst", "datatype.rst", "device.rst", "exception/index.rst", "exception/tripy_exception.rst", "index.rst", "logger.rst", "modules/index.rst", "modules/parameter.rst", "operations/functions/abs.rst", "operations/functions/all.rst", "operations/functions/allclose.rst", "operations/functions/any.rst", "operations/functions/argmax.rst", "operations/functions/argmin.rst", "operations/functions/cast.rst", "operations/functions/concatenate.rst", "operations/functions/copy.rst", "operations/functions/cos.rst", "operations/functions/exp.rst", "operations/functions/expand.rst", "operations/functions/flip.rst", "operations/functions/gather.rst", "operations/functions/gelu.rst", "operations/functions/index.rst", "operations/functions/log.rst", "operations/functions/masked_fill.rst", "operations/functions/max.rst", "operations/functions/maximum.rst", "operations/functions/mean.rst", "operations/functions/minimum.rst", "operations/functions/permute.rst", "operations/functions/plugin.rst", "operations/functions/prod.rst", "operations/functions/relu.rst", "operations/functions/reshape.rst", "operations/functions/rsqrt.rst", "operations/functions/sigmoid.rst", "operations/functions/silu.rst", "operations/functions/sin.rst", "operations/functions/softmax.rst", "operations/functions/split.rst", "operations/functions/sqrt.rst", "operations/functions/squeeze.rst", "operations/functions/sum.rst", "operations/functions/tanh.rst", "operations/functions/transpose.rst", "operations/functions/unsqueeze.rst", "operations/functions/var.rst", "operations/functions/where.rst", "operations/index.rst", "operations/initializers/arange.rst", "operations/initializers/full.rst", "operations/initializers/full_like.rst", "operations/initializers/index.rst", "operations/initializers/iota.rst", "operations/initializers/iota_like.rst", "operations/initializers/ones.rst", "operations/initializers/ones_like.rst", "operations/initializers/tril.rst", "operations/initializers/triu.rst", "operations/initializers/zeros.rst", "operations/initializers/zeros_like.rst", "operations/modules/conv.rst", "operations/modules/conv_transpose.rst", "operations/modules/embedding.rst", "operations/modules/group_norm.rst", "operations/modules/index.rst", "operations/modules/layer_norm.rst", "operations/modules/linear.rst", "operations/quantization/dequantize.rst", "operations/quantization/index.rst", "operations/quantization/quantize.rst", "post0_developer_guides/architecture.rst", "post0_developer_guides/debugging.rst", "post0_developer_guides/design-decisions.rst", "post0_developer_guides/how-to-add-new-ops.rst", "post0_developer_guides/mlir-dialect-python-apis.rst", "pre0_user_guides/00-introduction-to-tripy.rst", "pre0_user_guides/01-quantization.rst", "processed_mds/README.md", "processed_mds/post0_developer_guides/architecture.md", "processed_mds/post0_developer_guides/debugging.md", "processed_mds/post0_developer_guides/design-decisions.md", "processed_mds/post0_developer_guides/how-to-add-new-ops.md", "processed_mds/post0_developer_guides/mlir-dialect-python-apis.md", "processed_mds/pre0_user_guides/00-introduction-to-tripy.md", "processed_mds/pre0_user_guides/01-quantization.md", "shape.rst", "tensor/index.rst"], "titles": ["ArgInfo", "Executable", "Compiler", "InputInfo", "config", "dtype", "device", "Exception", "TripyException", "Tripy: A Python Programming Model For TensorRT", "logger", "Module", "Parameter", "abs", "all", "allclose", "any", "argmax", "argmin", "cast", "concatenate", "copy", "cos", "exp", "expand", "flip", "gather", "gelu", "Functions", "log", "masked_fill", "max", "maximum", "mean", "minimum", "permute", "plugin", "prod", "relu", "reshape", "rsqrt", "sigmoid", "silu", "sin", "softmax", "split", "sqrt", "squeeze", "sum", "tanh", "transpose", "unsqueeze", "var", "where", "Operations", "arange", "full", "full_like", "Initializers", "iota", "iota_like", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Conv", "ConvTranspose", "Embedding", "GroupNorm", "Modules", "LayerNorm", "Linear", "dequantize", "Quantization", "quantize", "Architecture", "Debugging MLIR-TensorRT backend", "Design Decisions", "Adding New Operators", "Using Python APIs of MLIR Dialects", "An Introduction To Tripy", "Quantization", "Tripy: A Python Programming Model For TensorRT", "Architecture", "Debugging MLIR-TensorRT backend", "Design Decisions", "Adding New Operators", "Using Python APIs of MLIR Dialects", "An Introduction To Tripy", "Quantization", "Shape", "Tensor"], "terms": {"class": [0, 1, 2, 3, 5, 6, 8, 11, 12, 67, 68, 69, 70, 72, 73, 79, 80, 82, 87, 88, 90, 92, 93], "tripi": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 86, 87, 88, 92, 93], "shape_bound": [0, 1], "sequenc": [0, 1, 3, 14, 16, 24, 25, 31, 33, 35, 36, 37, 39, 45, 48, 52, 55, 56, 59, 61, 65, 67, 68, 74, 76, 92], "tupl": [0, 3, 11, 36, 47, 80, 88, 93], "int": [0, 2, 3, 14, 16, 17, 18, 20, 24, 25, 26, 31, 33, 35, 36, 37, 39, 44, 45, 47, 48, 50, 51, 52, 56, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 80, 88, 93], "dtype": [0, 1, 2, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93], "sourc": [0, 1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 87, 92, 93], "base": [0, 1, 2, 3, 5, 6, 8, 11, 12, 24, 26, 29, 39, 67, 68, 69, 70, 72, 73, 80, 88, 92, 93], "object": [0, 1, 2, 3, 6, 9, 11, 77, 80, 84, 85, 88, 93], "paramet": [0, 1, 2, 3, 6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 82, 83, 87, 88, 90, 91, 92, 93], "A": [0, 1, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 80, 88, 92, 93], "min": [0, 3, 9, 63, 64, 84], "max": [0, 3, 9, 28, 38, 52, 84], "indic": [0, 2, 3, 9, 17, 18, 24, 26, 36, 45, 53, 63, 64, 67, 68, 69, 80, 82, 84, 88, 90], "bound": [0, 55], "each": [0, 27, 36, 38, 41, 42, 44, 53, 63, 64, 67, 68, 69, 77, 78, 83, 85, 86, 91], "dimens": [0, 3, 14, 16, 17, 18, 20, 24, 25, 26, 31, 33, 35, 37, 39, 44, 45, 47, 48, 50, 51, 52, 59, 60, 63, 64, 67, 68, 72, 73, 74, 76, 79, 80, 87, 88, 92, 93], "The": [0, 1, 2, 3, 5, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 82, 87, 90, 92, 93], "datatyp": [0, 17, 18, 19, 25, 53, 55, 61, 62, 63, 64, 65, 66, 80, 82, 88, 90, 92, 93], "argument": [0, 1, 2, 36, 45, 80, 83, 88, 91, 93], "arg_nam": 1, "output_devic": 1, "repres": [1, 6, 80, 88, 92, 93], "compil": [1, 3, 4, 9, 12, 78, 79, 80, 84, 86, 87, 88], "gener": [1, 9, 55, 77, 79, 80, 81, 84, 85, 87, 88, 89], "__call__": [1, 11, 67, 68, 69, 70, 72, 73, 82, 90], "arg": [1, 2, 55, 80, 88], "kwarg": [1, 2, 36, 55], "tensor": [1, 2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92], "invok": 1, "specifi": [1, 9, 14, 16, 17, 18, 19, 25, 26, 31, 33, 37, 39, 47, 48, 51, 52, 56, 57, 59, 60, 61, 65, 80, 82, 83, 84, 88, 90, 91], "posit": [1, 2, 51, 63, 64, 80, 83, 88, 91], "must": [1, 2, 11, 32, 34, 35, 53, 67, 68, 74, 76, 77, 83, 85, 91, 93], "type": [1, 2, 3, 5, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 83, 84, 85, 88, 91, 92, 93], "keyword": [1, 2], "return": [1, 2, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 82, 83, 84, 85, 88, 90, 91, 92, 93], "output": [1, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93], "": [1, 2, 11, 25, 36, 52, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91, 92, 93], "function": [1, 2, 3, 9, 27, 38, 41, 42, 44, 54, 55, 74, 76, 77, 80, 82, 84, 85, 88, 90], "exampl": [1, 2, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93], "def": [1, 2, 9, 11, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91], "add": [1, 2, 9, 67, 68, 77, 78, 79, 80, 84, 85, 86, 87, 88, 92, 93], "b": [1, 2, 9, 15, 20, 32, 34, 73, 79, 82, 84, 87, 90, 93], "tp": [1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 82, 83, 84, 87, 88, 90, 91, 92, 93], "compiled_add": [1, 2, 9, 84], "inputinfo": [1, 2, 9, 82, 84, 90], "1": [1, 2, 3, 6, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93], "float32": [1, 2, 3, 5, 9, 11, 12, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93], "ones": [1, 2, 11, 53, 58, 62, 79, 81, 87, 89, 93], "out": [1, 2, 36, 67, 68, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "0000": [1, 2, 9, 11, 12, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 82, 83, 84, 90, 91, 93], "loc": [1, 2, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93], "gpu": [1, 2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93], "0": [1, 2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93], "shape": [1, 2, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93], "2": [1, 2, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 82, 83, 84, 85, 88, 90, 91, 92, 93], "get_input_info": 1, "arginfo": [1, 2], "input": [1, 2, 3, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 82, 83, 84, 85, 88, 90, 91, 93], "inform": [1, 3, 9, 78, 79, 84, 86, 87], "list": [1, 2, 11, 20, 36, 45, 79, 87, 93], "contain": [1, 9, 11, 14, 16, 17, 18, 19, 31, 33, 35, 37, 48, 52, 55, 69, 77, 78, 80, 83, 84, 85, 86, 88, 91, 93], "one": [1, 2, 6, 25, 36, 39, 45, 63, 64, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 93], "per": [1, 10, 19, 45, 74, 76, 83, 91], "get": [1, 68, 76, 80, 83, 88, 91, 93], "info": 1, "3": [1, 2, 3, 9, 11, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93], "print": [1, 2, 9, 11, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91], "get_output_info": 1, "save": 1, "path": [1, 4, 10, 78, 86], "str": [1, 2, 4, 5, 6, 11, 36, 80, 88, 92, 93], "none": [1, 11, 14, 16, 17, 18, 25, 31, 33, 37, 44, 47, 48, 52, 57, 60, 62, 66, 67, 68, 73, 74, 76, 83, 91, 92, 93], "given": [1, 25, 45, 59, 60, 67, 74, 76, 80, 88], "file": [1, 4, 77, 80, 81, 85, 88, 89], "name": [1, 5, 11, 36, 78, 80, 86, 88, 92, 93], "import": [1, 9, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91], "o": [1, 77, 85], "tempfil": 1, "temporarydirectori": 1, "temp_dir": 1, "executable_fil": 1, "join": 1, "json": 1, "classmethod": 1, "load": [1, 11], "from": [1, 6, 9, 10, 11, 19, 25, 26, 30, 53, 57, 59, 60, 68, 79, 80, 81, 83, 84, 87, 88, 89, 91, 93], "directori": [1, 78, 80, 86, 88], "exectu": 1, "loaded_execut": 1, "backend": [1, 9, 80, 82, 84, 88, 90], "compiler_api": [1, 9, 84], "0x7fe8c73e3130": 1, "func": [2, 77, 80, 85, 88], "callabl": 2, "optimization_level": 2, "can": [2, 4, 9, 10, 11, 36, 39, 67, 68, 69, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93], "python": [2, 11, 36, 74, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90], "execut": [2, 9, 82, 83, 84, 90, 91], "run": [2, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90], "effici": [2, 9, 84], "modul": [2, 9, 10, 54, 68, 69, 70, 72, 73, 77, 79, 80, 81, 85, 87, 88, 89], "optim": [2, 3, 9, 12, 79, 84, 87], "satisfi": 2, "follow": [2, 15, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "requir": [2, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91], "pure": 2, "side": 2, "effect": [2, 44, 68, 79, 87], "thi": [2, 5, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 24, 26, 30, 31, 33, 37, 42, 44, 47, 48, 52, 53, 55, 57, 59, 60, 63, 64, 67, 68, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93], "mean": [2, 28, 52, 70, 72, 77, 79, 80, 82, 85, 87, 88, 90], "you": [2, 9, 11, 68, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90], "cannot": [2, 59, 60, 76, 80, 88], "us": [2, 4, 9, 10, 11, 19, 25, 36, 62, 66, 67, 68, 69, 70, 72, 73, 77, 78, 79, 80, 84, 85, 86, 87, 88, 92], "assert": [2, 76, 80, 88], "accept": 2, "variad": 2, "more": [2, 9, 63, 64, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91], "other": [2, 11, 39, 45, 53, 63, 64, 77, 79, 80, 81, 82, 85, 87, 88, 89, 90, 92, 93], "have": [2, 9, 20, 26, 30, 32, 34, 47, 53, 74, 76, 77, 79, 80, 83, 84, 85, 87, 88, 91, 93], "constraint": [2, 9, 19, 53, 79, 84, 87], "onli": [2, 25, 36, 45, 67, 68, 74, 76, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "becom": [2, 79, 87], "runtim": [2, 78, 80, 82, 86, 88, 90], "all": [2, 5, 13, 16, 20, 25, 28, 31, 33, 35, 37, 45, 47, 48, 52, 53, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91], "even": [2, 9, 80, 84, 88], "collect": [2, 77, 85], "e": [2, 23, 25, 29, 44, 67, 68, 74, 76, 77, 79, 80, 85, 87, 88], "g": [2, 25, 74, 76, 77, 79, 80, 85, 87, 88], "dict": [2, 11], "bake": 2, "constant": [2, 12, 74, 76, 77, 80, 81, 85, 88, 89], "level": [2, 77, 80, 85, 88], "when": [2, 9, 68, 77, 80, 82, 84, 85, 88, 90], "higher": [2, 76, 82, 90, 93], "lead": [2, 79, 87], "better": [2, 77, 80, 82, 85, 88, 90], "perform": [2, 9, 19, 32, 34, 59, 60, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93], "cost": [2, 67, 68], "longer": 2, "time": [2, 4, 10, 67, 68, 80, 82, 88, 90], "work": [2, 9, 77, 83, 84, 85, 91], "first": [2, 3, 17, 18, 32, 34, 47, 50, 74, 76, 77, 79, 80, 81, 83, 85, 87, 88, 89, 91], "call": [2, 36, 45, 77, 80, 82, 83, 85, 88, 90, 91], "provid": [2, 3, 6, 9, 10, 11, 14, 16, 17, 18, 31, 33, 36, 37, 47, 48, 52, 57, 60, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93], "order": [2, 35, 77, 78, 79, 82, 85, 86, 87, 90], "trace": [2, 79, 87], "its": [2, 35, 39, 67, 68, 77, 79, 81, 82, 85, 87, 89, 90, 92], "result": [2, 45, 56, 57, 67, 68, 76, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91, 92], "graph": 2, "should": [2, 6, 9, 24, 25, 30, 32, 34, 36, 80, 82, 84, 88, 90, 92, 93], "instead": [2, 77, 80, 85, 88], "ani": [2, 11, 28, 32, 34, 47, 74, 76, 78, 79, 80, 86, 87, 88, 93], "treat": [2, 12, 45, 63, 64], "forward": [2, 80, 83, 88, 91], "target": [2, 20, 21], "while": [2, 63, 64, 79, 82, 83, 87, 90, 91], "subset": 2, "origin": [2, 68, 79, 83, 87, 91], "which": [2, 14, 16, 17, 18, 20, 26, 31, 33, 36, 37, 44, 45, 48, 52, 59, 60, 63, 64, 67, 68, 72, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91, 92, 93], "were": [2, 68, 79, 87], "dynam": [2, 3, 9, 83, 84, 91], "support": [2, 3, 5, 11, 36, 83, 91], "rang": [2, 3, 9, 44, 80, 82, 83, 84, 88, 90, 91], "small_a": 2, "small_b": 2, "small_out": 2, "now": [2, 9, 77, 80, 82, 83, 84, 85, 88, 90, 91], "we": [2, 9, 45, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91], "reus": 2, "within": [2, 9, 80, 81, 84, 88, 89], "big_a": 2, "big_b": 2, "big_out": 2, "By": [2, 79, 87], "non": [2, 13, 80, 88, 92], "case": [2, 9, 45, 77, 79, 80, 82, 84, 85, 87, 88, 90], "ar": [2, 11, 14, 16, 17, 18, 20, 24, 31, 33, 36, 37, 44, 45, 47, 48, 50, 52, 53, 67, 68, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 92, 93], "i": [2, 6, 9, 11, 12, 14, 15, 16, 17, 18, 23, 25, 26, 30, 31, 33, 35, 36, 37, 39, 42, 44, 45, 47, 48, 50, 52, 53, 57, 60, 62, 63, 64, 66, 67, 68, 70, 72, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93], "consequ": 2, "an": [2, 3, 5, 6, 9, 11, 27, 32, 34, 59, 67, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93], "note": [2, 25, 67, 68, 79, 80, 82, 87, 88, 90], "captur": 3, "about": [3, 80, 88], "To": [3, 9, 80, 83, 84, 88, 91], "minimum": [3, 18, 28], "optimum": 3, "maximum": [3, 17, 28, 31], "valu": [3, 10, 12, 13, 15, 17, 18, 19, 24, 25, 26, 30, 36, 39, 45, 53, 55, 56, 57, 59, 60, 63, 64, 67, 68, 70, 72, 77, 80, 81, 82, 85, 88, 89, 90, 92], "data": [3, 5, 9, 11, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 56, 57, 59, 60, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 83, 84, 85, 88, 91, 92, 93], "inp": [3, 36, 77, 82, 85, 90], "4": [3, 5, 9, 17, 18, 20, 24, 25, 27, 31, 33, 35, 36, 37, 38, 41, 42, 45, 48, 50, 52, 55, 57, 63, 64, 67, 68, 69, 70, 73, 74, 76, 79, 82, 83, 84, 87, 90, 91, 92, 93], "opt": [3, 9, 78, 84, 86], "size": [3, 5, 24, 25, 26, 44, 45, 47, 69, 72, 73, 74, 76, 79, 83, 87, 91, 93], "global": [4, 10], "configur": [4, 83, 91], "option": [4, 6, 78, 79, 80, 83, 86, 87, 88, 91, 92], "timing_cache_file_path": 4, "cach": 4, "speed": 4, "up": [4, 9, 77, 79, 80, 84, 85, 87, 88], "human": 5, "readabl": 5, "items": 5, "float": [5, 15, 36, 70, 72, 83, 91], "element": [5, 13, 14, 16, 22, 23, 26, 27, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 52, 53, 61, 62, 63, 64, 65, 66, 80, 88, 92, 93], "byte": 5, "32": 5, "bit": [5, 80, 83, 88, 91], "point": [5, 80, 82, 88, 90], "float16": [5, 19, 74, 76], "16": [5, 45, 67, 68, 69], "float8": [5, 19, 76], "8": [5, 25, 45, 55, 67, 68, 69, 73, 82, 83, 90, 91, 93], "bfloat16": [5, 19], "brain": 5, "int4": [5, 19, 74, 76], "sign": 5, "integ": [5, 35, 45, 67, 68, 92], "int8": [5, 19, 74, 76, 83, 91], "int32": [5, 11, 13, 17, 18, 19, 21, 26, 57, 60, 69, 77, 85, 92, 93], "int64": [5, 19], "64": [5, 80, 88], "bool": [5, 14, 15, 16, 17, 18, 19, 30, 31, 33, 37, 48, 52, 53, 67, 68, 73, 93], "boolean": [5, 15], "where": [6, 9, 28, 30, 35, 42, 44, 50, 52, 63, 64, 67, 68, 70, 72, 74, 76, 79, 80, 84, 87, 88], "alloc": [6, 81, 89, 93], "string": [6, 10, 11, 80, 88, 93], "consist": [6, 77, 85], "kind": [6, 12, 77, 85], "index": [6, 26, 45, 51, 83, 91, 93], "mai": [6, 10, 11, 80, 81, 82, 88, 89, 90], "cpu": [6, 21, 83, 91], "If": [6, 9, 11, 14, 16, 17, 18, 24, 25, 31, 33, 37, 39, 44, 45, 47, 48, 52, 62, 63, 64, 66, 74, 76, 77, 80, 82, 84, 85, 88, 90, 93], "separ": [6, 80, 88], "colon": 6, "default": [6, 52, 67, 68, 70, 78, 80, 83, 86, 88, 91], "second": [6, 32, 34, 50, 74, 76, 77, 82, 85, 90], "gpu_1": 6, "tripyexcept": [7, 47, 80, 88], "except": [8, 9, 20, 26, 80, 82, 88, 90], "thrown": 8, "document": [9, 77, 79, 80, 84, 85, 87, 88], "aim": [9, 82, 84, 90], "excel": [9, 84], "experi": [9, 84], "without": [9, 79, 84, 87], "compromis": [9, 84], "some": [9, 79, 80, 81, 82, 84, 87, 88, 89, 90], "featur": [9, 72, 73, 84], "includ": [9, 45, 73, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91], "intuit": [9, 84], "doesn": [9, 77, 80, 84, 85, 88], "t": [9, 19, 25, 73, 77, 78, 79, 80, 84, 85, 86, 87, 88, 92], "reinvent": [9, 84], "wheel": [9, 78, 84, 86], "numpi": [9, 26, 80, 82, 84, 88, 90], "pytorch": [9, 79, 82, 84, 87, 90], "befor": [9, 11, 67, 68, 77, 80, 81, 84, 85, 88, 89], "feel": [9, 84], "familiar": [9, 82, 84, 90], "error": [9, 27, 79, 80, 84, 87, 88], "messag": [9, 79, 84, 87], "someth": [9, 77, 79, 80, 84, 85, 87, 88], "goe": [9, 84], "wrong": [9, 84], "tri": [9, 84], "action": [9, 84], "come": [9, 10, 84], "deep": [9, 82, 84, 90], "softwar": [9, 84], "stack": [9, 79, 84, 87, 93], "abl": [9, 74, 76, 77, 79, 80, 84, 85, 87, 88], "map": [9, 11, 77, 79, 80, 84, 85, 87, 88], "back": [9, 68, 83, 84, 91], "code": [9, 77, 79, 80, 84, 85, 87, 88], "caus": [9, 80, 84, 88], "due": [9, 79, 84, 87], "how": [9, 68, 77, 80, 82, 83, 84, 85, 88, 90, 91], "our": [9, 77, 79, 80, 82, 84, 85, 87, 88, 90], "packag": [9, 81, 83, 84, 89, 91], "current": [9, 11, 84, 92], "set": [9, 10, 56, 57, 61, 62, 63, 64, 65, 66, 68, 78, 79, 83, 84, 86, 87, 91], "complic": [9, 84], "than": [9, 63, 64, 77, 79, 82, 84, 85, 87, 90, 93], "simpl": [9, 45, 77, 84, 85], "pip": [9, 78, 83, 84, 86, 91], "chang": [9, 10, 80, 84, 88], "futur": [9, 84], "build": [9, 78, 80, 81, 84, 86, 88, 89], "contribut": [9, 84], "md": [9, 84], "In": [9, 68, 78, 79, 80, 82, 84, 86, 87, 88, 90], "eager": [9, 82, 84, 90], "mode": [9, 82, 83, 84, 90, 91], "just": [9, 10, 77, 79, 80, 82, 84, 85, 87, 88, 90], "like": [9, 36, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "d": [9, 74, 76, 82, 84, 90], "expect": [9, 36, 70, 76, 80, 82, 84, 88, 90], "also": [9, 10, 42, 68, 74, 76, 77, 80, 82, 84, 85, 88, 90], "machin": [9, 84], "faster": [9, 82, 84, 90], "need": [9, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "1d": [9, 55, 80, 84, 88, 92, 93], "5": [9, 17, 18, 25, 27, 31, 33, 35, 37, 45, 48, 50, 52, 55, 63, 64, 67, 68, 69, 70, 73, 74, 76, 77, 79, 82, 83, 84, 85, 87, 90, 91, 92, 93], "a_info": [9, 84], "b_info": [9, 84], "6": [9, 17, 18, 20, 25, 31, 32, 33, 34, 35, 37, 39, 45, 48, 50, 52, 67, 68, 69, 73, 74, 76, 82, 83, 84, 90, 91, 92, 93], "0x7f723ca3e770": [9, 84], "0x7f723c949750": [9, 84], "detail": [9, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91], "see": [9, 76, 78, 80, 82, 83, 84, 86, 88, 90, 91], "introduct": [9, 84], "quantiz": [9, 19, 54, 73, 74], "config": [9, 83, 91], "devic": [9, 20, 21, 77, 80, 83, 85, 88, 91, 93], "logger": 9, "oper": [9, 59, 60, 63, 64, 67, 68, 69, 70, 72, 73, 77, 81, 85, 89, 92], "architectur": [9, 79, 80, 87, 88], "debug": [9, 80, 82, 88, 90], "mlir": [9, 79, 80, 87, 88, 93], "design": 9, "decis": 9, "ad": [9, 68, 70, 72, 77, 79, 82, 85, 87, 90], "new": [9, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 43, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 85, 86, 87, 93], "dialect": [9, 77, 80, 85, 88], "across": [10, 67, 68, 79, 87], "verbos": [10, 80, 88], "control": [10, 19, 68, 79, 80, 87, 88], "properti": [10, 93], "either": [10, 36, 53, 80, 88, 93], "singl": [10, 36, 45, 74, 76, 79, 81, 82, 87, 89, 90], "log": [10, 28], "NOT": 10, "v": [10, 78, 86], "possibl": [10, 79, 80, 82, 87, 88, 90], "kei": [10, 11], "verbosity_config": 10, "It": [10, 32, 34, 35, 68, 76, 78, 79, 82, 83, 86, 87, 90, 91, 93], "altern": 10, "dictionari": [10, 11], "submodul": [10, 77, 80, 85, 88], "enabl": [10, 12, 78, 83, 86, 91], "frontend": [10, 79, 80, 87, 88], "temporarili": 10, "use_verbos": 10, "context": 10, "manag": 10, "defin": [11, 52, 63, 64, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "neural": 11, "network": 11, "nest": 11, "assign": 11, "them": 11, "attribut": [11, 79, 83, 87, 91], "child": [11, 80, 88], "structur": [11, 80, 88], "take": [11, 26, 77, 80, 82, 83, 85, 88, 90, 91], "allow": [11, 19, 80, 82, 83, 88, 90, 91, 92], "self": [11, 77, 79, 80, 82, 85, 87, 88, 90], "linear": [11, 27, 38, 42, 71, 82, 83, 90, 91], "list_modul": 11, "dict_modul": 11, "layernorm": [11, 71, 82, 83, 90, 91], "wherea": [11, 79, 87], "addbia": 11, "__init__": [11, 80, 82, 88, 90], "super": [11, 82, 90], "bia": [11, 67, 68, 70, 72, 73, 82, 83, 90, 91], "x": [11, 27, 38, 41, 42, 52, 67, 68, 69, 70, 72, 73, 77, 80, 82, 83, 85, 88, 90, 91], "add_bia": 11, "state_dict": [11, 67, 68, 69, 70, 72, 73, 82, 83, 90, 91], "recurs": 11, "over": [11, 19, 20, 44, 67, 70, 72, 79, 87], "mymodul": 11, "param": 11, "linear1": 11, "linear2": 11, "weight": [11, 67, 68, 69, 70, 72, 73, 80, 82, 83, 88, 90, 91], "load_from_state_dict": 11, "f": [11, 80, 82, 88, 90], "zero": [11, 30, 53, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 72, 80, 88], "after": [11, 67, 68, 74, 77, 78, 80, 85, 86, 88, 93], "named_children": 11, "iter": [11, 77, 82, 85, 90], "immedi": [11, 77, 85], "children": 11, "yield": [11, 80, 88], "itself": [11, 77, 80, 85, 88], "stackedlinear": 11, "stacked_linear": 11, "__name__": 11, "named_paramet": 11, "alpha": 11, "beta": [11, 70, 72], "special": [12, 80, 88], "addit": [12, 36, 83, 91, 92], "opportun": 12, "comput": [13, 22, 23, 29, 40, 43, 44, 46, 49, 67, 68, 77, 80, 81, 82, 83, 85, 88, 89, 90, 91], "elementwis": [13, 15, 22, 23, 29, 32, 34, 40, 43, 46, 49, 92, 93], "absolut": [13, 15], "same": [13, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 57, 60, 62, 63, 64, 66, 67, 68, 70, 72, 80, 88, 92, 93], "neg": [13, 25, 63, 64, 80, 88, 92, 93], "entri": 13, "dim": [14, 16, 17, 18, 20, 25, 26, 31, 33, 36, 37, 44, 45, 47, 48, 51, 52, 59, 60, 63, 64, 74, 76, 77, 80, 82, 85, 88, 90], "keepdim": [14, 16, 17, 18, 31, 33, 37, 48, 52], "fals": [14, 16, 17, 18, 30, 31, 33, 37, 48, 52, 53, 67, 68, 80, 83, 88, 91, 93], "logic": [14, 16, 79, 87], "AND": 14, "along": [14, 16, 17, 18, 20, 26, 31, 33, 37, 44, 45, 48, 52, 59, 60, 67, 68, 80, 88], "reduc": [14, 16, 17, 18, 31, 33, 37, 48, 52, 67, 68, 77, 85], "whether": [14, 16, 17, 18, 31, 33, 37, 48, 52, 67, 68, 73], "retain": [14, 16, 17, 18, 31, 33, 37, 48, 52], "squeez": [14, 16, 17, 18, 28, 31, 33, 37, 48, 52, 83, 91], "true": [14, 15, 16, 30, 33, 52, 53, 67, 68, 73, 82, 83, 90, 91, 93], "rtol": 15, "1e": [15, 70, 72, 83, 91], "05": [15, 72, 83, 91], "atol": 15, "08": 15, "equat": 15, "lh": [15, 32, 34], "rh": [15, 32, 34], "rel": [15, 82, 90], "toler": 15, "1e10": 15, "7": [15, 23, 25, 45, 48, 67, 68, 69, 73, 82, 83, 90, 91, 92, 93], "10000000000": 15, "OR": 16, "multipl": [17, 18, 36, 45, 55, 77, 80, 85, 88, 93], "flatten": [17, 18], "reshap": [17, 18, 25, 28, 31, 33, 35, 37, 45, 48, 50, 52, 67, 68, 76, 93], "arang": [17, 18, 22, 23, 25, 29, 31, 33, 35, 37, 40, 43, 45, 46, 48, 49, 50, 52, 58, 67, 68, 76, 80, 82, 88, 90, 93], "content": [19, 39, 51, 92], "For": [19, 45, 67, 68, 74, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91], "scale": [19, 44, 73, 74, 76], "those": [19, 77, 79, 85, 87], "dequant": [19, 75, 76, 83, 91], "direct": 19, "finer": 19, "t1": [19, 79, 87], "desir": [19, 24, 35, 39, 55, 56, 57, 59, 60, 61, 65, 69, 80, 82, 88, 90], "copi": [20, 28, 80, 81, 88, 89, 92], "axi": [20, 26, 83, 91], "equal": [20, 26, 45, 47, 74, 76, 93], "sum": [20, 28, 44, 93], "iota": [20, 24, 26, 36, 39, 44, 47, 51, 58, 60, 63, 64, 66, 70, 72, 73, 80, 82, 83, 88, 90, 91, 93], "cosin": 22, "5403": 22, "4161": 22, "exponenti": [23, 93], "text": [23, 27, 38, 41, 42, 44, 52, 55, 67, 68, 69, 70, 72, 73], "x_": [23, 44], "7183": 23, "3891": 23, "singleton": [24, 47, 51], "larger": [24, 68], "modifi": [24, 79, 87], "length": [24, 52, 67, 68], "exce": [24, 59, 60, 80, 88], "rank": [24, 35, 36, 59, 60, 67, 68, 77, 80, 85, 88, 92, 93], "prepend": 24, "increas": [24, 67, 68, 79, 87], "revers": [25, 68], "count": 25, "backward": [25, 77, 85], "last": 25, "slice": [25, 44, 45, 93], "step": [25, 55, 77, 81, 83, 85, 89, 91, 93], "implement": [25, 77, 79, 81, 82, 85, 87, 89, 90], "equival": [25, 45], "10": [25, 37, 45, 67, 68, 69, 73, 79, 82, 83, 87, 90, 91, 93], "9": [25, 45, 67, 68, 69, 73, 79, 80, 82, 87, 88, 90, 92, 93], "behav": 26, "similarli": [26, 80, 88], "everi": [26, 80, 88], "len": [26, 80, 88], "appli": [27, 38, 41, 42, 44, 67, 68, 70, 72, 73, 79, 87], "approxim": 27, "gaussian": 27, "unit": [27, 38, 42], "tanh": [27, 28, 79, 82, 87, 90], "sqrt": [27, 28, 70, 72], "pi": 27, "044715": 27, "8412": [27, 36], "9546": [27, 36], "9964": 27, "9999": [27, 82, 90], "ab": 28, "allclos": 28, "argmax": 28, "argmin": 28, "cast": [28, 30], "concaten": [28, 67, 68, 92], "co": 28, "exp": [28, 41, 42], "expand": 28, "flip": 28, "gather": 28, "gelu": [28, 36, 82, 90], "masked_fil": 28, "permut": 28, "plugin": 28, "prod": 28, "relu": 28, "rsqrt": 28, "sigmoid": [28, 42], "silu": 28, "sin": 28, "softmax": [28, 79, 87], "split": [28, 70], "transpos": [28, 68], "unsqueez": 28, "var": 28, "natur": 29, "logarithm": 29, "6931": 29, "mask": 30, "number": [30, 39, 45, 55, 56, 57, 67, 68, 69, 70, 74, 76, 77, 80, 85, 88, 92], "fill": [30, 56, 57, 59, 77, 80, 81, 83, 85, 88, 89, 91], "otherwis": [30, 36, 53], "match": [30, 80, 88], "broadcast": [32, 34, 53, 79, 87, 93], "compat": [32, 34, 39, 53, 79, 83, 87, 91, 93], "perm": 35, "n": [35, 44, 45, 52, 63, 64, 67, 68, 69], "exactli": [35, 77, 79, 80, 85, 87, 88], "onc": [35, 77, 80, 85, 88], "output_info": 36, "version": [36, 50, 68, 79, 82, 87, 90], "namespac": 36, "tensorrt": [36, 79, 81, 82, 83, 87, 89, 90, 91], "ipluginv2dynamicext": 36, "ipluginv3": 36, "interfac": [36, 77, 79, 80, 82, 85, 87, 88, 90], "pass": [36, 78, 79, 83, 86, 87, 91], "field": [36, 67, 68, 77, 80, 85, 88], "These": 36, "primit": 36, "etc": [36, 79, 87], "customgeluplugindynam": 36, "ha": [36, 55, 63, 64, 67, 68, 77, 79, 82, 83, 85, 87, 90, 91], "alwai": [36, 77, 80, 81, 83, 85, 88, 89, 91], "type_id": 36, "precis": [36, 76, 83, 91], "product": [37, 93], "rectifi": 38, "infer": [39, 57, 60, 77, 82, 85, 90], "atmost": 39, "reciproc": 40, "squar": [40, 46], "root": [40, 46], "7071": 40, "5774": 40, "logist": [41, 79, 87], "_i": [41, 42, 68], "frac": [41, 42, 44, 52, 55, 67, 68, 70, 72], "x_i": [41, 42, 52], "7311": [41, 42, 44], "8808": 41, "9526": 41, "9820": 41, "known": [42, 67, 68], "swish": 42, "cdot": 42, "sigma": [42, 52, 70, 72], "7616": [42, 49, 82, 90], "8577": 42, "9281": 42, "sine": 43, "8415": 43, "9093": 43, "larg": [44, 52, 67, 70, 72, 79, 87], "sum_": [44, 52, 67], "j": 44, "normals": [44, 67, 70, 72], "dot": [44, 93], "th": [44, 52], "thei": [44, 68, 79, 80, 87, 88], "lie": 44, "whole": 44, "arrai": [44, 92, 93], "2689": 44, "indices_or_sect": 45, "produc": [45, 67, 68, 77, 80, 83, 85, 88, 91], "let": [45, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "u": [45, 79, 80, 82, 83, 87, 88, 90, 91], "long": [45, 82, 90], "divid": [45, 67, 68, 74, 76, 93], "dimension": [45, 93], "k": [45, 67], "texttt": 45, "2k": 45, "ldot": [45, 67, 68], "creat": [45, 61, 62, 65, 66, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90], "i_0": 45, "i_1": 45, "i_n": 45, "assum": [45, 78, 86], "i_2": 45, "give": [45, 83, 91], "boundari": 45, "done": [45, 77, 85, 92], "full": [45, 58, 61, 65, 67, 68], "abov": [45, 63, 64, 76, 82, 90], "specif": [45, 79, 87], "11": [45, 67, 68, 69, 73, 79, 82, 83, 87, 90, 91], "12": [45, 67, 68, 69, 82, 83, 90, 91], "13": [45, 67, 68, 69, 73, 82, 90], "14": [45, 67, 68, 69, 82, 90], "15": [45, 67, 68, 69, 82, 90], "choos": 45, "differ": [45, 77, 79, 81, 85, 87, 89], "4142": 46, "7321": 46, "remov": 47, "rais": [47, 80, 88], "And": 47, "third": 47, "hyperbol": 49, "tangent": 49, "9640": [49, 82, 90], "dim0": 50, "dim1": 50, "swap": 50, "insert": [51, 67, 68, 79, 82, 83, 87, 90, 91, 93], "correct": [52, 80, 81, 83, 88, 89, 91], "varianc": [52, 70, 72], "bar": [52, 70, 72], "bessel": 52, "condit": 53, "select": 53, "depend": [53, 79, 80, 87, 88], "three": 53, "initi": [54, 68, 79, 81, 82, 87, 89, 90, 93], "overload": 55, "start": [55, 59, 60, 77, 80, 82, 85, 88, 90], "stop": 55, "half": 55, "open": 55, "interv": 55, "increment": 55, "inclus": 55, "lower": [55, 63, 79, 80, 87, 88], "exclus": 55, "upper": [55, 64], "space": 55, "between": [55, 67, 68, 79, 87, 93], "5000": [55, 82, 90], "custom": [55, 79, 81, 87, 89], "3000": 55, "1000": 55, "9000": 55, "7000": 55, "scalar": [56, 57, 74, 76], "overrid": [57, 60], "unless": [57, 60, 83, 91], "full_lik": [58, 62, 66], "iota_lik": 58, "ones_lik": [58, 61, 70], "tril": 58, "triu": 58, "zeros_lik": [58, 65, 70], "consecut": [59, 60, 80, 88], "diagon": [63, 64], "triangular": [63, 64], "part": [63, 64, 77, 79, 80, 82, 85, 87, 88, 90], "m": [63, 64, 67, 68, 78, 83, 86, 91], "matrix": [63, 64, 73, 93], "two": [63, 64, 79, 80, 83, 87, 88, 91, 93], "batch": [63, 64, 67, 93], "matric": [63, 64], "main": [63, 64, 77, 79, 80, 85, 87, 88], "mani": [63, 64, 83, 91], "below": [63, 64, 77, 80, 85, 88], "One": [63, 64, 79, 80, 82, 87, 88, 90], "in_channel": [67, 68], "out_channel": [67, 68], "kernel_dim": [67, 68], "pad": [67, 68], "stride": [67, 68], "group": [67, 68, 70], "dilat": [67, 68], "convbas": [67, 68], "convolut": [67, 68], "With": 67, "c_": 67, "d_0": 67, "d_n": 67, "d_": [67, 68], "0_": [67, 68], "n_": [67, 68], "n_i": 67, "_j": 67, "_": [67, 68, 82, 90], "star": 67, "cross": 67, "correl": 67, "spatial": [67, 68], "kernel": [67, 68], "c": [67, 77, 80, 82, 85, 88, 90], "channel": [67, 68, 70, 74, 76], "pair": [67, 68], "respect": [67, 68], "connect": [67, 68, 77, 85], "correspond": [67, 68, 77, 80, 85, 88, 92], "through": [67, 68, 83, 91], "final": [67, 68, 77, 81, 83, 85, 89, 91], "contrast": [67, 68], "standard": [67, 68], "factor": [67, 68, 83, 91], "benefit": [67, 68, 79, 87], "model": [67, 68, 77, 82, 85, 90], "parallel": [67, 68], "memori": [67, 68], "usag": [67, 68], "both": [67, 68, 74, 76, 77, 80, 85, 88, 93], "divis": [67, 68, 70, 72, 93], "\u00e0": [67, 68], "trou": [67, 68], "algorithm": [67, 68], "further": [67, 68], "downsampl": [67, 68], "recept": [67, 68], "term": [67, 68, 73, 80, 88], "24": [67, 68], "30": 67, "36": 67, "48": 67, "54": [67, 68], "60": 67, "72": 67, "78": 67, "84": [67, 68], "73": 67, "121": 67, "154": 67, "103": 67, "139": 67, "187": 67, "202": 67, "113": 67, "depthwis": 67, "18": [67, 69], "17": [67, 69], "204": 67, "1581": 67, "38": 67, "k_": [67, 68], "left": [67, 83, 91], "lfloor": 67, "k_0": [67, 68], "k_1": [67, 68], "_k": [67, 68], "right": [67, 77, 79, 80, 85, 87, 88], "rfloor": 67, "fraction": 68, "deconvolut": 68, "upsampl": 68, "resolut": 68, "would": [68, 79, 80, 82, 87, 88, 90], "thought": 68, "regular": [68, 80, 88], "much": [68, 77, 79, 82, 85, 87, 90], "crop": 68, "strict": 68, "invers": 68, "implicit": 68, "particular": 68, "so": [68, 77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "conv": [68, 71], "19": [68, 69], "34": 68, "21": [68, 69], "process": 68, "restor": 68, "output_down": 68, "output_up": 68, "28": 68, "22": [68, 69], "108": 68, "162": 68, "44": 68, "num_embed": 69, "embedding_dim": 69, "lookup": 69, "tabl": 69, "vector": [69, 92, 93], "fix": 69, "retriev": [69, 77, 80, 85, 88], "20": 69, "23": [69, 73, 83, 91], "num_group": 70, "num_channel": 70, "normal": [70, 72, 83, 91], "epsilon": [70, 72], "gamma": [70, 72], "group_norm": 70, "ep": [70, 72, 83, 91], "denomin": [70, 72], "prevent": [70, 72], "convtranspos": 71, "embed": [71, 83, 91], "groupnorm": 71, "normalized_shap": 72, "layer": [72, 77, 78, 79, 83, 85, 86, 87, 91], "math": 72, "layer_norm": 72, "in_featur": [73, 83, 91], "out_featur": [73, 83, 91], "quant_dtyp": [73, 83, 91], "weight_quant_dim": [73, 83, 91], "transform": [73, 79, 83, 87, 91], "xw": 73, "33": 73, "w": 73, "weight_scal": [73, 83, 91], "input_scal": [73, 83, 91], "block": [74, 76, 80, 82, 88, 90], "wise": [74, 76], "d0": [74, 76], "d1": [74, 76], "valid": [74, 76], "99872": [74, 76], "9987": 74, "9974": 74, "9962": 74, "96125": [74, 76], "8450": 74, "8063": 74, "7675": 74, "quant": [74, 76, 83, 91], "intern": [76, 80, 83, 88, 91], "np": [76, 77, 80, 85, 88, 92, 93], "array_equ": [76, 80, 88], "cp": [76, 80, 88, 92, 93], "from_dlpack": [76, 77, 80, 85, 88, 93], "explain": [77, 79, 85, 87], "overal": [77, 85], "technic": [77, 85], "twofold": [77, 85], "style": [77, 85], "user": [77, 79, 80, 84, 85, 87, 88], "seri": [77, 85], "intermedi": [77, 78, 85, 86], "represent": [77, 80, 85, 88], "solv": [77, 85], "problem": [77, 85], "diagram": [77, 85], "ir": [77, 78, 79, 80, 81, 85, 86, 87, 88, 89], "meant": [77, 80, 85, 88], "bipartit": [77, 85], "tracetensor": [77, 80, 85, 88], "knowledg": [77, 85], "flatirtensor": [77, 79, 85, 87], "hand": [77, 85], "off": [77, 85], "primarili": [77, 85], "stablehlo": [77, 80, 81, 85, 88, 89], "certain": [77, 79, 85, 87], "understand": [77, 79, 85, 87], "compon": [77, 79, 85, 87], "look": [77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91], "happen": [77, 80, 82, 85, 88, 90], "write": [77, 79, 80, 85, 87, 88], "program": [77, 85], "eval": [77, 80, 82, 85, 88, 90], "ll": [77, 80, 85, 88], "line": [77, 80, 85, 88], "api": [77, 82, 83, 84, 85, 90, 91], "directli": [77, 79, 80, 85, 87, 88], "alongsid": [77, 85], "unaryelementwis": [77, 85], "organ": [77, 79, 85, 87], "wai": [77, 79, 83, 85, 87, 91], "touch": [77, 85], "op": [77, 79, 80, 81, 85, 87, 88, 89], "compos": [77, 82, 85, 90], "under": [77, 78, 80, 81, 85, 86, 88, 89], "lazi": [77, 85], "form": [77, 79, 85, 87], "essenti": [77, 79, 80, 85, 87, 88], "symbol": [77, 85], "As": [77, 80, 82, 83, 85, 88, 90, 91], "think": [77, 85], "mention": [77, 85], "compris": [77, 82, 85, 90], "bulk": [77, 85], "real": [77, 83, 85, 91], "reach": [77, 80, 85, 88], "consid": [77, 82, 85, 90], "interoper": [77, 85], "anoth": [77, 79, 83, 85, 87, 91, 92], "framework": [77, 79, 85, 87], "torch": [77, 79, 83, 85, 87, 91, 92, 93], "__repr__": [77, 80, 85, 88], "explicitli": [77, 85], "re": [77, 80, 82, 85, 88, 90, 92], "here": [77, 79, 80, 85, 87, 88], "actual": [77, 80, 82, 85, 88, 90], "few": [77, 79, 85, 87], "thing": [77, 79, 80, 85, 87, 88], "sinc": [77, 79, 80, 85, 87, 88], "alreadi": [77, 80, 85, 88], "walk": [77, 83, 85, 91], "go": [77, 80, 85, 88], "textual": [77, 85], "t15": [77, 85], "storag": [77, 85], "t17": [77, 85], "output_rank": [77, 85], "t19": [77, 85], "ve": [77, 79, 80, 82, 85, 87, 88, 90], "built": [77, 78, 81, 85, 86, 89], "complet": [77, 85], "why": [77, 82, 83, 85, 90, 91], "popul": [77, 80, 85, 88], "veri": [77, 79, 82, 85, 87, 90], "thin": [77, 85], "to_flat_ir": [77, 80, 85, 88], "subgraph": [77, 79, 80, 82, 85, 87, 88, 90], "snippet": [77, 85], "might": [77, 80, 85, 88], "good": [77, 80, 85, 88], "enough": [77, 82, 85, 90], "conceptu": [77, 85], "flat_ir": [77, 79, 80, 85, 87, 88], "tanhop": [77, 79, 85, 87], "wait": [77, 85], "anyth": [77, 79, 80, 85, 87, 88], "fact": [77, 85], "appear": [77, 80, 85, 88], "respons": [77, 79, 80, 85, 87, 88], "bind": [77, 78, 85, 86], "baseflatirop": [77, 80, 85, 88], "updat": [77, 78, 80, 85, 86, 88], "inlin": [77, 80, 85, 88], "remap": [77, 85], "exist": [77, 78, 79, 80, 85, 86, 87, 88], "notic": [77, 79, 80, 82, 85, 87, 88, 90], "did": [77, 79, 85, 87], "constantop": [77, 85], "t_inter3": [77, 85], "dynamicbroadcastop": [77, 79, 85, 87], "broadcast_dim": [77, 79, 85, 87], "translat": [77, 80, 85, 88], "similar": [77, 79, 85, 87], "to_mlir": [77, 80, 85, 88], "unlik": [77, 85], "operand": [77, 79, 80, 85, 87, 88], "There": [77, 79, 83, 85, 87, 91], "outs_t19_4": [77, 85], "xf32": [77, 80, 85, 88], "dens": [77, 80, 85, 88], "2xi32": [77, 80, 85, 88], "cst": [77, 85], "000000e": [77, 85], "01": [77, 85], "f32": [77, 85], "dynamic_broadcast_in_dim": [77, 85], "trt": [77, 78, 79, 85, 86, 87, 93], "executor": [77, 85], "launch": [77, 78, 85, 86], "memref": [77, 85], "wrap": [77, 80, 85, 88], "instal": [78, 83, 86, 91], "No": [78, 86, 92], "ld_library_path": [78, 86], "bash": 78, "python3": [78, 83, 86, 91], "forc": [78, 86], "reinstal": [78, 86], "trt100": [78, 86], "whl": [78, 86], "environ": [78, 86], "flag": [78, 86], "export": [78, 80, 86, 88], "tripy_mlir_debug_en": [78, 86], "well": [78, 80, 86, 88], "dump": [78, 80, 86, 88], "tripy_mlir_debug_path": [78, 86], "repo": [78, 86], "folder": [78, 86], "module_ins_t1_outs_t2_1": [78, 86], "tripy_trt_debug_en": [78, 86], "engin": [78, 86], "dure": [78, 79, 86, 87], "tripy_trt_debug_path": [78, 86], "lldb": [78, 86], "extra": [78, 83, 86, 91], "secur": [78, 86], "docker": [78, 86], "cap": [78, 86], "sys_ptrac": [78, 86], "seccomp": [78, 86], "unconfin": [78, 86], "apparmor": [78, 86], "pwd": [78, 86], "rm": [78, 86], "latest": [78, 86], "http": [78, 83, 86, 91], "forum": [78, 86], "swift": [78, 86], "org": [78, 86], "18046": [78, 86], "outlin": [79, 87], "made": [79, 87], "chosen": [79, 87], "deviat": [79, 87], "do": [79, 80, 82, 83, 87, 88, 90, 91], "expos": [79, 87, 92], "nn": [79, 87], "ident": [79, 87], "unnecessarili": [79, 87], "surfac": [79, 87], "try": [79, 87], "els": [79, 87], "help": [79, 80, 81, 87, 88, 89], "attributeerror": [79, 87], "previou": [79, 87], "eventu": [79, 87], "realiz": [79, 87], "wa": [79, 83, 87, 91], "lot": [79, 87], "duplic": [79, 87], "had": [79, 87], "refactor": [79, 87], "common": [79, 80, 87, 88], "helper": [79, 80, 87, 88], "method": [79, 80, 87, 88, 92], "share": [79, 87], "introduc": [79, 87], "handl": [79, 87, 93], "complex": [79, 87], "usabl": [79, 87], "top": [79, 80, 87, 88], "inspect": [79, 80, 87, 88], "resort": [79, 87], "poorli": [79, 87], "want": [79, 80, 81, 82, 87, 88, 89, 90], "seem": [79, 87], "perfectli": [79, 87], "fine": [79, 87], "small": [79, 87], "inde": [79, 87], "reason": [79, 82, 87, 90], "howev": [79, 80, 87, 88], "quickli": [79, 87], "prone": [79, 87], "too": [79, 87], "easi": [79, 82, 87, 90], "forget": [79, 87], "confus": [79, 80, 87, 88], "bug": [79, 87], "never": [79, 80, 87, 88], "don": [79, 87], "decid": [79, 87], "make": [79, 80, 87, 88], "truth": [79, 87], "been": [79, 82, 87, 90], "easili": [79, 87], "Then": [79, 83, 87, 91], "could": [79, 80, 87, 88], "clearli": [79, 87], "nicer": [79, 87], "maintain": [79, 87], "conclud": [79, 87], "effort": [79, 87], "mainten": [79, 87], "overhead": [79, 87], "caller": [79, 87], "asymmetri": [79, 87], "own": [79, 87], "leav": [79, 87], "convert": [79, 80, 83, 87, 88, 91], "newli": [79, 87], "stage": [79, 87], "coupl": [79, 87], "xla": [79, 87], "tightli": [79, 87], "limit": [79, 87], "inherit": [79, 87], "lax": [79, 87], "challeng": [79, 80, 87, 88], "latenc": [79, 87], "ship": [79, 87], "destini": [79, 87], "schedul": [79, 87], "extern": [79, 87], "ecosystem": [79, 87], "advantag": [79, 87], "concept": [79, 87], "profil": [79, 87], "annot": [79, 87], "easier": [79, 80, 87, 88], "augment": [79, 87], "anywher": [79, 87], "entir": [79, 87], "down": [79, 87], "emit": [79, 80, 87, 88], "py": [79, 80, 81, 83, 87, 88, 89, 91], "internalerror": [79, 87], "fail": [79, 80, 87, 88], "pipelin": [79, 87], "t2": [79, 87], "occur": [79, 87], "express": [79, 80, 87, 88], "t_inter11": [79, 87], "t_inter8": [79, 87], "find": [80, 81, 88, 89], "read": [80, 88], "guid": [80, 84, 88], "typic": [80, 88], "involv": [80, 88], "clash": [80, 88], "theta": [80, 88], "usual": [80, 81, 88, 89], "most": [80, 81, 82, 88, 89, 90], "aspect": [80, 88], "low": [80, 82, 88, 90], "comment": [80, 88], "explan": [80, 88], "what": [80, 88], "dataclass": [80, 88], "mlir_tensorrt": [80, 88], "automat": [80, 88], "sever": [80, 88], "repr": [80, 88], "becaus": [80, 88], "extrem": [80, 88], "interact": [80, 88], "difficult": [80, 88], "thetaop": [80, 88], "trickiest": [80, 88], "impli": [80, 88], "figur": [80, 88], "refer": [80, 81, 83, 88, 89, 91], "link": [80, 88], "out_typ": [80, 88], "theta_dim": [80, 88], "integerattr": [80, 88], "integertyp": [80, 88], "get_signless": [80, 88], "dynamiciotaop": [80, 88], "output_shap": [80, 88], "iota_dimens": [80, 88], "principl": [80, 88], "doe": [80, 88], "know": [80, 88], "live": [80, 88], "util": [80, 83, 88, 91], "raise_error": [80, 88], "basetraceop": [80, 88], "op_util": [80, 88], "constructor": [80, 88], "reli": [80, 88], "infer_shape_output_idx": [80, 88], "preexist": [80, 88], "polici": [80, 88], "shapeoutputidxpolici": [80, 88], "never_return_shap": [80, 88], "infer_dtyp": [80, 88], "infer_devic": [80, 88], "infer_rank": [80, 88], "shapecontext": [80, 88], "determin": [80, 88], "out_shap": [80, 88], "get_shape_of_dynamic_trace_tensor": [80, 88], "got": [80, 88], "incorrect": [80, 88], "earlier": [80, 88], "avoid": [80, 88], "circular": [80, 88], "section": [80, 88], "next": [80, 88], "composit": [80, 88], "frontend_util": [80, 88], "public_api": [80, 88], "decor": [80, 88], "access": [80, 88], "document_und": [80, 88], "hierarchi": [80, 88], "show": [80, 88], "autodoc": [80, 88], "autodoc_opt": [80, 88], "tensor_oper": [80, 88], "convert_inputs_to_tensor": [80, 88], "turn": [80, 88], "shape_argu": [80, 88], "exclud": [80, 88], "face": [80, 83, 88, 91], "doc": [80, 88], "readm": [80, 88], "docstr": [80, 88], "adher": [80, 88], "compliant": [80, 88], "failur": [80, 88], "still": [80, 83, 88, 91], "manual": [80, 88], "ensur": [80, 88], "high": [80, 88], "qualiti": [80, 88], "sure": [80, 88], "check": [80, 81, 82, 83, 88, 89, 90, 91], "lineno": [80, 88], "caption": [80, 88], "construct": [80, 82, 83, 88, 90, 91], "mirror": [80, 88], "reprenset": [80, 88], "test_theta": [80, 88], "pytest": [80, 88], "fixtur": [80, 88], "simpli": [80, 82, 88, 90], "testthetaop": [80, 88], "hard": [80, 88], "predict": [80, 88], "suggest": [80, 88], "test_str": [80, 88], "isinst": [80, 88], "r": [80, 88], "convers": [80, 88], "again": [80, 88], "ahead": [80, 82, 88, 90], "accordingli": [80, 88], "test_mlir": [80, 88], "check_mlir": [80, 88], "dynamic_iota": [80, 88], "testtheta": [80, 88], "test_op_func": [80, 88], "trace_tensor": [80, 88], "test_invalid_dim": [80, 88], "outsid": [80, 88], "beyond": [80, 88], "serv": [80, 88], "saniti": [80, 88], "coverag": [80, 88], "cover": [80, 81, 83, 88, 89, 91], "multidimension": [80, 88], "cupi": [80, 88], "test_multi_dimension": [80, 88], "broadcast_to": [80, 88], "successfulli": [80, 88], "congratul": [80, 88], "choic": [81, 89], "jax": [81, 89], "arith": [81, 89], "buffer": [81, 89], "linalg": [81, 89], "sometim": [81, 89], "mix": [81, 89], "declar": [81, 89], "empti": [81, 89], "alloc_tensor": [81, 89], "auto": [81, 89], "accord": [81, 89], "td": [81, 89], "descript": [81, 89], "third_parti": [81, 89], "llvm": [81, 89], "project": [81, 89], "tool": [81, 89], "python_packag": [81, 89], "_stablehlo_ops_gen": [81, 89], "importantli": [81, 89], "_mlir_lib": [81, 89], "_mlir": [81, 89], "pyi": [81, 89], "test": [81, 89], "almost": [81, 89], "tip": [81, 89], "search": [81, 89], "learn": [82, 90], "fast": [82, 90], "But": [82, 90], "talk": [82, 90], "algebra": [82, 90], "librari": [82, 90], "until": [82, 90], "attempt": [82, 90], "end": [82, 90], "3f": [82, 90], "138": [82, 90], "yet": [82, 90], "9951": [82, 90], "9993": [82, 90], "542": [82, 90], "That": [82, 90], "individu": [82, 90], "prior": [82, 90], "tell": [82, 90], "took": [82, 90], "reusabl": [82, 90], "togeth": [82, 90], "predefin": [82, 83, 90, 91], "transfom": [82, 90], "mlp": [82, 83, 90, 91], "embedding_s": [82, 90], "c_fc": [82, 83, 90, 91], "c_proj": [82, 83, 90, 91], "447": [82, 90], "1183": [82, 90], "7289": [82, 90], "seen": [82, 90], "far": [82, 90], "significantli": [82, 90], "impos": [82, 90], "fast_mlp": [82, 90], "benchmark": [82, 90], "against": [82, 90], "recal": [82, 90], "materi": [82, 90], "eager_tim": [82, 90], "averag": [82, 90], "4f": [82, 90], "compiled_tim": [82, 90], "0783": [82, 90], "0061": [82, 90], "variou": [83, 91], "quant_linear": [83, 91], "describ": [83, 91], "compar": [83, 91, 93], "input_quant_dim": [83, 91], "dummi": [83, 91], "45": [83, 91], "workflow": [83, 91], "world": [83, 91], "nanogpt": [83, 91], "avail": [83, 91], "train": [83, 91], "qat": [83, 91], "awar": [83, 91], "nvidia": [83, 91], "modelopt": [83, 91], "toolkit": [83, 91], "url": [83, 91], "pypi": [83, 91], "com": [83, 91], "dataset": [83, 91], "pre": [83, 91], "gpt": [83, 91], "hug": [83, 91], "gpt2lmheadmodel": [83, 91], "from_pretrain": [83, 91], "gpt2": [83, 91], "autotoken": [83, 91], "mtq": [83, 91], "dataset_util": [83, 91], "create_forward_loop": [83, 91], "quant_cfg": [83, 91], "int8_default_cfg": [83, 91], "disabl": [83, 91], "input_quant": [83, 91], "loop": [83, 91], "max_seq_len": [83, 91], "512": [83, 91], "token": [83, 91], "use_fast": [83, 91], "model_max_length": [83, 91], "padding_sid": [83, 91], "trust_remote_cod": [83, 91], "pad_token": [83, 91], "eos_token": [83, 91], "forward_loop": [83, 91], "dataset_nam": [83, 91], "cnn_dailymail": [83, 91], "num_sampl": [83, 91], "usr": [83, 91], "local": [83, 91], "lib": [83, 91], "dist": [83, 91], "tokenization_utils_bas": [83, 91], "1601": [83, 91], "futurewarn": [83, 91], "clean_up_tokenization_spac": [83, 91], "behavior": [83, 91], "depract": [83, 91], "v4": [83, 91], "issu": [83, 91], "github": [83, 91], "huggingfac": [83, 91], "31884": [83, 91], "warn": [83, 91], "147": [83, 91], "gpt2model": [83, 91], "wte": [83, 91], "50257": [83, 91], "768": [83, 91], "wpe": [83, 91], "1024": [83, 91], "drop": [83, 91], "dropout": [83, 91], "p": [83, 91], "inplac": [83, 91], "h": [83, 91], "modulelist": [83, 91], "gpt2block": [83, 91], "ln_1": [83, 91], "elementwise_affin": [83, 91], "attn": [83, 91], "gpt2attent": [83, 91], "c_attn": [83, 91], "quantlinear": [83, 91], "2304": [83, 91], "tensorquant": [83, 91], "output_quant": [83, 91], "weight_quant": [83, 91], "fake": [83, 91], "amax": [83, 91], "maxcalibr": [83, 91], "calib": [83, 91], "attn_dropout": [83, 91], "resid_dropout": [83, 91], "ln_2": [83, 91], "gpt2mlp": [83, 91], "3072": [83, 91], "act": [83, 91], "newgeluactiv": [83, 91], "ln_f": [83, 91], "lm_head": [83, 91], "replac": [83, 91, 93], "1202": [83, 91], "8436": [83, 91], "convert_to_scal": [83, 91], "maxbound": [83, 91], "weight_only_qlinear": [83, 91], "export_amax": [83, 91], "contigu": [83, 91], "765": [83, 91], "766": [83, 91], "767": [83, 91], "769": [83, 91], "770": [83, 91], "1533": [83, 91], "1534": [83, 91], "1535": [83, 91], "1536": [83, 91], "1537": [83, 91], "1538": [83, 91], "2301": [83, 91], "2302": [83, 91], "2303": [83, 91], "1767168": [83, 91], "1767169": [83, 91], "1767170": [83, 91], "1767933": [83, 91], "1767934": [83, 91], "1767935": [83, 91], "1767936": [83, 91], "1767937": [83, 91], "1767938": [83, 91], "1768701": [83, 91], "1768702": [83, 91], "1768703": [83, 91], "1768704": [83, 91], "1768705": [83, 91], "1768706": [83, 91], "1769469": [83, 91], "1769470": [83, 91], "1769471": [83, 91], "0073": [83, 91], "0070": [83, 91], "0067": [83, 91], "0026": [83, 91], "0016": [83, 91], "0021": [83, 91], "load_quant_weights_from_hf": [83, 91], "develop": 84, "ndarrai": [92, 93], "jnp": [92, 93], "num_dim": 92, "as_tensor": 92, "ordinari": 92, "underli": 92, "necessari": 92, "s1": 92, "s2": 92, "stack_info": 93, "stackinfo": 93, "multi": 93, "uniform": 93, "uniqu": 93, "infom": 93, "__add__": 93, "__eq__": 93, "comparison": 93, "__ge__": 93, "greater": 93, "__getitem__": 93, "__gt__": 93, "__le__": 93, "less": 93, "__lt__": 93, "todo": 93, "26": 93, "i1": 93, "__matmul__": 93, "2d": 93, "differnt": 93, "relev": 93, "multipli": 93, "__mul__": 93, "__ne__": 93, "__pow__": 93, "__radd__": 93, "__rmul__": 93, "__rpow__": 93, "__rsub__": 93, "subtract": 93, "__rtruediv__": 93, "__sub__": 93, "__truediv__": 93}, "objects": {"tripy": [[0, 0, 1, "", "ArgInfo"], [2, 0, 1, "", "Compiler"], [67, 0, 1, "", "Conv"], [68, 0, 1, "", "ConvTranspose"], [69, 0, 1, "", "Embedding"], [1, 0, 1, "", "Executable"], [70, 0, 1, "", "GroupNorm"], [3, 0, 1, "", "InputInfo"], [72, 0, 1, "", "LayerNorm"], [73, 0, 1, "", "Linear"], [11, 0, 1, "", "Module"], [12, 0, 1, "", "Parameter"], [92, 0, 1, "", "Shape"], [93, 0, 1, "", "Tensor"], [8, 0, 1, "", "TripyException"], [13, 4, 1, "", "abs"], [14, 4, 1, "", "all"], [15, 4, 1, "", "allclose"], [16, 4, 1, "", "any"], [55, 4, 1, "", "arange"], [17, 4, 1, "", "argmax"], [18, 4, 1, "", "argmin"], [5, 0, 1, "", "bfloat16"], [5, 0, 1, "", "bool"], [19, 4, 1, "", "cast"], [20, 4, 1, "", "concatenate"], [4, 5, 0, "-", "config"], [21, 4, 1, "", "copy"], [22, 4, 1, "", "cos"], [74, 4, 1, "", "dequantize"], [6, 0, 1, "", "device"], [5, 0, 1, "", "dtype"], [23, 4, 1, "", "exp"], [24, 4, 1, "", "expand"], [25, 4, 1, "", "flip"], [5, 0, 1, "", "float16"], [5, 0, 1, "", "float32"], [5, 0, 1, "", "float8"], [56, 4, 1, "", "full"], [57, 4, 1, "", "full_like"], [26, 4, 1, "", "gather"], [27, 4, 1, "", "gelu"], [5, 0, 1, "", "int32"], [5, 0, 1, "", "int4"], [5, 0, 1, "", "int64"], [5, 0, 1, "", "int8"], [59, 4, 1, "", "iota"], [60, 4, 1, "", "iota_like"], [29, 4, 1, "", "log"], [10, 6, 1, "", "logger"], [30, 4, 1, "", "masked_fill"], [31, 4, 1, "", "max"], [32, 4, 1, "", "maximum"], [33, 4, 1, "", "mean"], [34, 4, 1, "", "minimum"], [61, 4, 1, "", "ones"], [62, 4, 1, "", "ones_like"], [35, 4, 1, "", "permute"], [36, 4, 1, "", "plugin"], [37, 4, 1, "", "prod"], [76, 4, 1, "", "quantize"], [38, 4, 1, "", "relu"], [39, 4, 1, "", "reshape"], [40, 4, 1, "", "rsqrt"], [41, 4, 1, "", "sigmoid"], [42, 4, 1, "", "silu"], [43, 4, 1, "", "sin"], [44, 4, 1, "", "softmax"], [45, 4, 1, "", "split"], [46, 4, 1, "", "sqrt"], [47, 4, 1, "", "squeeze"], [48, 4, 1, "", "sum"], [49, 4, 1, "", "tanh"], [50, 4, 1, "", "transpose"], [63, 4, 1, "", "tril"], [64, 4, 1, "", "triu"], [51, 4, 1, "", "unsqueeze"], [52, 4, 1, "", "var"], [53, 4, 1, "", "where"], [65, 4, 1, "", "zeros"], [66, 4, 1, "", "zeros_like"]], "tripy.ArgInfo": [[0, 1, 1, "", "dtype"], [0, 1, 1, "", "shape_bounds"]], "tripy.Compiler": [[2, 2, 1, "", "compile"]], "tripy.Conv": [[67, 2, 1, "", "__call__"], [67, 1, 1, "", "bias"], [67, 1, 1, "", "dilation"], [67, 1, 1, "", "dtype"], [67, 1, 1, "", "groups"], [67, 1, 1, "", "padding"], [67, 1, 1, "", "stride"], [67, 1, 1, "", "weight"]], "tripy.ConvTranspose": [[68, 2, 1, "", "__call__"], [68, 1, 1, "", "bias"], [68, 1, 1, "", "dilation"], [68, 1, 1, "", "dtype"], [68, 1, 1, "", "groups"], [68, 1, 1, "", "padding"], [68, 1, 1, "", "stride"], [68, 1, 1, "", "weight"]], "tripy.Embedding": [[69, 2, 1, "", "__call__"], [69, 1, 1, "", "dtype"], [69, 1, 1, "", "weight"]], "tripy.Executable": [[1, 2, 1, "", "__call__"], [1, 2, 1, "", "get_input_info"], [1, 2, 1, "", "get_output_info"], [1, 2, 1, "", "load"], [1, 2, 1, "", "save"]], "tripy.GroupNorm": [[70, 2, 1, "", "__call__"], [70, 1, 1, "", "bias"], [70, 1, 1, "", "dtype"], [70, 1, 1, "", "eps"], [70, 1, 1, "", "num_channels"], [70, 1, 1, "", "num_groups"], [70, 1, 1, "", "weight"]], "tripy.LayerNorm": [[72, 2, 1, "", "__call__"], [72, 1, 1, "", "bias"], [72, 1, 1, "", "dtype"], [72, 1, 1, "", "eps"], [72, 1, 1, "", "weight"]], "tripy.Linear": [[73, 2, 1, "", "__call__"], [73, 1, 1, "", "bias"], [73, 1, 1, "", "dtype"], [73, 1, 1, "", "input_scale"], [73, 1, 1, "", "quant_dtype"], [73, 1, 1, "", "weight"], [73, 1, 1, "", "weight_quant_dim"], [73, 1, 1, "", "weight_scale"]], "tripy.Module": [[11, 2, 1, "", "load_from_state_dict"], [11, 2, 1, "", "named_children"], [11, 2, 1, "", "named_parameters"], [11, 2, 1, "", "state_dict"]], "tripy.Shape": [[92, 2, 1, "", "add"], [92, 2, 1, "", "as_tensor"]], "tripy.Tensor": [[93, 2, 1, "", "__add__"], [93, 2, 1, "", "__eq__"], [93, 2, 1, "", "__ge__"], [93, 2, 1, "", "__getitem__"], [93, 2, 1, "", "__gt__"], [93, 2, 1, "", "__le__"], [93, 2, 1, "", "__lt__"], [93, 2, 1, "", "__matmul__"], [93, 2, 1, "", "__mul__"], [93, 2, 1, "", "__ne__"], [93, 2, 1, "", "__pow__"], [93, 2, 1, "", "__radd__"], [93, 2, 1, "", "__rmul__"], [93, 2, 1, "", "__rpow__"], [93, 2, 1, "", "__rsub__"], [93, 2, 1, "", "__rtruediv__"], [93, 2, 1, "", "__sub__"], [93, 2, 1, "", "__truediv__"], [93, 3, 1, "", "shape"]], "tripy.config": [[4, 6, 1, "", "timing_cache_file_path"]], "tripy.dtype": [[5, 1, 1, "", "itemsize"], [5, 1, 1, "", "name"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:module", "6": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"], "6": ["py", "data", "Python data"]}, "titleterms": {"arginfo": 0, "execut": [1, 77, 85], "compil": [2, 77, 82, 85, 90], "see": [2, 11], "also": [2, 11], "inputinfo": 3, "config": 4, "dtype": 5, "devic": 6, "except": 7, "tripyexcept": 8, "tripi": [9, 77, 82, 83, 84, 85, 90, 91], "A": [9, 77, 84, 85], "python": [9, 81, 84, 89], "program": [9, 82, 84, 90], "model": [9, 83, 84, 91], "For": [9, 84], "tensorrt": [9, 78, 84, 86], "instal": [9, 84], "quickstart": [9, 84], "user": 9, "guid": 9, "api": [9, 79, 80, 81, 87, 88, 89], "refer": 9, "develop": 9, "logger": 10, "modul": [11, 71, 82, 83, 90, 91], "paramet": 12, "ab": 13, "all": 14, "allclos": 15, "ani": 16, "argmax": 17, "argmin": 18, "cast": 19, "concaten": 20, "copi": 21, "co": 22, "exp": 23, "expand": 24, "flip": 25, "gather": 26, "gelu": 27, "function": [28, 79, 87], "log": 29, "masked_fil": 30, "max": 31, "maximum": 32, "mean": 33, "minimum": 34, "permut": 35, "plugin": 36, "prod": 37, "relu": 38, "reshap": 39, "rsqrt": 40, "sigmoid": 41, "silu": 42, "sin": 43, "softmax": 44, "split": 45, "sqrt": 46, "squeez": 47, "sum": 48, "tanh": [49, 77, 85], "transpos": 50, "unsqueez": 51, "var": 52, "where": [53, 77, 85], "oper": [54, 79, 80, 87, 88], "arang": 55, "full": [56, 77, 85], "full_lik": 57, "initi": 58, "iota": 59, "iota_lik": 60, "ones": 61, "ones_lik": 62, "tril": 63, "triu": 64, "zero": 65, "zeros_lik": 66, "conv": 67, "convtranspos": 68, "embed": 69, "groupnorm": 70, "layernorm": 72, "linear": 73, "dequant": 74, "quantiz": [75, 76, 83, 91], "architectur": [77, 85], "tabl": [77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "content": [77, 79, 80, 82, 83, 85, 87, 88, 90, 91], "overview": [77, 85], "trace": [77, 80, 85, 88], "flatir": [77, 79, 80, 85, 87, 88], "mlir": [77, 78, 81, 85, 86, 89], "dai": [77, 85], "In": [77, 85], "The": [77, 80, 81, 83, 85, 88, 89, 91], "life": [77, 85], "Of": [77, 85], "tensor": [77, 79, 85, 87, 93], "do": [77, 85], "tp": [77, 85], "come": [77, 85], "from": [77, 85], "what": [77, 82, 85, 90], "doe": [77, 79, 85, 87], "It": [77, 85], "implicit": [77, 85], "frontend": [77, 85], "graph": [77, 85], "evalu": [77, 82, 85, 90], "build": [77, 79, 85, 87], "lower": [77, 85], "To": [77, 79, 82, 85, 87, 90], "debug": [78, 86], "backend": [78, 86], "design": [79, 87], "decis": [79, 87], "No": [79, 87], "redund": [79, 87], "why": [79, 87], "to_flat_ir": [79, 87], "reli": [79, 87], "On": [79, 87], "bind": [79, 87], "input": [79, 87], "output": [79, 87], "altern": [79, 87], "1": [79, 87], "return": [79, 87], "2": [79, 87], "i": [79, 82, 87, 90], "baseflatirop": [79, 87], "to_mlir": [79, 87], "asymmetr": [79, 87], "With": [79, 83, 87, 91], "basetraceop": [79, 87], "Not": [79, 82, 87, 90], "jax": [79, 87], "ad": [80, 88], "new": [80, 88], "implement": [80, 88], "expos": [80, 88], "And": [80, 88], "public": [80, 88], "test": [80, 88], "integr": [80, 88], "done": [80, 88], "us": [81, 82, 83, 89, 90, 91], "dialect": [81, 89], "choos": [81, 89], "right": [81, 89], "": [81, 89], "sourc": [81, 89], "code": [81, 82, 89, 90], "exampl": [81, 89], "usag": [81, 89], "an": [82, 90], "introduct": [82, 90], "your": [82, 90], "first": [82, 90], "lazi": [82, 90], "put": [82, 90], "off": [82, 90], "work": [82, 90], "organ": [82, 90], "Or": [82, 90], "run": [83, 91], "calibr": [83, 91], "optim": [83, 91], "load": [83, 91], "scale": [83, 91], "Into": [83, 91], "shape": 92}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Adding New Operators": [[80, "adding-new-operators"], [88, "adding-new-operators"]], "Table of Contents": [[80, "table-of-contents"], [79, "table-of-contents"], [77, "table-of-contents"], [83, "table-of-contents"], [82, "table-of-contents"], [90, "table-of-contents"], [85, "table-of-contents"], [88, "table-of-contents"], [87, "table-of-contents"], [91, "table-of-contents"]], "Implementation": [[80, "implementation"], [88, "implementation"]], "FlatIR Operator": [[80, "flatir-operator"], [88, "flatir-operator"]], "Exposing The Operator": [[80, "exposing-the-operator"], [80, "id1"], [88, "exposing-the-operator"], [88, "id1"]], "Trace Operator And The Public API": [[80, "trace-operator-and-the-public-api"], [88, "trace-operator-and-the-public-api"]], "Trace Operator": [[80, "trace-operator"], [88, "trace-operator"]], "Public API": [[80, "public-api"], [88, "public-api"]], "Testing": [[80, "testing"], [88, "testing"]], "Testing The FlatIR Operator": [[80, "testing-the-flatir-operator"], [88, "testing-the-flatir-operator"]], "Testing The Trace Operator And Public API": [[80, "testing-the-trace-operator-and-public-api"], [88, "testing-the-trace-operator-and-public-api"]], "Integration Tests": [[80, "integration-tests"], [88, "integration-tests"]], "Done!": [[80, "done"], [88, "done"]], "Using Python APIs of MLIR Dialects": [[81, "using-python-apis-of-mlir-dialects"], [89, "using-python-apis-of-mlir-dialects"]], "Choosing The Right Dialect(s)": [[81, "choosing-the-right-dialect-s"], [89, "choosing-the-right-dialect-s"]], "Python Source Code": [[81, "python-source-code"], [89, "python-source-code"]], "Example Usage": [[81, "example-usage"], [89, "example-usage"]], "Design Decisions": [[79, "design-decisions"], [87, "design-decisions"]], "No API Redundancy": [[79, "no-api-redundancy"], [87, "no-api-redundancy"]], "Why FlatIR?": [[79, "why-flatir"], [87, "why-flatir"]], "Why Does to_flat_ir() Rely On Binding To Input/Output Tensors?": [[79, "why-does-to-flat-ir-rely-on-binding-to-input-output-tensors"], [87, "why-does-to-flat-ir-rely-on-binding-to-input-output-tensors"]], "Alternative 1: Returning Operators": [[79, "alternative-1-returning-operators"], [87, "alternative-1-returning-operators"]], "Alternative 2: Functional APIs": [[79, "alternative-2-functional-apis"], [87, "alternative-2-functional-apis"]], "Why Is BaseFlatIROp.to_mlir() Asymmetric With BaseTraceOp.to_flat_ir()?": [[79, "why-is-baseflatirop-to-mlir-asymmetric-with-basetraceop-to-flat-ir"], [87, "why-is-baseflatirop-to-mlir-asymmetric-with-basetraceop-to-flat-ir"]], "Why Not Build On JAX?": [[79, "why-not-build-on-jax"], [87, "why-not-build-on-jax"]], "Architecture": [[77, "architecture"], [85, "architecture"]], "Overview": [[77, "overview"], [85, "overview"]], "Trace": [[77, "trace"], [85, "trace"]], "FlatIR": [[77, "flatir"], [85, "flatir"]], "MLIR": [[77, "mlir"], [85, "mlir"]], "A Day In The Life Of A Tripy Tensor": [[77, "a-day-in-the-life-of-a-tripy-tensor"], [85, "a-day-in-the-life-of-a-tripy-tensor"]], "Tracing": [[77, "tracing"], [85, "tracing"]], "Where Do tp.full() and tp.tanh() Come From?": [[77, "where-do-tp-full-and-tp-tanh-come-from"], [85, "where-do-tp-full-and-tp-tanh-come-from"]], "What Does It Do?": [[77, "what-does-it-do"], [85, "what-does-it-do"]], "The Implicit Frontend Graph": [[77, "the-implicit-frontend-graph"], [85, "the-implicit-frontend-graph"]], "Evaluation": [[77, "evaluation"], [85, "evaluation"]], "Building The Trace": [[77, "building-the-trace"], [85, "building-the-trace"]], "Lowering To FlatIR": [[77, "lowering-to-flatir"], [85, "lowering-to-flatir"]], "Lowering To MLIR": [[77, "lowering-to-mlir"], [85, "lowering-to-mlir"]], "Compilation": [[77, "compilation"], [85, "compilation"]], "Execution": [[77, "execution"], [85, "execution"]], "Quantization": [[83, "quantization"], [91, "quantization"], [75, "quantization"]], "Using Quantized Modules": [[83, "using-quantized-modules"], [91, "using-quantized-modules"]], "Running Quantized Models": [[83, "running-quantized-models"], [91, "running-quantized-models"]], "Calibration With Model Optimizer": [[83, "calibration-with-model-optimizer"], [91, "calibration-with-model-optimizer"]], "Load Scales Into The Tripy Model": [[83, "load-scales-into-the-tripy-model"], [91, "load-scales-into-the-tripy-model"]], "Debugging MLIR-TensorRT backend": [[78, "debugging-mlir-tensorrt-backend"], [86, "debugging-mlir-tensorrt-backend"]], "An Introduction To Tripy": [[82, "an-introduction-to-tripy"], [90, "an-introduction-to-tripy"]], "What Is Tripy?": [[82, "what-is-tripy"], [90, "what-is-tripy"]], "Your First Tripy Program": [[82, "your-first-tripy-program"], [90, "your-first-tripy-program"]], "Lazy Evaluation: Putting Off Work": [[82, "lazy-evaluation-putting-off-work"], [90, "lazy-evaluation-putting-off-work"]], "Organizing Code Using Modules": [[82, "organizing-code-using-modules"], [90, "organizing-code-using-modules"]], "To compile Or Not To compile": [[82, "to-compile-or-not-to-compile"], [90, "to-compile-or-not-to-compile"]], "ones_like": [[62, "ones-like"]], "full": [[56, "full"]], "ones": [[61, "ones"]], "iota_like": [[60, "iota-like"]], "iota": [[59, "iota"]], "full_like": [[57, "full-like"]], "Initializers": [[58, "initializers"]], "Tripy: A Python Programming Model For TensorRT": [[84, "tripy-a-python-programming-model-for-tensorrt"], [9, "tripy-a-python-programming-model-for-tensorrt"]], "Installation": [[84, "installation"], [9, "installation"]], "Quickstart": [[84, "quickstart"], [9, "quickstart"]], "InputInfo": [[3, "inputinfo"]], "dtype": [[5, "dtype"]], "ArgInfo": [[0, "arginfo"]], "config": [[4, "module-tripy.config"]], "Compiler": [[2, "compiler"]], "See also:": [[2, null], [11, null]], "Executable": [[1, "executable"]], "device": [[6, "device"]], "all": [[14, "all"]], "any": [[16, "any"]], "argmin": [[18, "argmin"]], "concatenate": [[20, "concatenate"]], "argmax": [[17, "argmax"]], "cast": [[19, "cast"]], "allclose": [[15, "allclose"]], "User Guides": [[9, null]], "API Reference": [[9, null]], "Developer Guides": [[9, null]], "logger": [[10, "logger"]], "TripyException": [[8, "tripyexception"]], "Parameter": [[12, "parameter"]], "Exception": [[7, "exception"]], "Module": [[11, "module"]], "abs": [[13, "abs"]], "gelu": [[27, "gelu"]], "exp": [[23, "exp"]], "copy": [[21, "copy"]], "cos": [[22, "cos"]], "expand": [[24, "expand"]], "flip": [[25, "flip"]], "gather": [[26, "gather"]], "permute": [[35, "permute"]], "plugin": [[36, "plugin"]], "sigmoid": [[41, "sigmoid"]], "prod": [[37, "prod"]], "relu": [[38, "relu"]], "reshape": [[39, "reshape"]], "rsqrt": [[40, "rsqrt"]], "mean": [[33, "mean"]], "minimum": [[34, "minimum"]], "max": [[31, "max"]], "log": [[29, "log"]], "maximum": [[32, "maximum"]], "masked_fill": [[30, "masked-fill"]], "Functions": [[28, "functions"]], "Shape": [[92, "shape"]], "Tensor": [[93, "tensor"]], "zeros_like": [[66, "zeros-like"]], "triu": [[64, "triu"]], "Conv": [[67, "conv"]], "ConvTranspose": [[68, "convtranspose"]], "Embedding": [[69, "embedding"]], "tril": [[63, "tril"]], "zeros": [[65, "zeros"]], "transpose": [[50, "transpose"]], "var": [[52, "var"]], "unsqueeze": [[51, "unsqueeze"]], "tanh": [[49, "tanh"]], "where": [[53, "where"]], "Operations": [[54, "operations"]], "arange": [[55, "arange"]], "Linear": [[73, "linear"]], "quantize": [[76, "quantize"]], "LayerNorm": [[72, "layernorm"]], "GroupNorm": [[70, "groupnorm"]], "Modules": [[71, "modules"]], "dequantize": [[74, "dequantize"]], "sin": [[43, "sin"]], "split": [[45, "split"]], "sqrt": [[46, "sqrt"]], "softmax": [[44, "softmax"]], "silu": [[42, "silu"]], "sum": [[48, "sum"]], "squeeze": [[47, "squeeze"]]}, "indexentries": {"arginfo (class in tripy)": [[0, "tripy.ArgInfo"]], "dtype (tripy.arginfo attribute)": [[0, "tripy.ArgInfo.dtype"]], "shape_bounds (tripy.arginfo attribute)": [[0, "tripy.ArgInfo.shape_bounds"]], "executable (class in tripy)": [[1, "tripy.Executable"]], "__call__() (tripy.executable method)": [[1, "tripy.Executable.__call__"]], "get_input_info() (tripy.executable method)": [[1, "tripy.Executable.get_input_info"]], "get_output_info() (tripy.executable method)": [[1, "tripy.Executable.get_output_info"]], "load() (tripy.executable class method)": [[1, "tripy.Executable.load"]], "save() (tripy.executable method)": [[1, "tripy.Executable.save"]], "compiler (class in tripy)": [[2, "tripy.Compiler"]], "compile() (tripy.compiler method)": [[2, "tripy.Compiler.compile"]], "inputinfo (class in tripy)": [[3, "tripy.InputInfo"]], "module": [[4, "module-tripy.config"]], "timing_cache_file_path (in module tripy.config)": [[4, "tripy.config.timing_cache_file_path"]], "tripy.config": [[4, "module-tripy.config"]], "bfloat16 (class in tripy)": [[5, "tripy.bfloat16"]], "bool (class in tripy)": [[5, "tripy.bool"]], "dtype (class in tripy)": [[5, "tripy.dtype"]], "float16 (class in tripy)": [[5, "tripy.float16"]], "float32 (class in tripy)": [[5, "tripy.float32"]], "float8 (class in tripy)": [[5, "tripy.float8"]], "int32 (class in tripy)": [[5, "tripy.int32"]], "int4 (class in tripy)": [[5, "tripy.int4"]], "int64 (class in tripy)": [[5, "tripy.int64"]], "int8 (class in tripy)": [[5, "tripy.int8"]], "itemsize (tripy.dtype attribute)": [[5, "tripy.dtype.itemsize"]], "name (tripy.dtype attribute)": [[5, "tripy.dtype.name"]], "device (class in tripy)": [[6, "tripy.device"]], "tripyexception (class in tripy)": [[8, "tripy.TripyException"]], "logger (in module tripy)": [[10, "tripy.logger"]], "module (class in tripy)": [[11, "tripy.Module"]], "load_from_state_dict() (tripy.module method)": [[11, "tripy.Module.load_from_state_dict"]], "named_children() (tripy.module method)": [[11, "tripy.Module.named_children"]], "named_parameters() (tripy.module method)": [[11, "tripy.Module.named_parameters"]], "state_dict() (tripy.module method)": [[11, "tripy.Module.state_dict"]], "parameter (class in tripy)": [[12, "tripy.Parameter"]], "abs() (in module tripy)": [[13, "tripy.abs"]], "all() (in module tripy)": [[14, "tripy.all"]], "allclose() (in module tripy)": [[15, "tripy.allclose"]], "any() (in module tripy)": [[16, "tripy.any"]], "argmax() (in module tripy)": [[17, "tripy.argmax"]], "argmin() (in module tripy)": [[18, "tripy.argmin"]], "cast() (in module tripy)": [[19, "tripy.cast"]], "concatenate() (in module tripy)": [[20, "tripy.concatenate"]], "copy() (in module tripy)": [[21, "tripy.copy"]], "cos() (in module tripy)": [[22, "tripy.cos"]], "exp() (in module tripy)": [[23, "tripy.exp"]], "expand() (in module tripy)": [[24, "tripy.expand"]], "flip() (in module tripy)": [[25, "tripy.flip"]], "gather() (in module tripy)": [[26, "tripy.gather"]], "gelu() (in module tripy)": [[27, "tripy.gelu"]], "log() (in module tripy)": [[29, "tripy.log"]], "masked_fill() (in module tripy)": [[30, "tripy.masked_fill"]], "max() (in module tripy)": [[31, "tripy.max"]], "maximum() (in module tripy)": [[32, "tripy.maximum"]], "mean() (in module tripy)": [[33, "tripy.mean"]], "minimum() (in module tripy)": [[34, "tripy.minimum"]], "permute() (in module tripy)": [[35, "tripy.permute"]], "plugin() (in module tripy)": [[36, "tripy.plugin"]], "prod() (in module tripy)": [[37, "tripy.prod"]], "relu() (in module tripy)": [[38, "tripy.relu"]], "reshape() (in module tripy)": [[39, "tripy.reshape"]], "rsqrt() (in module tripy)": [[40, "tripy.rsqrt"]], "sigmoid() (in module tripy)": [[41, "tripy.sigmoid"]], "silu() (in module tripy)": [[42, "tripy.silu"]], "sin() (in module tripy)": [[43, "tripy.sin"]], "softmax() (in module tripy)": [[44, "tripy.softmax"]], "split() (in module tripy)": [[45, "tripy.split"]], "sqrt() (in module tripy)": [[46, "tripy.sqrt"]], "squeeze() (in module tripy)": [[47, "tripy.squeeze"]], "sum() (in module tripy)": [[48, "tripy.sum"]], "tanh() (in module tripy)": [[49, "tripy.tanh"]], "transpose() (in module tripy)": [[50, "tripy.transpose"]], "unsqueeze() (in module tripy)": [[51, "tripy.unsqueeze"]], "var() (in module tripy)": [[52, "tripy.var"]], "where() (in module tripy)": [[53, "tripy.where"]], "arange() (in module tripy)": [[55, "tripy.arange"]], "full() (in module tripy)": [[56, "tripy.full"]], "full_like() (in module tripy)": [[57, "tripy.full_like"]], "iota() (in module tripy)": [[59, "tripy.iota"]], "iota_like() (in module tripy)": [[60, "tripy.iota_like"]], "ones() (in module tripy)": [[61, "tripy.ones"]], "ones_like() (in module tripy)": [[62, "tripy.ones_like"]], "tril() (in module tripy)": [[63, "tripy.tril"]], "triu() (in module tripy)": [[64, "tripy.triu"]], "zeros() (in module tripy)": [[65, "tripy.zeros"]], "zeros_like() (in module tripy)": [[66, "tripy.zeros_like"]], "conv (class in tripy)": [[67, "tripy.Conv"]], "__call__() (tripy.conv method)": [[67, "tripy.Conv.__call__"]], "bias (tripy.conv attribute)": [[67, "tripy.Conv.bias"]], "dilation (tripy.conv attribute)": [[67, "tripy.Conv.dilation"]], "dtype (tripy.conv attribute)": [[67, "tripy.Conv.dtype"]], "groups (tripy.conv attribute)": [[67, "tripy.Conv.groups"]], "padding (tripy.conv attribute)": [[67, "tripy.Conv.padding"]], "stride (tripy.conv attribute)": [[67, "tripy.Conv.stride"]], "weight (tripy.conv attribute)": [[67, "tripy.Conv.weight"]], "convtranspose (class in tripy)": [[68, "tripy.ConvTranspose"]], "__call__() (tripy.convtranspose method)": [[68, "tripy.ConvTranspose.__call__"]], "bias (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.bias"]], "dilation (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.dilation"]], "dtype (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.dtype"]], "groups (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.groups"]], "padding (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.padding"]], "stride (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.stride"]], "weight (tripy.convtranspose attribute)": [[68, "tripy.ConvTranspose.weight"]], "embedding (class in tripy)": [[69, "tripy.Embedding"]], "__call__() (tripy.embedding method)": [[69, "tripy.Embedding.__call__"]], "dtype (tripy.embedding attribute)": [[69, "tripy.Embedding.dtype"]], "weight (tripy.embedding attribute)": [[69, "tripy.Embedding.weight"]], "groupnorm (class in tripy)": [[70, "tripy.GroupNorm"]], "__call__() (tripy.groupnorm method)": [[70, "tripy.GroupNorm.__call__"]], "bias (tripy.groupnorm attribute)": [[70, "tripy.GroupNorm.bias"]], "dtype (tripy.groupnorm attribute)": [[70, "tripy.GroupNorm.dtype"]], "eps (tripy.groupnorm attribute)": [[70, "tripy.GroupNorm.eps"]], "num_channels (tripy.groupnorm attribute)": [[70, "tripy.GroupNorm.num_channels"]], "num_groups (tripy.groupnorm attribute)": [[70, "tripy.GroupNorm.num_groups"]], "weight (tripy.groupnorm attribute)": [[70, "tripy.GroupNorm.weight"]], "layernorm (class in tripy)": [[72, "tripy.LayerNorm"]], "__call__() (tripy.layernorm method)": [[72, "tripy.LayerNorm.__call__"]], "bias (tripy.layernorm attribute)": [[72, "tripy.LayerNorm.bias"]], "dtype (tripy.layernorm attribute)": [[72, "tripy.LayerNorm.dtype"]], "eps (tripy.layernorm attribute)": [[72, "tripy.LayerNorm.eps"]], "weight (tripy.layernorm attribute)": [[72, "tripy.LayerNorm.weight"]], "linear (class in tripy)": [[73, "tripy.Linear"]], "__call__() (tripy.linear method)": [[73, "tripy.Linear.__call__"]], "bias (tripy.linear attribute)": [[73, "tripy.Linear.bias"]], "dtype (tripy.linear attribute)": [[73, "tripy.Linear.dtype"]], "input_scale (tripy.linear attribute)": [[73, "tripy.Linear.input_scale"]], "quant_dtype (tripy.linear attribute)": [[73, "tripy.Linear.quant_dtype"]], "weight (tripy.linear attribute)": [[73, "tripy.Linear.weight"]], "weight_quant_dim (tripy.linear attribute)": [[73, "tripy.Linear.weight_quant_dim"]], "weight_scale (tripy.linear attribute)": [[73, "tripy.Linear.weight_scale"]], "dequantize() (in module tripy)": [[74, "tripy.dequantize"]], "quantize() (in module tripy)": [[76, "tripy.quantize"]], "shape (class in tripy)": [[92, "tripy.Shape"]], "add() (tripy.shape method)": [[92, "tripy.Shape.add"]], "as_tensor() (tripy.shape method)": [[92, "tripy.Shape.as_tensor"]], "tensor (class in tripy)": [[93, "tripy.Tensor"]], "__add__() (tripy.tensor method)": [[93, "tripy.Tensor.__add__"]], "__eq__() (tripy.tensor method)": [[93, "tripy.Tensor.__eq__"]], "__ge__() (tripy.tensor method)": [[93, "tripy.Tensor.__ge__"]], "__getitem__() (tripy.tensor method)": [[93, "tripy.Tensor.__getitem__"]], "__gt__() (tripy.tensor method)": [[93, "tripy.Tensor.__gt__"]], "__le__() (tripy.tensor method)": [[93, "tripy.Tensor.__le__"]], "__lt__() (tripy.tensor method)": [[93, "tripy.Tensor.__lt__"]], "__matmul__() (tripy.tensor method)": [[93, "tripy.Tensor.__matmul__"]], "__mul__() (tripy.tensor method)": [[93, "tripy.Tensor.__mul__"]], "__ne__() (tripy.tensor method)": [[93, "tripy.Tensor.__ne__"]], "__pow__() (tripy.tensor method)": [[93, "tripy.Tensor.__pow__"]], "__radd__() (tripy.tensor method)": [[93, "tripy.Tensor.__radd__"]], "__rmul__() (tripy.tensor method)": [[93, "tripy.Tensor.__rmul__"]], "__rpow__() (tripy.tensor method)": [[93, "tripy.Tensor.__rpow__"]], "__rsub__() (tripy.tensor method)": [[93, "tripy.Tensor.__rsub__"]], "__rtruediv__() (tripy.tensor method)": [[93, "tripy.Tensor.__rtruediv__"]], "__sub__() (tripy.tensor method)": [[93, "tripy.Tensor.__sub__"]], "__truediv__() (tripy.tensor method)": [[93, "tripy.Tensor.__truediv__"]], "shape (tripy.tensor property)": [[93, "tripy.Tensor.shape"]]}})