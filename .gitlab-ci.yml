stages:
  - lint
  - build-tripy-container
  - test
  - upload


variables:
  DOCKER_HOST: tcp://docker:2375
  # Avoid TLS because it's not enabled in our runner
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_IMAGE: "gitlab-master.nvidia.com:5005/tensorrt/poc/tripy"
  GIT_SUBMODULE_FORCE_HTTPS: "true"
  GIT_SUBMODULE_DEPTH: 0
  GIT_SUBMODULE_PATHS: ":(exclude)third_party/jax"
  GIT_DEPTH: 0


pre-commit:
  stage: lint
  image: $CI_REGISTRY_IMAGE
  tags:
    - tripy-runner
  script:
    - pre-commit run --all-files
  only:
    - merge_requests


build_container:
  stage: build-tripy-container
  image: gitlab-master.nvidia.com:5005/tensorrt/poc/mlir/mlir-tensorrt:tripy
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
    - export GROUP_CICD_TOKEN=$GROUP_CICD_TOKEN
  timeout: 2 hours
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --build-arg gitlab_user=gitlab-ci-token --build-arg gitlab_token=$CI_JOB_TOKEN --cache-from $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  tags:
    - tripy-runner
  rules:
    # Disable this job in nightlies.
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    # NOTE: When changing these conditions, also update the other stages.
    - changes:
      - Dockerfile
      - pyproject.toml
      if: $CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always


l0-if-new-container:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  rules:
    # Disable this job in nightlies.
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    # NOTE: When changing these conditions, also update the other stages.
    - changes:
      - Dockerfile
      - pyproject.toml
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  stage: test
  script:
    - python3 docs/generate_rsts.py
    - sphinx-build build/doc_sources build/docs -c docs/ -j 6 -W
    - pytest tests/ -v -m "l0 or not l1" --durations=15
  artifacts:
    paths:
      - build/docs
  tags:
    - tripy-runner


l0-if-no-new-container:
  image: $CI_REGISTRY_IMAGE:latest
  rules:
    # Disable this job in nightlies.
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    # NOTE: When changing these conditions, also update the other stages.
    - changes:
      - Dockerfile
      - pyproject.toml
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  stage: test
  script:
    - python3 docs/generate_rsts.py
    - sphinx-build build/doc_sources build/docs -c docs/ -j 6 -W
    - pytest tests/ -v -m "l0 or not l1" --durations=15
  artifacts:
    paths:
      - build/docs
  tags:
    - tripy-runner


l1:
  image: $CI_REGISTRY_IMAGE:latest
  # Only run in the automatically scheduled nightlies.
  # If we add more pipeline schedules we'll need to update this logic.
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
  stage: test
  script:
    - pytest tests/ -v -m "l1" --durations=15
  tags:
    - tripy-runner


# TODO: Between L0 and L1 (and any future cadence) we already run the full set of tests.
# It should be possible to push the coverage data from L0 and L1 and then just pull it down
# here, use `coverage combine` and finally generate the report without running tests.
coverage:
  image: $CI_REGISTRY_IMAGE:latest
  # Only run in the automatically scheduled nightlies.
  # If we add more pipeline schedules we'll need to update this logic.
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
  stage: test
  script:
    - pytest --cov=tripy/ --cov-config=.coveragerc tests/ -v --durations=15
    - coverage html -i --omit=tests/*,/usr/lib/*
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public
  tags:
    - tripy-runner


upload-container:
  stage: upload
  image: gitlab-master.nvidia.com:5005/tensorrt/poc/mlir/mlir-tensorrt:tripy
  services:
    - docker:24.0.5-dind
  script:
   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
   - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
   - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
   - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - tripy-runner
  rules:
    # Disable this job in nightlies.
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    # NOTE: changes is probably pointless here since there's no reference point, so GitLab must assume that the files have changed.
    # If we can figure out the original TOT of main prior to the change merging, we could use that as the reference.
    - changes:
      - Dockerfile
      - pyproject.toml
      if: $CI_COMMIT_BRANCH == "main"
      when: always
