From 07f534dac7f915a496265c14745c0bc643185efe Mon Sep 17 00:00:00 2001
From: Sagar Shelke <shelkesagar29@yahoo.com>
Date: Tue, 1 Jul 2025 00:17:04 +0000
Subject: [PATCH] Apply patch 0005

---
 mlir/lib/Dialect/MemRef/IR/MemRefOps.cpp | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/mlir/lib/Dialect/MemRef/IR/MemRefOps.cpp b/mlir/lib/Dialect/MemRef/IR/MemRefOps.cpp
index 11597505e788..66ce4b3638b0 100644
--- a/mlir/lib/Dialect/MemRef/IR/MemRefOps.cpp
+++ b/mlir/lib/Dialect/MemRef/IR/MemRefOps.cpp
@@ -1124,7 +1124,7 @@ struct DimOfMemRefReshape : public OpRewritePattern<DimOp> {
         }
       } // else dim.getIndex is a block argument to reshape->getBlock and
         // dominates reshape
-    }   // Check condition 2
+    } // Check condition 2
     else if (dim->getBlock() != reshape->getBlock() &&
              !dim.getIndex().getParentRegion()->isProperAncestor(
                  reshape->getParentRegion())) {
@@ -1614,9 +1614,11 @@ LogicalResult GlobalOp::verify() {
     // Check that the type of the initial value is compatible with the type of
     // the global variable.
     if (auto elementsAttr = llvm::dyn_cast<ElementsAttr>(initValue)) {
-      Type initType = elementsAttr.getType();
-      Type tensorType = getTensorTypeFromMemRefType(memrefType);
-      if (initType != tensorType)
+      ShapedType initType = cast<ShapedType>(elementsAttr.getType());
+      ShapedType tensorType =
+          cast<ShapedType>(getTensorTypeFromMemRefType(memrefType));
+      if (initType.getShape() != tensorType.getShape() ||
+          initType.getElementType() != tensorType.getElementType())
         return emitOpError("initial value expected to be of type ")
                << tensorType << ", but was of type " << initType;
     }
-- 
2.48.1

