@LIT_SITE_CFG_IN_HEADER@
config.llvm_tools_dir = lit_config.substitute("@LLVM_TOOLS_DIR@")
config.mlir_src_root = "@MLIR_MAIN_SRC_DIR@"

config.mlir_tensorrt_obj_root = "@CMAKE_BINARY_DIR@"
config.mlir_tensorrt_root = "@MLIR_TENSORRT_COMPILER_DIR@"

config.host_os = "@HOST_OS@"
config.host_cc = "@HOST_CC@"
config.host_cxx = "@HOST_CXX@"
config.host_arch = "@HOST_ARCH@"

config.enable_assertions = @MLIR_TRT_ENABLE_ASSERTIONS@

config.enable_bindings_python = @MLIR_TRT_ENABLE_PYTHON@
config.python_executable = "@Python3_EXECUTABLE@"

config.enable_hlo = @MLIR_TRT_ENABLE_HLO@
config.target_tensorrt = @MLIR_TRT_TARGET_TENSORRT@
config.mlir_tensorrt_compile_time_version = "@MLIR_TRT_TENSORRT_VERSION@"
config.target_cpp = @MLIR_TRT_TARGET_CPP@
config.target_lua = @MLIR_TRT_TARGET_LUA@
config.enable_nccl = @MLIR_TRT_ENABLE_NCCL@
config.target_lua = @MLIR_TRT_TARGET_LUA@
config.enable_executor = @MLIR_TRT_ENABLE_EXECUTOR@

config.enable_asan = @ENABLE_ASAN@
config.tensorrt_lib_dir = "@MLIR_TRT_TENSORRT_LIB_DIR@"

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(config, "@MLIR_TENSORRT_COMPILER_DIR@/test/lit.cfg.py")
